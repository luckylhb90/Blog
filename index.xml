<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mogeko`s Blog on Mogeko`s Blog</title>
    <link>https://mogeko.github.io/</link>
    <description>Recent content in Mogeko`s Blog on Mogeko`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 28 Dec 2018 02:58:34 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>描边灯塔插画</title>
      <link>https://mogeko.github.io/2018/041/</link>
      <pubDate>Fri, 28 Dec 2018 02:58:34 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/041/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/041/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/041/Lighthouse.png&#34; alt=&#34;描边灯塔插画&#34; /&gt;&lt;/p&gt;

&lt;p&gt;原图：&lt;a href=&#34;https://mogeko.github.io/images/041/Lighthouse.ai&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;AI&lt;/a&gt;&amp;emsp;&lt;a href=&#34;https://mogeko.github.io/images/041/Lighthouse.svg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SVG&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;以下是使用到的颜色&#34;&gt;以下是使用到的颜色&lt;/h2&gt;

&lt;p&gt;据说&lt;a href=&#34;javascript:void(0);&#34; class=&#34;theme-switch&#34;&gt;黑暗模式&lt;/a&gt;下体验更佳哦  |・ω・｀)&lt;/p&gt;

&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b style=&#34;width:74px;display:inline-block&#34;&gt;边线：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#313C85;&#34;&gt;▉ #313C85&lt;/span&gt;
        &lt;span style=&#34;display:inline-block;color:#ffffff&#34;&gt;结果关灯后又看不清 #313C85 了&lt;/span&gt;
        &lt;span style=&#34;display:inline-block;color:#ffffff&#34;&gt;_(:з」∠)_&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b style=&#34;width:74px;display:inline-block&#34;&gt;底座：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#9497A6;&#34;&gt;▉ #9497A6&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#74808D;&#34;&gt;▉ #74808D&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#EB9558;&#34;&gt;▉ #EB9558&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#7E808D;&#34;&gt;▉ #7E808D&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#DBDBCE;&#34;&gt;▉ #DBDBCE&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#77D9AC;&#34;&gt;▉ #77D9AC&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#B9BBC5;&#34;&gt;▉ #B9BBC5&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#878997;&#34;&gt;▉ #878997&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b style=&#34;width:74px;display:inline-block&#34;&gt;灯塔下部：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#EB9558&#34;&gt;▉ #EB9558&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#DBDBCE&#34;&gt;▉ #DBDBCE&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#E6E7EB&#34;&gt;▉ #E6E7EB&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FF5266&#34;&gt;▉ #FF5266&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFDE38&#34;&gt;▉ #FFDE38&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#F2F2EE&#34;&gt;▉ #F2F2EE&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#C87F4B&#34;&gt;▉ #C87F4B&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#BABAAF&#34;&gt;▉ #BABAAF&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b style=&#34;width:74px;display:inline-block&#34;&gt;瞭望台：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#E6E7EB&#34;&gt;▉ #E6E7EB&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFDE38&#34;&gt;▉ #FFDE38&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFF8CC&#34;&gt;▉ #FFF8CC&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#CACBCE&#34;&gt;▉ #CACBCE&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b style=&#34;width:74px;display:inline-block&#34;&gt;背景：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#F5F7F9&#34;&gt;▉ #F5F7F9&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFE087&#34;&gt;▉ #FFE087&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFF5B3&#34;&gt;▉ #FFF5B3&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;然后以下是画图的具体步骤&#34;&gt;然后以下是画图的具体步骤&lt;/h2&gt;

&lt;p&gt;来源：&lt;a href=&#34;https://www.zcool.com.cn/article/ZODQwOTYw.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;【零基础学Ai教程】描边灯塔插图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作者：&lt;a href=&#34;https://www.zcool.com.cn/u/14824754&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Ai肖博士&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;000&#34; src=&#34;https://mogeko.github.io/images/041/000.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;001&#34; src=&#34;https://mogeko.github.io/images/041/001.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;002&#34; src=&#34;https://mogeko.github.io/images/041/002.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;003&#34; src=&#34;https://mogeko.github.io/images/041/003.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;004&#34; src=&#34;https://mogeko.github.io/images/041/004.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;005&#34; src=&#34;https://mogeko.github.io/images/041/005.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;006&#34; src=&#34;https://mogeko.github.io/images/041/006.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;007&#34; src=&#34;https://mogeko.github.io/images/041/007.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;008&#34; src=&#34;https://mogeko.github.io/images/041/008.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;009&#34; src=&#34;https://mogeko.github.io/images/041/009.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;010&#34; src=&#34;https://mogeko.github.io/images/041/010.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;011&#34; src=&#34;https://mogeko.github.io/images/041/011.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>描边城市插画</title>
      <link>https://mogeko.github.io/2018/040/</link>
      <pubDate>Thu, 27 Dec 2018 17:26:33 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/040/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/040/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;上课时候摸鱼画的 |・ω・｀)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/040/INDIA.png&#34; alt=&#34;描边城市插画&#34; /&gt;&lt;/p&gt;

&lt;p&gt;虽然画得很丑但还是恬不知耻的想把原图贴出来 (*/ω＼*)：&lt;a href=&#34;https://mogeko.github.io/images/040/INDIA.ai&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;AI&lt;/a&gt;&amp;emsp;&lt;a href=&#34;https://mogeko.github.io/images/040/INDIA.svg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SVG&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;以下是使用到的颜色&#34;&gt;以下是使用到的颜色&lt;/h2&gt;

&lt;p&gt;据说&lt;a href=&#34;javascript:void(0);&#34; class=&#34;theme-switch&#34;&gt;黑暗模式&lt;/a&gt;下体验更佳哦  |・ω・｀)&lt;/p&gt;

&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;边线：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#5F4A57&#34;&gt;▉ #5F4A57&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;地面：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#CDB7AA&#34;&gt;▉ #CDB7AA&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#BFA18E&#34;&gt;▉ #BFA18E&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑①：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FF6873&#34;&gt;▉ #FF6873&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FF678B&#34;&gt;▉ #FF678B&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FF878B&#34;&gt;▉ #FF878B&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑②：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFBE80&#34;&gt;▉ #FFBE80&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FB9C6E&#34;&gt;▉ #FB9C6E&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FDD5AB&#34;&gt;▉ #FDD5AB&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑③：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#E1584E&#34;&gt;▉ #E1584E&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#7CC9F0&#34;&gt;▉ #7CC9F0&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFA263&#34;&gt;▉ #FFA263&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FDB967&#34;&gt;▉ #FDB967&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#ED6E65&#34;&gt;▉ #ED6E65&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#A5D9F4&#34;&gt;▉ #A5D9F4&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#51B2E8&#34;&gt;▉ #51B2E8&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑④：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FDB967&#34;&gt;▉ #FDB967&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFB961&#34;&gt;▉ #FFB961&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑⑤：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#F3B28B&#34;&gt;▉ #F3B28B&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#E1584E&#34;&gt;▉ #E1584E&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FED2AD&#34;&gt;▉ #FED2AD&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑⑥：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FED27F&#34;&gt;▉ #FED27F&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#8B7E88&#34;&gt;▉ #8B7E88&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FFE6A5&#34;&gt;▉ #FFE6A5&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#9E909D&#34;&gt;▉ #9E909D&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;建筑⑦：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#968895&#34;&gt;▉ #968895&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#F2B38C&#34;&gt;▉ #F2B38C&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#9E909D&#34;&gt;▉ #9E909D&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#FED2AD&#34;&gt;▉ #FED2AD&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display:flex;&#34;&gt;
    &lt;b  style=&#34;width:60px;display:inline-block;&#34;&gt;背景：&lt;/b&gt;
    &lt;div style=&#34;-webkit-flex:1;flex:1;&#34;&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#DCF6FF&#34;&gt;▉ #DCF6FF&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color: #89E1FF&#34;&gt;▉  #89E1FF&lt;/span&gt;
        &lt;span style=&#34;width:90px;display:inline-block;color:#B8ECFC&#34;&gt;▉ #B8ECFC&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;!-- 
&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#34;9&#34;&gt;Color list&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;地面&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑①&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑②&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑③&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑④&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑⑤&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑⑥&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;建筑⑦&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;背景&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#CDB7AA&#34;&gt;▉ #CDB7AA&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FF6873&#34;&gt;▉ #FF6873&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FFBE80&#34;&gt;▉ #FFBE80&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#E1584E&#34;&gt;▉ #E1584E&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FDB967&#34;&gt;▉ #FDB967&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#F3B28B&#34;&gt;▉ #F3B28B&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FED27F&#34;&gt;▉ #FED27F&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#968895&#34;&gt;▉ #968895&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#DCF6FF&#34;&gt;▉ #DCF6FF&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FF678B&#34;&gt;▉ #FF678B&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#7CC9F0&#34;&gt;▉ #7CC9F0&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#E1584E&#34;&gt;▉ #E1584E&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#8B7E88&#34;&gt;▉ #8B7E88&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#F2B38C&#34;&gt;▉ #F2B38C&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#89E1FF&#34;&gt;▉ #89E1FF&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FFA263&#34;&gt;▉ #FFA263&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; colspan=&#34;8&#34;&gt;&lt;b&gt;高光&lt;/b&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;b&gt;云&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#BFA18E&#34;&gt;▉ #BFA18E&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FF878B&#34;&gt;▉ #FF878B&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FB9C6E&#34;&gt;▉ #FB9C6E&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FDB967&#34;&gt;▉ #FDB967&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FFB961&#34;&gt;▉ #FFB961&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FED2AD&#34;&gt;▉ #FED2AD&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FFE6A5&#34;&gt;▉ #FFE6A5&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#9E909D&#34;&gt;▉ #9E909D&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#B8ECFC&#34;&gt;▉ #B8ECFC&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FDD5AB&#34;&gt;▉ #FDD5AB&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#ED6E65&#34;&gt;▉ #ED6E65&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#9E909D&#34;&gt;▉ #9E909D&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#FED2AD&#34;&gt;▉ #FED2AD&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#DCF6FF&#34;&gt;▉ #DCF6FF&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#A5D9F4&#34;&gt;▉ #A5D9F4&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;span style=&#34;color:#51B2E8&#34;&gt;▉ #51B2E8&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34; nowrap=&#34;nowrap&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;b&gt;边线&lt;/b&gt;&lt;/td&gt;
&lt;td colspan=&#34;8&#34;&gt;&lt;span style=&#34;color:#5F4A57&#34;&gt;▉ #5F4A57&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
 --&gt;

&lt;h2 id=&#34;然后以下是画图的具体步骤&#34;&gt;然后以下是画图的具体步骤&lt;/h2&gt;

&lt;p&gt;来源：&lt;a href=&#34;https://www.zcool.com.cn/article/ZODQwOTYw.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;【零基础学Ai教程】描边灯塔插图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作者：&lt;a href=&#34;https://www.zcool.com.cn/u/14824754&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Ai肖博士&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;000&#34; src=&#34;https://mogeko.github.io/images/040/000.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;001&#34; src=&#34;https://mogeko.github.io/images/040/001.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;002&#34; src=&#34;https://mogeko.github.io/images/040/002.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;003&#34; src=&#34;https://mogeko.github.io/images/040/003.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;004&#34; src=&#34;https://mogeko.github.io/images/040/004.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;005&#34; src=&#34;https://mogeko.github.io/images/040/005.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;006&#34; src=&#34;https://mogeko.github.io/images/040/006.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;007&#34; src=&#34;https://mogeko.github.io/images/040/007.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;008&#34; src=&#34;https://mogeko.github.io/images/040/008.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;009&#34; src=&#34;https://mogeko.github.io/images/040/009.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;010&#34; src=&#34;https://mogeko.github.io/images/040/010.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;011&#34; src=&#34;https://mogeko.github.io/images/040/011.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Student dormitory management</title>
      <link>https://mogeko.github.io/2018/039/</link>
      <pubDate>Sat, 22 Dec 2018 23:30:01 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/039/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/038/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;h1 id=&#34;demand-analysis&#34;&gt;Demand analysis&lt;/h1&gt;

&lt;p&gt;The system is designed to facilitate the management of student residences.&lt;/p&gt;

&lt;p&gt;Provide registration for students and teachers, check the student dormitory number, adjust the dormitory and other functions.&lt;/p&gt;

&lt;p&gt;At the same time, considering the need for maintenance and refurbishment of the dormitory, the system provides the function of submitting and accepting maintenance applications. After the student submits the repair application, the dormitory management will dispatch maintenance personnel to the maintenance.&lt;/p&gt;

&lt;h2 id=&#34;user-classification&#34;&gt;User classification&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Student (Male/Female)&lt;/strong&gt;: Managed by a boarding teacher&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dormitory manager&lt;/strong&gt;: Manage all rooms and students&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintenance personnel&lt;/strong&gt;: Including cleaning, maintenance personnel, etc&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dormitory manager:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check student accommodation&lt;/li&gt;
&lt;li&gt;Reasonable allocation of rooms&lt;/li&gt;
&lt;li&gt;Adjust student dormitory allocation&lt;/li&gt;
&lt;li&gt;Delete students who are no longer staying&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Maintenance personnel:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inquiry repair application form&lt;/li&gt;
&lt;li&gt;Query working hours&lt;/li&gt;
&lt;li&gt;Check the repair area (room id)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;database-design&#34;&gt;Database Design&lt;/h1&gt;

&lt;p&gt;This database includes a total of 5 tables: &lt;strong&gt;student_db, administrator_db, dormitry_db, maintenance_personnel_db, maintenance_application_db&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;student_db&lt;/strong&gt;: &lt;code&gt;{ID, name, sex, room number (room id)}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This table is used to record and manage different kinds of students.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;administrator_db&lt;/strong&gt;: &lt;code&gt;{ID, sex, managed room id}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This table is used to record the student’s boarding teacher and the objects they need to manage.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dormitry_db&lt;/strong&gt;: &lt;code&gt;{ID, types(male or female), sister teacher&#39;s id}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This table is used to record information about the dorms that need to be managed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;maintenance_personnel_db&lt;/strong&gt;: &lt;code&gt;{ID, name, sex, position (project responsible for maintenance), working time, off work time}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This table is used to record information about maintenance personnel, including working hours, etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;maintenance_application_db&lt;/strong&gt;: &lt;code&gt;{room id, application for repair}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This tavle is used to record the repair application submitted by the student and is also the work content of the maintenance staff.&lt;/p&gt;

&lt;h3 id=&#34;contact&#34;&gt;Contact&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Student accommodation: &lt;code&gt;{student_db, dormitry_db}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Dormitory management: &lt;code&gt;{administrator_db, dormitry_db}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Repair application: &lt;code&gt;{student_db, maintenance_application_db}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Dormitory maintenance: &lt;code&gt;{maintenance_personnel_db, maintenance_application_db}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;e-r&#34;&gt;E - R&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;E-R&#34; src=&#34;https://mogeko.github.io/images/039/E-R.png&#34; &gt;&lt;/p&gt;

&lt;h2 id=&#34;table-design&#34;&gt;Table design&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;student_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;列名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;数据类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;允许 Null 值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;u&gt;student_id&lt;/u&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;student_name&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;student_sex&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;room_id&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;administrator_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;列名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;数据类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;允许 Null 值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;u&gt;administrator_id&lt;/u&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;administrator_name&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;administrator_sex&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;dormitry_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;列名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;数据类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;允许 Null 值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;u&gt;room_id&lt;/u&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;dormitry_types&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;administrator_id&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;maintenance_personnel_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;列名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;数据类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;允许 Null 值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;u&gt;maintenance_personne_id&lt;/u&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;maintenance_personnel_name&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;maintenance_personnel_sex&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;working_time&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;datetime&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;off_work_time&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;datetime&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;True&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;maintenance_application_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;列名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;数据类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;允许 Null 值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;u&gt;maintenance_application_id&lt;/u&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;int IDENTITY(1, 1)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;maintenance_application&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;varchar(50)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;room_id&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;maintenance_personnel_id&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;nchar(10)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;work_status&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;bit DEFAULT(0)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id=&#34;database-implementation&#34;&gt;Database implementation&lt;/h2&gt;

&lt;h3 id=&#34;case-data&#34;&gt;Case data&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;student_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;student_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;student_name&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;student_sex&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;room_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0001&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Mogeko&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0002&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Ezie&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;F101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0003&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Washington&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0004&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Licoln&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0005&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Daisy&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;F101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0006&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Trump&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0007&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Noah&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0008&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Lucy&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;F101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0009&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Obama&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M101&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0010&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Lucy&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;F101&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;administrator_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;administrator_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;administrator_name&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;administrator_sex&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;001&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Herrington&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;002&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Van&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;003&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Rossett&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Jade&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;005&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Eva&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;006&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;May&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;dormitry_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;room_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;dormitry_types&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;administrator_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;M101&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;M102&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;M103&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;M104&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;M105&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;F101&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;F102&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;F103&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;F104&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;F105&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;maintenance_personnel_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;maintenance_personnel_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;maintenance_personnel_name&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;maintenance_personnel_sex&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;working_time&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;off_work_time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;001&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Roosevelt&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2018-12-22T09:00:00&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2018-12T22 22:00:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;002&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Kennedy&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;003&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Nannie&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2018-12-22T09:00:00&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2018-12-22T22:00:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;004&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Dawn&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Female&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;maintenance_application_db:&lt;/strong&gt;&lt;/p&gt;

&lt;div  style=&#34;overflow:auto&#34;&gt;
&lt;table style=&#34;width:100%&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;maintenance_application_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;maintenance_application&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;room_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;maintenance_personnel_id&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;work_status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Door damage&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M102&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;001&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Faucet damage&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;F101&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id=&#34;import-case-data&#34;&gt;Import case data&lt;/h2&gt;

&lt;p&gt;Create the tables&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
 Create tables
  - student_db
  - administrator_db
  - dormitry_db
  - maintenance_personnel_db
  - maintenance_application_db
 */
CREATE TABLE student_db
(
student_id nchar(10) NOT NULL PRIMARY KEY,
student_name nchar(10) NOT NULL,
student_sex nchar(10) NOT NULL,
room_id nchar(10) NOT NULL
)
CREATE TABLE administrator_db
(
administrator_id nchar(10) NOT NULL PRIMARY KEY,
administrator_name nchar(10) NOT NULL,
administrator_sex nchar(10) NOT NULL
)
CREATE TABLE dormitry_db
(
room_id nchar(10) NOT NULL PRIMARY KEY,
dormitry_types nchar(10) NOT NULL,
administrator_id nchar(10) NOT NULL
)
CREATE TABLE maintenance_personnel_db
(
maintenance_personnel_id nchar(10) NOT NULL PRIMARY KEY,
maintenance_personnel_name nchar(10) NOT NULL,
maintenance_personnel_sex nchar(10) NOT NULL,
working_time datetime,
off_work_time datetime
)
CREATE TABLE maintenance_application_db
(
maintenance_application_id int IDENTITY(1, 1) PRIMARY KEY,
maintenance_application varchar(50) NOT NULL,
room_id nchar(10) NOT NULL,
maintenance_personnel_id nchar(10),
work_status bit DEFAULT(0) NOT NULL,
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Set &lt;code&gt;FOREIHN KEY&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/* Set the foreign key */

ALTER TABLE STUDENT_DB.dbo.student_db
ADD FOREIGN KEY (room_id)
REFERENCES dormitry_db(room_id)

ALTER TABLE STUDENT_DB.dbo.dormitry_db
ADD FOREIGN KEY (administrator_id)
REFERENCES administrator_db(administrator_id)

ALTER TABLE STUDENT_DB.dbo.maintenance_application_db
ADD FOREIGN KEY (room_id)
REFERENCES dormitry_db(room_id)

ALTER TABLE STUDENT_DB.dbo.maintenance_application_db
ADD FOREIGN KEY (maintenance_personnel_id)
REFERENCES maintenance_personnel_db(maintenance_personnel_id)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert data into the form &lt;code&gt;STUDENT_DB.dbo.administrator_db&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/* Insert data into the form STUDENT_DB.dbo.administrator_db */
INSERT INTO STUDENT_DB.dbo.administrator_db
(administrator_id, administrator_name, administrator_sex)
VALUES(&#39;001&#39;, &#39;Herrington&#39;, &#39;Male&#39;)
INSERT INTO STUDENT_DB.dbo.administrator_db
(administrator_id, administrator_name, administrator_sex)
VALUES(&#39;002&#39;, &#39;Van&#39;, &#39;Male&#39;)
INSERT INTO STUDENT_DB.dbo.administrator_db
(administrator_id, administrator_name, administrator_sex)
VALUES(&#39;003&#39;, &#39;Rossett&#39;, &#39;Male&#39;)
INSERT INTO STUDENT_DB.dbo.administrator_db
(administrator_id, administrator_name, administrator_sex)
VALUES(&#39;004&#39;, &#39;Jade&#39;, &#39;Female&#39;)
INSERT INTO STUDENT_DB.dbo.administrator_db
(administrator_id, administrator_name, administrator_sex)
VALUES(&#39;005&#39;, &#39;Eva&#39;, &#39;Female&#39;)
INSERT INTO STUDENT_DB.dbo.administrator_db
(administrator_id, administrator_name, administrator_sex)
VALUES(&#39;006&#39;, &#39;May&#39;, &#39;Female&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert data into the form &lt;code&gt;STUDENT_DB.dbo.dormitry_db&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/* Insert data into the form STUDENT_DB.dbo.dormitry_db */
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;M101&#39;, &#39;Male&#39;, &#39;001&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;M102&#39;, &#39;Male&#39;, &#39;001&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;M103&#39;, &#39;Male&#39;, &#39;001&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;M104&#39;, &#39;Male&#39;, &#39;002&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;M105&#39;, &#39;Male&#39;, &#39;002&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;F101&#39;, &#39;Female&#39;, &#39;004&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;F102&#39;, &#39;Female&#39;, &#39;004&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;F103&#39;, &#39;Female&#39;, &#39;004&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;F104&#39;, &#39;Female&#39;, &#39;004&#39;)
INSERT INTO STUDENT_DB.dbo.dormitry_db
(room_id, dormitry_types, administrator_id)
VALUES(&#39;F105&#39;, &#39;Female&#39;, &#39;004&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert data into the form &lt;code&gt;STUDENT_DB.dbo.student_db&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/* Insert data into the form STUDENT_DB.dbo.student_db */
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0001&#39;, &#39;Mogeko&#39;, &#39;Male&#39;, &#39;M101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0002&#39;, &#39;Ezie&#39;, &#39;Female&#39;, &#39;F101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0003&#39;, &#39;Washington&#39;, &#39;Male&#39;, &#39;M101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0004&#39;, &#39;Licoln&#39;, &#39;Male&#39;, &#39;M102&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0005&#39;, &#39;Daisy&#39;, &#39;Female&#39;, &#39;F101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0006&#39;, &#39;Trump&#39;, &#39;Male&#39;, &#39;M101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0007&#39;, &#39;Noah&#39;, &#39;Male&#39;, &#39;M102&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0008&#39;, &#39;Lucy&#39;, &#39;Female&#39;, &#39;F101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0009&#39;, &#39;Obama&#39;, &#39;Male&#39;, &#39;M101&#39;)
INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES(&#39;0010&#39;, &#39;Lucy&#39;, &#39;Female&#39;, &#39;F101&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert data into the form &lt;code&gt;STUDENT_DB.dbo.maintenance_application_db&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/* Insert data into the form STUDENT_DB.dbo.maintenance_application_db */
INSERT INTO STUDENT_DB.dbo.maintenance_application_db
(maintenance_application, room_id)
VALUES (&#39;Door damage&#39;, &#39;M102&#39;)
INSERT INTO STUDENT_DB.dbo.maintenance_application_db
(maintenance_application, room_id)
VALUES (&#39;Faucet damage&#39;, &#39;F102&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert data into the form &lt;code&gt;STUDENT_DB.dbo.maintenance_personnel_db&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/* Insert data into the form STUDENT_DB.dbo.maintenance_personnel_db */
INSERT INTO STUDENT_DB.dbo.maintenance_personnel_db
(maintenance_personnel_id, maintenance_personnel_name, maintenance_personnel_sex, working_time, off_work_time)
VALUES(&#39;001&#39;, &#39;Roosevelt&#39;, &#39;Male&#39;, &#39;2018-12-22T09:00:00&#39;, &#39;2018-12-22T22:00:00&#39;)
INSERT INTO STUDENT_DB.dbo.maintenance_personnel_db
(maintenance_personnel_id, maintenance_personnel_name, maintenance_personnel_sex)
VALUES(&#39;002&#39;, &#39;Kennedy&#39;, &#39;Male&#39;)
INSERT INTO STUDENT_DB.dbo.maintenance_personnel_db
(maintenance_personnel_id, maintenance_personnel_name, maintenance_personnel_sex, working_time, off_work_time)
VALUES(&#39;003&#39;, &#39;Nannie&#39;, &#39;Female&#39;, &#39;2018-12-22T09:00:00&#39;, &#39;2018-12-22T22:00:00&#39;)
INSERT INTO STUDENT_DB.dbo.maintenance_personnel_db
(maintenance_personnel_id, maintenance_personnel_name, maintenance_personnel_sex)
VALUES(&#39;004&#39;, &#39;Dawn&#39;, &#39;Female&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example-features&#34;&gt;(Example) Features&lt;/h2&gt;

&lt;p&gt;Check student accommodation information.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Check student accommodation information
INPUT @stu_name -- The name of the student being queried
*/

DECLARE @stu_name nchar(10)
-- Check accommodation information in Mogeko
SET @stu_name = &#39;Mogeko&#39;

SELECT student_id, student_name, student_sex, room_id
FROM STUDENT_DB.dbo.student_db
WHERE student_name=@stu_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Newborn stay.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Newborn stay
INPUT @Stu_id -- The ID of nweborn
INPUT @Stu_name -- The name of newborn
INPUT @Stu_sex -- The gender of newborn
INPUT @room_id -- The room number of newborn
*/

DECLARE @Stu_id nchar(10)
DECLARE @Stu_name nchar(10)
DECLARE @Stu_sex nchar(10)
DECLARE @room_id nchar(10)

-- New student information
SET @Stu_id = &#39;0011&#39;
SET @Stu_name = &#39;Bob&#39;
SET @Stu_sex = &#39;Male&#39;
SET @room_id = &#39;M103&#39;

INSERT INTO STUDENT_DB.dbo.student_db
(student_id, student_name, student_sex, room_id)
VALUES (@Stu_id, @Stu_name, @Stu_sex, @room_id)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Students move out of the bedroom.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Students move out of the bedroom
INPUT Stu_id -- The ID of the student
*/

DECLARE @Stu_id nchar(10)
-- Input the ID of the student
SET @Stu_id = &#39;0011&#39;

DELETE FROM STUDENT_DB.dbo.student_db
WHERE student_id = @Stu_id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Submit a repair request.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Submit a repair request
INPUT @request -- Repair application
INPUT @room_id -- Repair location
*/

DECLARE @requst varchar(50)
DECLARE @room_id nchar(10)

-- Repair application information
SET @requst = &#39;The cabinet was damaged&#39;
SET @room_id = &#39;M101&#39;

INSERT INTO STUDENT_DB.dbo.maintenance_application_db
(maintenance_application, room_id)
VALUES (@requst, @room_id)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check the repair application list.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Check the repair application list
INPUT @staff_name -- Name of the maintenance person
*/

DECLARE @staff_name nchar(10)

-- Input the name of the maintenance person
SET @staff_name = &#39;Roosevelt&#39;

SELECT maintenance_application_id, maintenance_application, room_id
FROM STUDENT_DB.dbo.maintenance_application_db
WHERE (maintenance_personnel_id is NULL) and room_id in (
	SELECT room_id
	FROM STUDENT_DB.dbo.dormitry_db
	WHERE dormitry_types = (
		SELECT maintenance_personnel_sex
		FROM STUDENT_DB.dbo.maintenance_personnel_db
		WHERE maintenance_personnel_name = @staff_name
	)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Accept repair request.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Accept repair request
INPUT @staff_id -- ID of the maintenance person
INPUT @application_id -- ID of the maintenance application
*/

DECLARE @staff_id nchar(10)
DECLARE @application_id int

-- Input the ID of the maintenance person
SET @staff_id = &#39;001&#39;
-- Input the ID of the maintenance application
SET @application_id = 3

UPDATE STUDENT_DB.dbo.maintenance_application_db
SET maintenance_personnel_id = @staff_id
WHERE maintenance_application_id = @application_id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Complete repair.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;/*
Complete repair
INPUT @application_id -- ID of the maintenance application
*/

DECLARE @application_id int

-- Input the ID of the maintenance application
SET @application_id = 3

UPDATE STUDENT_DB.dbo.maintenance_application_db
SET work_status = 1
WHERE maintenance_application_id = @application_id
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>对，这他妈就是生活！</title>
      <link>https://mogeko.github.io/2018/038/</link>
      <pubDate>Tue, 04 Dec 2018 18:58:01 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/038/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/038/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;写一篇《大象席地而坐》的影评。&lt;/p&gt;

&lt;p&gt;说是影评，其实就是对剧中主要人物的一些评价。&lt;/p&gt;

&lt;p&gt;太主观了？主观就他娘的对了！这他妈是老子的博客，老子想他娘的咋写就他妈咋写！！&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;spoiler&#34; &gt;&lt;del&gt;说我写的是垃圾那个鸡巴玩意，你他娘的算个什么鸡巴东西？垃圾你还抄？？做人他娘的能不能要点逼脸？？&lt;/del&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Logo&#34; src=&#34;https://mogeko.github.io/images/038/logo.jpg&#34; &gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;满洲里动物园&lt;/p&gt;

&lt;p&gt;有一只大象&lt;/p&gt;

&lt;p&gt;它他妈整天就坐那&lt;/p&gt;

&lt;p&gt;可能有人老拿叉子扎它&lt;/p&gt;

&lt;p&gt;也可能它就喜欢坐那&lt;/p&gt;

&lt;p&gt;不知道&lt;/p&gt;

&lt;p&gt;然后好多人就跑过去抱着栏杆看&lt;/p&gt;

&lt;p&gt;有人要扔什么吃的过去&lt;/p&gt;

&lt;p&gt;它也不理…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;整部片子篇幅很长，有将近 4 个半小时，据说是目前 (也可能是未来) 华语电影中最长的一部。&lt;/p&gt;

&lt;p&gt;同时也是篇幅很短的一部片子，因为导演在这短短 4 个半小时的时间中塞下了&lt;strong&gt;校园欺凌&lt;/strong&gt;、&lt;strong&gt;养老&lt;/strong&gt;、&lt;strong&gt;师生恋&lt;/strong&gt;、&lt;strong&gt;街头混混&lt;/strong&gt;等诸多元素。它将生活中最丑陋，最荒谬，但又最无奈的事情，一点一点的铺开，完完整整的呈现在你的面前——对，这他娘的就是生活！&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;韦布&#34;&gt;韦布&lt;/h1&gt;

&lt;p&gt;韦布像极了初中时的我——无条件的相信朋友；明明不知道为什么，就是想替他出头；最后惹得一身麻烦。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;韦布&#34; src=&#34;https://mogeko.github.io/images/038/weibu.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;韦布像往常一样，被暴戾的父亲赶出家门——&lt;strong&gt;“你和门口的垃圾桶一样恶心”&lt;/strong&gt;——他早已习惯父亲的粗暴。或许他说的没错，毕竟连教导副主任也说：&lt;strong&gt;“你们这群人在全市最烂的高中，将来你们会有一半的人到市场上去卖烤串”&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;这事本来和韦布没有关系，但为了帮好友出头，和校霸起来冲突。在推搡中，校霸失足从楼梯上跌下，不省人事。故事就这样开始了…&lt;/p&gt;

&lt;p&gt;和我一样，韦布根本就不知道他在干什么。替朋友出头也好，将校霸推下楼也好，都不是他有意而为之的。&lt;strong&gt;他只是觉得自己应该做点什么，但怎么做？他不知道。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;和我一样，韦布明明耸得一逼，还非要打肿脸充胖子。小夫妇找大爷麻烦，韦布挺身向前，却只能威胁一句“把你的车从头划到尾”，被小夫妇打了，连还手都不敢。看见黄玲和教导副主任在一起，心里想着自己应该马上冲进去把教导副主任拖出来揍一顿，身体上却只敢远远的望着。即使在于成的挑唆下，也仅仅是贴了张“你完了”的字条。&lt;/p&gt;

&lt;p&gt;和我一样，韦布想逃走，逃离校霸、于成，逃离暴戾的父亲，逃离他那操蛋的生活。他逃到奶奶那儿，发现奶奶已经悄悄的离开了人世，而住在 10 米外的叔叔竟然对此毫不知情！！那一瞬间，我明白了为何他 (们) 要逃走。这操蛋的生活还有什么好值得留恋的？&lt;strong&gt;每个人都只在乎他自己。&lt;/strong&gt;儿子为了买学区房，想将自己的老子赶出家门。小夫妇焦急的寻找着自己的狗，见人就问：“你有没有看见我的狗？”连一声“谢谢”都不舍得说…&lt;strong&gt;那座城里，人心比天气更寒冷。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;去满洲里看大象。&lt;/p&gt;

&lt;h1 id=&#34;黄玲&#34;&gt;黄玲&lt;/h1&gt;

&lt;p&gt;黄玲知道韦布喜欢她，但她不知道自己到底喜不喜欢韦布。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;黄玲&#34; src=&#34;https://mogeko.github.io/images/038/huangling.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;黄玲觉得妈妈很恶心，同时妈妈也是这么看待她的。她享受不到母爱。她与妈妈每天都要吵架，她在与妈妈吵架时甚至能听到“婊子”之类的词！我不知道被自己的亲身母亲骂“婊子”是什么感受，但我觉得有些人真的不配作父母。&lt;/p&gt;

&lt;p&gt;可能是因为缺少父爱，黄玲在感情上十分依赖比自己年长的人。比如那个与他暧昧了很久的教导副主任，尽管他已婚。&lt;/p&gt;

&lt;p&gt;黄玲同时被血缘上和心理上最亲近的两个人抛弃，决定逃走，去满洲里看大象。&lt;/p&gt;

&lt;h1 id=&#34;大爷&#34;&gt;大爷&lt;/h1&gt;

&lt;p&gt;明明是自己的房子，自己却不得不睡阳台，甚至连阳台都没得睡了。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;大爷&#34; src=&#34;https://mogeko.github.io/images/038/daye.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;儿子想把自己赶出家门。&lt;/strong&gt;尽管儿子不断强调&lt;strong&gt;“我也不是在逼你”&lt;/strong&gt;，尽管儿子打着为了孙女的旗号，但事实就是如此。大爷也不是不能去敬老院，只是敬老院不允许养狗，小狗与自己相依为命多年，实在割舍不下。&lt;/p&gt;

&lt;p&gt;一次遛狗中，自己的小狗被咬死。他带着小狗的尸体去找狗主人理论，只是为了讨个说法。结果狗主人非但不道歉还反咬一口说大爷这是想讹人，甚至指责大爷没能将他的狗带回来。世界上怎么能有这么自私，这么恶心的人呢？！虽然这是在电影中，但却真实得可怕，因为我身边就有相似的案例 &lt;span class=&#34;spoiler&#34; &gt;不说多了，免得惹麻烦&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;因为球杆，被于成一行人找上麻烦。被人堵在墙角，儿子看见了，却什么都没有做。回家后，儿子甚至都没有关心一下自己遇到了什么麻烦，而是说：&lt;strong&gt;“小狗死掉了，你可以安心去敬老院了”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;小狗死掉了，自己也没有理由再在这个家里待下去了，带着孙女，去满洲里看大象。&lt;/p&gt;

&lt;h1 id=&#34;于成&#34;&gt;于成&lt;/h1&gt;

&lt;p&gt;于成绿了自己的兄弟，也看着自己的兄弟跳楼，但他认为这不是他的错。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;于成&#34; src=&#34;https://mogeko.github.io/images/038/yucheng.jpg&#34; &gt;&lt;/p&gt;

&lt;p&gt;于成的生活一直在逃避，不愿承担责任。他不敢面对他的兄弟因他而跳楼的事实，而是将责任推给他兄弟的妻子，说她的虚荣心害死了他。他不敢面对他前女友离开了他的事实，一直纠缠着她，甚至将他兄弟跳楼的责任推给她，“因为你拒绝了我”，&lt;strong&gt;他一直使用着这种说出来连自己都不信的逻辑欺骗自己，逃避自己的责任。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;他说家里人不喜欢他，比起他家里人更喜欢弟弟，“因为他比较像个娘们”。但讽刺的是，他推卸责任的样子才更像是个娘们 (没有歧视女性的意思)&lt;/p&gt;

&lt;p&gt;于成也有善良的一面，例如救火，以及放走韦布。明明说自己谁都不喜欢。&lt;/p&gt;

&lt;p&gt;最终，于成选择了勇敢的面对自己，在阿姨面前承认了自己亲眼看见他跳的楼。&lt;/p&gt;

&lt;h1 id=&#34;小夫妇&#34;&gt;小夫妇&lt;/h1&gt;

&lt;p&gt;算不算什么主要角色，但让我印象深刻，因为实在是太恶心了&lt;/p&gt;

&lt;p&gt;说不出来，自己感受吧&lt;/p&gt;

&lt;video controls=&#34;controls&#34; poster=&#34;https://mogeko.github.io/images/038/part_1.png&#34; style=&#34;width:100%&#34;&gt;
    &lt;source src=&#34;https://f.cangg.cn:82/data/20181271757419987.mp4&#34; type=&#34;video/mp4&#34;&gt;
    &lt;source src=&#34;https://mogeko.github.io/videos/038/part_1.mp4&#34; type=&#34;video/mp4&#34;&gt;
    Your browser does not support the video tag.
&lt;/video&gt;

&lt;h1 id=&#34;满洲里动物园-有一只大象&#34;&gt;满洲里动物园，有一只大象&lt;/h1&gt;

&lt;p&gt;对，这他妈就是生活！你可以逃避，但你永远也逃不掉！&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;去看看，然后再次出发！！&#34; src=&#34;https://f.cangg.cn:82/data/20181271750119486.gif&#34; &gt;&lt;/p&gt;

&lt;p&gt;去看看，然后再次出发！！&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;End&#34; src=&#34;https://mogeko.github.io/images/038/end.jpg&#34; &gt;&lt;/p&gt;

&lt;h1 id=&#34;一些资源&#34;&gt;一些资源&lt;/h1&gt;

&lt;p&gt;本来文艺片在中国就没有多少市场，又加上导演&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%83%A1%E6%B3%A2&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;胡波&lt;/a&gt;自杀事件的影响，这片子想要在国内院线上线更是难上加难。所以在这里分享一点资源，国内院线上线立刻删除。&lt;/p&gt;

&lt;p&gt;视频来自于：&lt;a href=&#34;http://btsbao.com/thread-1173.htm&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;BT骚包&lt;/a&gt;&amp;emsp;字幕来自于：&lt;a href=&#34;https://2.assrt.net/xml/sub/622/622794.xml&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;射手网(伪)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大象席地而坐.导演剪辑版.An.Elephant.Sitting.Still.2018.WEB-DL.1080P.x264.AAC.mkv&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;BT 种子：&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/038/An.Elephant.Sitting.Still.2018.WEB-DL.1080P.x264.AAC.Mandarin-FFansWEB.torrent&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;磁力链接：&lt;input type=&#34;text&#34; name=&#34;magnet&#34; value=&#34;magnet:?xt=urn:btih:D2A4422BB6E2C2BCC45D84A29AE90A4CB0C1ADC7&#34; style=&#34;width: 65%&#34;&gt;&lt;/p&gt;

&lt;p&gt;网盘：&lt;a href=&#34;https://pan.baidu.com/s/1Zgs0TeDlykeDCDakFatnxg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;百度网盘&lt;/a&gt; 密码: ib7x&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;字幕：&lt;/strong&gt;&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/038/An.Elephant.Sitting.Still.2018.srt&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大象席地而坐.导演剪辑版.中文字幕.An.Elephant.Sitting.Still.2018.HD720P.H264.cn.mp4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;上面那个视频比较大，有 6 个多 G，下得比较慢。所以我重新压制了一遍，顺便内嵌了中文字幕。画质只有 720p，码率也比较低，属于刚刚能看的地步。懒得做种了，直接给直连吧。&lt;/p&gt;

&lt;p&gt;下载地址：&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/038/An.Elephant.Sitting.Still.2018.HD720P.H264.cn.mp4&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;网盘：&lt;a href=&#34;https://pan.baidu.com/s/1yR43C3oTPKtD_AmGcyGs_Q&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;百度网盘&lt;/a&gt; 密码: kasg&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash 命令提示符定制指南</title>
      <link>https://mogeko.github.io/2018/037/</link>
      <pubDate>Wed, 28 Nov 2018 15:25:58 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/037/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/037/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;众所周知，Bash 是大多数 GNU/Linux 的默认 shell。作为每个 Linuxer 每天都要接触到的东西，一个漂亮的 Bash 自然是会让人更加的心情舒畅。今天就来教教大家如果自定义 Bash 的&lt;strong&gt;命令提示符&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;bash 默认的&lt;strong&gt;命令提示符&lt;/strong&gt;长这个模样：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mogeko@ubuntu:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中的 &lt;code&gt;mogeko&lt;/code&gt;：是我的用户名，&lt;code&gt;ubuntu&lt;/code&gt;：是我的主机名，&lt;code&gt;~&lt;/code&gt;：是当前目录。&lt;/p&gt;

&lt;p&gt;非常的不美观，并且浪费空间 (用户名和主机名并不是我所关注的东西却占了很大的空间)。好在我们可以通过设置 &lt;code&gt;SP1&lt;/code&gt;：来定制我们的&lt;strong&gt;命令提示符&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&#34;关于-sp1-和-sp2&#34;&gt;关于 SP1 和 SP2&lt;/h1&gt;

&lt;p&gt;简单来说：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SP1：bash 中命令输入的主提示符，如 &lt;code&gt;mogeko@ubuntu:~$&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;SP2：当命令特别长的时候，换行输入时的提示符，默认是 &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;可以在终端中使用 echo 命令查看系统默认参数：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mogeko@ubuntu:~$ echo $PS1
\u@\h:\W$
mogeko@ubuntu:~$ echo $PS2
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;定制命令提示符&#34;&gt;定制命令提示符&lt;/h1&gt;

&lt;h2 id=&#34;举个栗子&#34;&gt;举个栗子&lt;/h2&gt;

&lt;p&gt;所谓定制命令提示符，实际上就是在 &lt;code&gt;~/.bashrc&lt;/code&gt;：文件中改变变量 &lt;code&gt;PS1&lt;/code&gt;：的值。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;在开始之前，我强烈建议你预先备份 &lt;code&gt;~/.bashrc&lt;/code&gt;：文件。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;例如，我们不想关心&lt;strong&gt;主机名&lt;/strong&gt;，只要一个&lt;strong&gt;用户名&lt;/strong&gt;就够了；只需要在 &lt;code&gt;~/.bashrc&lt;/code&gt;：文件的末尾加上以下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export PS1=&amp;quot;\u:\W$&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用命令 &lt;code&gt;:wq&lt;/code&gt;：退出并保存&lt;/p&gt;

&lt;p&gt;然后执行以下命令使刚才的修改生效：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt=&#34;\u:\W$&#34; src=&#34;https://mogeko.github.io/images/037/ex1.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;通过上述例子我们可以看见，&lt;strong&gt;用户名&lt;/strong&gt; 实际上就是参数 &lt;code&gt;\u&lt;/code&gt;：的转义；同样的，&lt;strong&gt;主机名&lt;/strong&gt; 对应的参数是 &lt;code&gt;\h&lt;/code&gt;，&lt;strong&gt;当前目录路径&lt;/strong&gt; 对应的参数是 &lt;code&gt;\W&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我们想定制&lt;strong&gt;命令提示符&lt;/strong&gt;，只需要将各参数按顺序排列组合就可以了。&lt;/p&gt;

&lt;h2 id=&#34;sp1-参数&#34;&gt;SP1 参数&lt;/h2&gt;

&lt;p&gt;如果想知道设置 &lt;code&gt;SP1&lt;/code&gt; 可以使用哪些参数只需要执行一下 &lt;code&gt;man bash&lt;/code&gt;，然后找到 &lt;strong&gt;PROMPTING&lt;/strong&gt; 部分的说明就可以了：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PROMPTING
       When executing interactively, bash displays the primary prompt PS1 when it is ready to read a command, and the secondary prompt PS2 when it needs more input to complete a command. Bash allows these prompt strings to be customized by inserting a number of backslash-escaped special characters that are decoded as follows:
              \a an ASCII bell character (07)
              \d the date in &amp;quot;Weekday Month Date&amp;quot; format (e.g., &amp;quot;Tue May 26&amp;quot;)
              \D{format}
                     the format is passed to strftime(3) and the result is inserted into the prompt string; an empty format results in a locale-specific time representation.
                     The braces are required
              \e an ASCII escape character (033)
              \h the hostname up to the first ‘.’
              \H the hostname
              \j the number of jobs currently managed by the shell
              \l the basename of the shell’s terminal device name
              \n newline
              \r carriage return
              \s the name of the shell, the basename of $0 (the portion following the final slash)
              \t the current time in 24-hour HH:MM:SS format
              \T the current time in 12-hour HH:MM:SS format
              \@ the current time in 12-hour am/pm format
              \A the current time in 24-hour HH:MM format
              \u the username of the current user
              \v the version of bash (e.g., 2.00)
              \V the release of bash, version + patch level (e.g., 2.00.0)
              \w the current working directory, with $HOME abbreviated with a tilde (uses the value of the PROMPT_DIRTRIM variable)
              \W the basename of the current working directory, with $HOME abbreviated with a tilde
              \! the history number of this command
              \# the command number of this command
              \$ if the effective UID is 0, a #, otherwise a $
              \nnn the character corresponding to the octal number nnn
              \\ a backslash
              \[ begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt
              \] end a sequence of non-printing characters
       The command number and the history number are usually different: the history number of a command is its position in the history list, which may include commands restored from the history file(see HISTORY below), while the command number is the position in the sequence of commands executed during the current shell session. After the string is decoded, it is expanded via parameter expansion, command substitution, arithmetic expansion, and quote removal, subject to the value of the promptvars shell option(see the description of the shopt command under SHELL BUILTIN COMMANDS below).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单整理并翻译了一下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\a&lt;/code&gt;：一个 ASCII 响铃字符 (07)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt;：&amp;rdquo;Weekday Month Date&amp;rdquo; 格式的日期 (比如：&amp;rdquo;Tue May 26&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\D{format}&lt;/code&gt;：通过向 strftime 传值后回显自定义日期格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\e&lt;/code&gt;：ASCII 转义字符 (033)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\h&lt;/code&gt;：主机名的第一部分，截取到第一个 &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\H&lt;/code&gt;：主机的全称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\j&lt;/code&gt;：在当前 shell 中管理的进程数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\l&lt;/code&gt;：shell 的终端设备名称的基名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\n&lt;/code&gt;：换行符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\r&lt;/code&gt;：回车符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\s&lt;/code&gt;：shell 的名称，当前脚本的名称，不包括路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\t&lt;/code&gt;：HH:MM:SS 格式的 24 小时制时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\T&lt;/code&gt;：HH:MM:SS 格式的 12 小时制时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\@&lt;/code&gt;：am/pm 格式的 12 小时制时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\A&lt;/code&gt;：HH:MM 格式的 12 小时制时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\u&lt;/code&gt;：当前用户的用户名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\v&lt;/code&gt;：bash 的的版本 (如：-00)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\V&lt;/code&gt;：bash 版本，包括补丁级别 (如：-00.0)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\w&lt;/code&gt;：当前工作目录，包括路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\W&lt;/code&gt;：当前工作目录的基名，不包括路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\!&lt;/code&gt;：当前命令的历史记录编号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\#&lt;/code&gt;：命令编号 (只要您键入内容，它就会在每次显示时累加)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\$&lt;/code&gt;：如果您不是超级用户 (root)，则显示 &amp;ldquo;$&amp;ldquo;；如果您是超级用户，则显示 &amp;ldquo;#&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\nnn&lt;/code&gt;：对应于八进制数 nnn 的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\\&lt;/code&gt;：反斜杠&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\[&lt;/code&gt;：开始一系列非打印字符，可以将终端控制序列嵌入到提示符中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\]&lt;/code&gt;：结束一系列非打印字符&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;为命令提示符着色&#34;&gt;为命令提示符着色&lt;/h1&gt;

&lt;p&gt;上面的参数可以改变命令提示符的内容。其实，命令提示符的颜色也是可以被修改的。&lt;/p&gt;

&lt;p&gt;修改字符颜色需要用到以下两个标记：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;\e[F;Bm&lt;/code&gt;：开始标记&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;\e[0m&lt;/code&gt;：结束标记&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为字符设置颜色，只需要用两个标记将字符框起来就可以了：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;\e[F;Bm需要设置颜色的部分\e[0m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中 &lt;code&gt;F&lt;/code&gt; 为字体颜色，编号 30~37；&lt;code&gt;B&lt;/code&gt; 为背景色，编号 40~47。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;颜色&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#000000; background-color:#000000&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;黑色&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#FF0000; background-color:#FF0000&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;红色&lt;/td&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#00FF00; background-color:#00FF00&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;绿色&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#FFFF00; background-color:#FFFF00&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;黄色&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#0000FF; background-color:#0000FF&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;蓝色&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#FF00FF; background-color:#FF00FF&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;粉紫色&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#00FFFF; background-color:#00FFFF&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;天蓝色&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span style=&#34;color:#FFFFFF; background-color:#FFFFFF&#34;&gt;&amp;emsp;&amp;emsp;&amp;emsp;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;白色&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;例如 ：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export PS1=&amp;quot;\[\e[32m\]\u\[\e[m\]\[\e[33m\]\\$\[\e[m\] &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;pre class=&#34;prettyprint linenums prettyprinted&#34;&gt;&lt;ol class=&#34;linenums&#34;&gt;&lt;li class=&#34;L0&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;str&#34; style=&#34;color:#00FF00&#34;&gt;mogeko&lt;/span&gt;&lt;span class=&#34;str&#34; style=&#34;color:#FFFF00&#34;&gt;$ &lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;

&lt;h1 id=&#34;返回错误值&#34;&gt;返回错误值&lt;/h1&gt;

&lt;p&gt;你也可以使用命令提示符来查看上一条命令执行的结果。&lt;/p&gt;

&lt;p&gt;只需要在 &lt;code&gt;~/.bashrc&lt;/code&gt; 中创建一个函数：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;function nonzero_return() {
	RETVAL=$?
	[ $RETVAL -ne 0 ] &amp;amp;&amp;amp; echo &amp;quot;$RETVAL&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在调用 &lt;code&gt;SP1&lt;/code&gt; 的时候中执行这个函数：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export PS1=&amp;quot;\`nonzero_return\` &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;git-分支信息&#34;&gt;Git 分支信息&lt;/h1&gt;

&lt;p&gt;你甚至可以在命令提示符中查看 Git 的分支信息 (如果当前目录下有 Git 仓库的话)。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;~/.bashrc&lt;/code&gt; 中创建函数：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2&amp;gt; /dev/null | sed -e &#39;/^[^*]/d&#39; -e &#39;s/* \(.*\)/\1/&#39;`
	if [ ! &amp;quot;${BRANCH}&amp;quot; == &amp;quot;&amp;quot; ]
	then
		STAT=`parse_git_dirty`
		echo &amp;quot;[${BRANCH}${STAT}]&amp;quot;
	else
		echo &amp;quot;&amp;quot;
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2&amp;gt;&amp;amp;1 | tee`
	dirty=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;modified:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	untracked=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;Untracked files&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	ahead=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;Your branch is ahead of&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	newfile=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;new file:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	renamed=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;renamed:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	deleted=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;deleted:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	bits=&#39;&#39;
	if [ &amp;quot;${renamed}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;&amp;gt;${bits}&amp;quot;
	fi
	if [ &amp;quot;${ahead}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;*${bits}&amp;quot;
	fi
	if [ &amp;quot;${newfile}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;+${bits}&amp;quot;
	fi
	if [ &amp;quot;${untracked}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;?${bits}&amp;quot;
	fi
	if [ &amp;quot;${deleted}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;x${bits}&amp;quot;
	fi
	if [ &amp;quot;${dirty}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;!${bits}&amp;quot;
	fi
	if [ ! &amp;quot;${bits}&amp;quot; == &amp;quot;&amp;quot; ]; then
		echo &amp;quot; ${bits}&amp;quot;
	else
		echo &amp;quot;&amp;quot;
	fi
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在调用 &lt;code&gt;SP1&lt;/code&gt; 的时候中执行这个函数：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export PS1=&amp;quot;\`parse_git_branch\` &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;我的命令提示符配置&#34;&gt;我的命令提示符配置&lt;/h1&gt;

&lt;p&gt;分享一下我个人使用的命令提示符配置 (复制粘贴到 &lt;code&gt;~/.bashrc&lt;/code&gt; 的末尾)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# PS1&amp;amp;PS2
# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2&amp;gt; /dev/null | sed -e &#39;/^[^*]/d&#39; -e &#39;s/* \(.*\)/\1/&#39;`
	if [ ! &amp;quot;${BRANCH}&amp;quot; == &amp;quot;&amp;quot; ]
	then
		STAT=`parse_git_dirty`
		echo &amp;quot;[${BRANCH}${STAT}]&amp;quot;
	else
		echo &amp;quot;&amp;quot;
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2&amp;gt;&amp;amp;1 | tee`
	dirty=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;modified:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	untracked=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;Untracked files&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	ahead=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;Your branch is ahead of&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	newfile=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;new file:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	renamed=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;renamed:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	deleted=`echo -n &amp;quot;${status}&amp;quot; 2&amp;gt; /dev/null | grep &amp;quot;deleted:&amp;quot; &amp;amp;&amp;gt; /dev/null; echo &amp;quot;$?&amp;quot;`
	bits=&#39;&#39;
	if [ &amp;quot;${renamed}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;&amp;gt;${bits}&amp;quot;
	fi
	if [ &amp;quot;${ahead}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;*${bits}&amp;quot;
	fi
	if [ &amp;quot;${newfile}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;+${bits}&amp;quot;
	fi
	if [ &amp;quot;${untracked}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;?${bits}&amp;quot;
	fi
	if [ &amp;quot;${deleted}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;x${bits}&amp;quot;
	fi
	if [ &amp;quot;${dirty}&amp;quot; == &amp;quot;0&amp;quot; ]; then
		bits=&amp;quot;!${bits}&amp;quot;
	fi
	if [ ! &amp;quot;${bits}&amp;quot; == &amp;quot;&amp;quot; ]; then
		echo &amp;quot; ${bits}&amp;quot;
	else
		echo &amp;quot;&amp;quot;
	fi
}

# return
function get_return() {
    RETVAL=$?
    # Normal
    [ $RETVAL -eq 0 ] &amp;amp;&amp;amp; echo -e &amp;quot;\033[32m▶ \033[0m&amp;quot;
    # Ctrl + C
    [ $RETVAL -eq 130 ] &amp;amp;&amp;amp; echo -e &amp;quot;\033[32m▶ \033[0m&amp;quot;
    # Ctrl + Z
    [ $RETVAL -eq 148 ] &amp;amp;&amp;amp; echo -e &amp;quot;\033[32m▶ \033[0m&amp;quot;

    # Error
    [ $RETVAL -ne 0 ] &amp;amp;&amp;amp; [ $RETVAL -ne 130 ] &amp;amp;&amp;amp; [ $RETVAL -ne 148 ] &amp;amp;&amp;amp; echo -e &amp;quot;\033[31m✗ \033[0m&amp;quot;
}

export PS1=&amp;quot;\`get_return\`\[\e[36m\][\W]\[\e[m\]\[\e[35m\]\`parse_git_branch\`\[\e[m\]\[\e[33m\]\\$\[\e[m\] &amp;quot;
export PS2=&amp;quot;\[\e[32m\]&amp;gt;\[\e[m\] &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;具有以下特点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一位的是上一条命令的返回值 (正常情况下为：&lt;span style=&#34;color:#00FF00&#34;&gt;▶&lt;/span&gt;&amp;emsp;运行出错为：&lt;span style=&#34;color:#FF0000&#34;&gt;✗&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;第二位的是当前的目录&lt;/li&gt;
&lt;li&gt;第三位的是当前目录的 Git 分支信息 (当前目录下没有 Git 仓库时自动隐藏)&lt;/li&gt;
&lt;li&gt;换行输入时的提示符：&lt;span style=&#34;color:#00FF00&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;pre class=&#34;prettyprint linenums prettyprinted&#34; style=&#34;overflow: auto;&#34;&gt;&lt;ol class=&#34;linenums&#34;&gt;&lt;li class=&#34;L0&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FF00&#34;&gt;▶&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FFFF&#34;&gt;[~]&lt;/span&gt;&lt;span class=&#34;pln&#34;  style=&#34;color:#00FFFF&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#FFFF00&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; cd &lt;/span&gt;&lt;span class=&#34;pun&#34;&gt;~/Project/blog&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;li class=&#34;L1&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FF00&#34;&gt;▶&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FFFF&#34;&gt;[blog]&lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color: #FF00FF&#34;&gt;[master]&lt;/span&gt;&lt;span class=&#34;pln&#34;  style=&#34;color:#00FFFF&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#FFFF00&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; gi&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;li class=&#34;L2&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pln&#34;&gt;gi&lt;/span&gt;&lt;span class=&#34;pun&#34;&gt;：未找到命令&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;li class=&#34;L3&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pun&#34; style=&#34;color:#FF0000&#34;&gt;✗&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FFFF&#34;&gt;[blog]&lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color: #FF00FF&#34;&gt;[master]&lt;/span&gt;&lt;span class=&#34;pln&#34;  style=&#34;color:#00FFFF&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#FFFF00&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; \&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;li class=&#34;L4&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pun&#34; style=&#34;color:#00FF00&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; \&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;li class=&#34;L5&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pun&#34; style=&#34;color:#00FF00&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; touch temp&lt;/span&gt;&lt;span class=&#34;pun&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt;txt&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;li class=&#34;L6&#34;&gt;&lt;code class=&#34;language-shell&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FF00&#34;&gt;▶&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; &lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#00FFFF&#34;&gt;[blog]&lt;/span&gt;&lt;span class=&#34;pun&#34;  style=&#34;color: #FF00FF&#34;&gt;[master]&lt;/span&gt;&lt;span class=&#34;pln&#34;  style=&#34;color:#00FFFF&#34;&gt;&lt;span class=&#34;pun&#34;  style=&#34;color:#FFFF00&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;pln&#34;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何使用 ASF 挂卡</title>
      <link>https://mogeko.github.io/2018/036/</link>
      <pubDate>Mon, 26 Nov 2018 14:48:29 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/036/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/036/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;如果你有一台服主机 (&lt;strong&gt;VPS&lt;/strong&gt;、&lt;strong&gt;树莓派&lt;/strong&gt;、&lt;strong&gt;一台被淘汰的 PC&lt;/strong&gt;…) 你会用它做什么？&lt;/p&gt;

&lt;p&gt;玩法有很多，可以用来挖矿赚点零花钱 &lt;span class=&#34;spoiler&#34; &gt;虽然可能连电费都赚不回来&lt;/span&gt;，也可以养只爬虫没事爬爬网页，或者加入 &lt;a href=&#34;https://zh.wikipedia.org/zh-cn/BOINC&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;BOINC&lt;/a&gt; 为世界科研贡献力量… 如果你和我一样，恰好是个 &lt;strong&gt;Steam&lt;/strong&gt; 玩家玩家的话，用闲置的主机来挂 &lt;strong&gt;Steam 集换式卡牌&lt;/strong&gt;似乎是个不错的选择。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://partner.steamgames.com/doc/marketing/tradingcards?l=schinese&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;关于 &lt;strong&gt;Steam&lt;/strong&gt; 集换式卡牌&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;关于-asf-挂卡&#34;&gt;关于 ASF 挂卡&lt;/h1&gt;

&lt;p&gt;众所周知，要在 &lt;strong&gt;Steam&lt;/strong&gt; 上玩游戏，Steam 才会给你相应的&lt;strong&gt;集换式卡牌&lt;/strong&gt;。而在闲置的主机上挂真正的游戏却不怎么现实 (性能不够)。所以，我们要使用 &lt;a href=&#34;https://github.com/JustArchiNET/ArchiSteamFarm&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ASF 挂卡器&lt;/a&gt;来挂卡。&lt;/p&gt;

&lt;p&gt;**关于 &lt;strong&gt;ASF&lt;/strong&gt; (ArchiSteamFarm)：**&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ASF 是由 C# 編寫，能同時掛載多個 Steam 賬號的掛卡工具。其不像 Idle Master 那樣：同一時間只能為一個賬號掛卡，需要後台運行 Steam 客戶端，需啟動額外進程模擬『正在遊戲』狀態。ASF 不需要後台運行任何Steam 客戶端，不需要啟動額外進程，而且能為不限數目的 Steam 賬號同時掛卡。不僅如此，該軟件還能在服務器和其他非桌面電腦上運行，並擁有完整支持 Mono 的特性，這能讓其在 Windows、Linux 以及 OS X 等任何支持 Mono 的操作系統上運行。ASF 存在的基礎要歸功於 &lt;a href=&#34;https://github.com/SteamRE/SteamKit&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;SteamKit2&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;[注] &lt;strong&gt;ArchiSteamFarm V3.0&lt;/strong&gt; 以后的版本已经将 &lt;strong&gt;Mono&lt;/strong&gt; 换成了 &lt;strong&gt;.Net Core&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;简单来说 &lt;strong&gt;ASF&lt;/strong&gt; 就是一个假的 &lt;strong&gt;Steam 客户端&lt;/strong&gt;，它通过“假装玩游戏”，让 &lt;strong&gt;Steam&lt;/strong&gt; 以为你真的在玩某款游戏，从而获得 &lt;strong&gt;Steam 集换式卡牌&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;那么“假装玩游戏”有风险吗？会被 &lt;strong&gt;Steam&lt;/strong&gt; 发现吗？理论上是有被 &lt;strong&gt;Steam&lt;/strong&gt; 发现的可能性的，但到目前为止，还没有听说过谁因为挂卡被封号或者其他处罚的情况，V 社官方也没有明确表态过禁止挂卡 &lt;span class=&#34;spoiler&#34; &gt;挂卡从某种意义上来说是可以增加用户粘性的&lt;/span&gt;，所以基本上可以认为挂卡是安全的。(出了事别找我就对了 | ・ω・’）)&lt;/p&gt;

&lt;p&gt;不过为了保险起见，最好还是将带有 &lt;strong&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/%E7%B6%AD%E7%88%BE%E7%A6%8F%E5%8F%8D%E4%BD%9C%E5%BC%8A%E7%B3%BB%E7%B5%B1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;VAC&lt;/a&gt;&lt;/strong&gt; 的游戏排除在外。&lt;/p&gt;

&lt;h1 id=&#34;asf-的安装与使用&#34;&gt;ASF 的安装与使用&lt;/h1&gt;

&lt;h2 id=&#34;windows-安装&#34;&gt;Windows 安装&lt;/h2&gt;

&lt;p&gt;到&lt;a href=&#34;https://github.com/JustArchiNET/ArchiSteamFarm/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这个页面&lt;/a&gt;去下载最新版的 &lt;strong&gt;ASF&lt;/strong&gt;，然后解压。&lt;/p&gt;

&lt;p&gt;双击 &lt;code&gt;ArchiSteamFarm.exe&lt;/code&gt; 便可运行。&lt;/p&gt;

&lt;h2 id=&#34;gnu-linux-安装&#34;&gt;GNU/Linux 安装&lt;/h2&gt;

&lt;p&gt;首先去&lt;a href=&#34;https://github.com/JustArchiNET/ArchiSteamFarm/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这个页面&lt;/a&gt;获取适合你系统的最新版 &lt;strong&gt;ASF&lt;/strong&gt; 的下载地址。这里以 64 位 x86 架构的 &lt;strong&gt;ArchiSteamFarm V3.4.0.7&lt;/strong&gt; 为例。&lt;/p&gt;

&lt;p&gt;在终端中运行：(如果没有 &lt;code&gt;unzip&lt;/code&gt; 的话先安装 &lt;code&gt;unzip&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir asf
cd asf
wget https://github.com/JustArchiNET/ArchiSteamFarm/releases/download/3.4.0.7/ASF-linux-x64.zip
unzip ASF-linux-x64.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;code&gt;asf&lt;/code&gt; 目录中使用命令 &lt;code&gt;./ArchiSteamFarm&lt;/code&gt; 便可运行。&lt;/p&gt;

&lt;h2 id=&#34;使用-docker-部署&#34;&gt;使用 Docker 部署&lt;/h2&gt;

&lt;p&gt;相对于直接运行，我更喜欢用 &lt;strong&gt;Docker&lt;/strong&gt; 来部署 &lt;strong&gt;ASF&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;同样以 64 位 x86 架构的 &lt;strong&gt;ArchiSteamFarm V3.4.0.7&lt;/strong&gt; 为例。&lt;/p&gt;

&lt;p&gt;在终端中运行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir asf
cd asf
wget https://github.com/JustArchiNET/ArchiSteamFarm/releases/download/3.4.0.7/ASF-generic.zip
unzip ASF-generic.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在 &lt;code&gt;asf&lt;/code&gt; 目录中新建并编写 &lt;code&gt;Dockerfile&lt;/code&gt; 文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM microsoft/dotnet

WORKDIR /home/asf
COPY . /home/asf

EXPOSE 5000
ENV ASPNETCORE_URLS http://*:5000
RUN rm -rf /home/asf/config

ENTRYPOINT [ &amp;quot;dotnet&amp;quot;,&amp;quot;/home/asf/ArchiSteamFarm.dll&amp;quot; ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后运行以下命令来制作 &lt;strong&gt;Docker 镜像&lt;/strong&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build --tag=asf:v1.0.0 .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用以下命令启动容器：(默认你的 &lt;code&gt;asf/config&lt;/code&gt; 目录为 &lt;code&gt;~/asf/config&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -it \
-v ~/asf/config:/home/asf/config \
-p 5000:5000 asf:v1.0.0 --name asf
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;asf-配置&#34;&gt;ASF 配置&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;ASF&lt;/strong&gt; 的配置文件在 &lt;code&gt;config&lt;/code&gt; 目录中。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;config&lt;/code&gt; 目录中新建 / 编辑两个文件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ASF.json&lt;/strong&gt;：全局配置文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bot.json&lt;/strong&gt;：每个帐号的配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bot.json&lt;/strong&gt; 可以有多个，每个文件对应一个 &lt;strong&gt;Steam&lt;/strong&gt; 帐号，文件名可以换成你喜欢的任意名称&lt;/p&gt;

&lt;h2 id=&#34;asf-json&#34;&gt;ASF.json&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
	&amp;quot;AutoRestart&amp;quot;: true,
	&amp;quot;CommandPrefix&amp;quot;: &amp;quot;!&amp;quot;,
	&amp;quot;ConfirmationsLimiterDelay&amp;quot;: 10,
	&amp;quot;ConnectionTimeout&amp;quot;: 60,
	&amp;quot;CurrentCulture&amp;quot;: &amp;quot;zh-CN&amp;quot;,
	&amp;quot;Debug&amp;quot;: false,
	&amp;quot;FarmingDelay&amp;quot;: 15,
	&amp;quot;GiftsLimiterDelay&amp;quot;: 1,
	&amp;quot;Headless&amp;quot;: false,
	&amp;quot;IdleFarmingPeriod&amp;quot;: 8,
	&amp;quot;InventoryLimiterDelay&amp;quot;: 3,
	&amp;quot;IPC&amp;quot;: false,
	&amp;quot;IPCPassword&amp;quot;: null,
	&amp;quot;IPCPrefixes&amp;quot;: [
		&amp;quot;http://127.0.0.1:1242/&amp;quot;
	],
	&amp;quot;LoginLimiterDelay&amp;quot;: 10,
	&amp;quot;MaxFarmingTime&amp;quot;: 10,
	&amp;quot;MaxTradeHoldDuration&amp;quot;: 15,
	&amp;quot;OptimizationMode&amp;quot;: 0,
	&amp;quot;Statistics&amp;quot;: true,
	&amp;quot;SteamMessagePrefix&amp;quot;: &amp;quot;/me &amp;quot;,
	&amp;quot;SteamOwnerID&amp;quot;: 0,
	&amp;quot;SteamProtocols&amp;quot;: 7,
	&amp;quot;UpdateChannel&amp;quot;: 1,
	&amp;quot;UpdatePeriod&amp;quot;: 24,
	&amp;quot;WebLimiterDelay&amp;quot;: 200,
	&amp;quot;WebProxy&amp;quot;: null,
	&amp;quot;WebProxyPassword&amp;quot;: null,
	&amp;quot;WebProxyUsername&amp;quot;: null,
	&amp;quot;Blacklist&amp;quot;: [
		730,
		440,
		221100,
		10,
		240,
		50,
		70,
		500,
		550,
		20,
		30,
		300,
		320,
		40,
		60,
		80,
		360,
		58610,
		222880,
		4000,
		252490,
		2100,
		61700,
		21970,
		1250,
		204300,
		219640,
		10180,
		115300,
		42700,
		2400,
		216250,
		255220,
		65800,
		4920,
		35450,
		44350,
		221040,
		70000,
		282800,
		227100,
		215470,
		222480,
		208090,
		243800,
		17710,
		1200,
		63000,
		63500,
		61730,
		45500,
		63200,
		39000,
		224260,
		223710,
		104900,
		55110,
		247730,
		55100,
		6510,
		214360,
		214630,
		63970,
		42160,
		204080,
		212410,
		209610,
		201070,
		244630,
		91310
	]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单介绍几个重要的配置：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&amp;ldquo;Blacklist&amp;rdquo;&lt;/strong&gt;：不挂卡的游戏 (这里排除了所以带 &lt;strong&gt;VAC&lt;/strong&gt; 的游戏)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&amp;ldquo;SteamOwnerID&amp;rdquo;&lt;/strong&gt;：&lt;strong&gt;ASF&lt;/strong&gt; 所有者的 &lt;code&gt;SteamID&lt;/code&gt;；&lt;strong&gt;ASF&lt;/strong&gt; 所有者可以使用全局指令 (例如：&lt;code&gt;!exit&lt;/code&gt;、&lt;code&gt;!restart&lt;/code&gt;、&lt;code&gt;!update&lt;/code&gt; 等 )
获取 &lt;code&gt;SteamID&lt;/code&gt; 的方法：&lt;a href=&#34;https://zhuanlan.zhihu.com/p/28256575&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;怎么获取 SteamID？&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的配置说明请参考：&lt;a href=&#34;#asf-json-详细配置说明&#34;&gt;ASF.json 详细配置说明&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;bot-json&#34;&gt;Bot.json&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
	&amp;quot;AcceptGifts&amp;quot;: false,
	&amp;quot;AutoSteamSaleEvent&amp;quot;: false,
	&amp;quot;BotBehaviour&amp;quot;: 0,
	&amp;quot;CustomGamePlayedWhileFarming&amp;quot;: null,
	&amp;quot;CustomGamePlayedWhileIdle&amp;quot;: null,
	&amp;quot;Enabled&amp;quot;: true,
	&amp;quot;FarmingOrders&amp;quot;: [],
	&amp;quot;GamesPlayedWhileIdle&amp;quot;: [],
	&amp;quot;HoursUntilCardDrops&amp;quot;: 3,
	&amp;quot;IdlePriorityQueueOnly&amp;quot;: false,
	&amp;quot;IdleRefundableGames&amp;quot;: true,
	&amp;quot;LootableTypes&amp;quot;: [
		1,
		3,
		5
		
	],
	&amp;quot;MatchableTypes&amp;quot;: [
		5
	],
	&amp;quot;OnlineStatus&amp;quot;: 1,
	&amp;quot;PasswordFormat&amp;quot;: 0,
	&amp;quot;Paused&amp;quot;: false,
	&amp;quot;RedeemingPreferences&amp;quot;: 0,
	&amp;quot;SendOnFarmingFinished&amp;quot;: false,
	&amp;quot;SendTradePeriod&amp;quot;: 0,
	&amp;quot;ShutdownOnFarmingFinished&amp;quot;: false,
	&amp;quot;SteamLogin&amp;quot;: null,
    &amp;quot;SteamMasterID&amp;quot;: 0,
	&amp;quot;SteamMasterClanID&amp;quot;: 0,
	&amp;quot;SteamParentalPIN&amp;quot;: &amp;quot;0&amp;quot;,
	&amp;quot;SteamPassword&amp;quot;: null,
	&amp;quot;SteamTradeToken&amp;quot;: null,
	&amp;quot;SteamUserPermissions&amp;quot;: {},
	&amp;quot;TradingPreferences&amp;quot;: 0,
	&amp;quot;UseLoginKeys&amp;quot;: true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单介绍几个重要的配置：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;Enabled&amp;rdquo;&lt;/strong&gt;：是否启用本 &lt;strong&gt;Bot&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;SteamLogin&amp;rdquo;&lt;/strong&gt;：用来登陆 &lt;strong&gt;Steam&lt;/strong&gt; 的用户名；为空着表示在启动时输入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;SteamPassword&amp;rdquo;&lt;/strong&gt;：用来登陆 &lt;strong&gt;Steam&lt;/strong&gt; 的登录密码；为空着表示在启动时输入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;SteamMasterID&amp;rdquo;&lt;/strong&gt;：管理员的 &lt;code&gt;SteamID&lt;/code&gt;；管理员可以使用与 &lt;strong&gt;Bot&lt;/strong&gt; 相关的控制命令。
如果不添加&lt;strong&gt;「小号」&lt;/strong&gt;的话保持默认 (为 0) 即可。
获取 &lt;code&gt;SteamID&lt;/code&gt; 的方法：&lt;a href=&#34;#如何获取-steamid&#34;&gt;如何获取 SteamID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;SteamMasterClanID&amp;rdquo;&lt;/strong&gt;：&lt;strong&gt;Steam&lt;/strong&gt; 群组的 &lt;strong&gt;ID&lt;/strong&gt;；如果有很多 &lt;strong&gt;Bot&lt;/strong&gt; 需要控制，可以创建一个 &lt;strong&gt;Steam&lt;/strong&gt; 群组，然后&lt;strong&gt;群主&lt;/strong&gt;和&lt;strong&gt;管理员&lt;/strong&gt;可在群组聊天中使用与 &lt;strong&gt;Bot&lt;/strong&gt; 相关的控制命令进行控制
如果不添加&lt;strong&gt;「小号」&lt;/strong&gt;的话保持默认 (为 0) 即可。
获取 &lt;strong&gt;Steam&lt;/strong&gt; 群组 &lt;strong&gt;ID&lt;/strong&gt; 的方法：&lt;a href=&#34;#如何获取-steam-群组-id&#34;&gt;如何获取 Steam 群组 ID&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细的配置说明请参考：&lt;a href=&#34;#bot-json-详细配置说明&#34;&gt;Bot.json 详细配置说明&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;asf-命令&#34;&gt;&lt;strong&gt;ASF&lt;/strong&gt; 命令&lt;/h1&gt;

&lt;p&gt;所谓 &lt;strong&gt;ASF 命令&lt;/strong&gt;实际上就是用「主号」给「小号」发送 &lt;strong&gt;Steam&lt;/strong&gt; 消息，来控制指挥 &lt;strong&gt;ASF&lt;/strong&gt; 控制「小号」和  &lt;strong&gt;ASF&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;因为比较常用，所以特地做了一个图片格式的速查表 (右键，保存即可下载) -&amp;gt; &lt;a href=&#34;https://mogeko.github.io/images/036/ASF 命令速查表.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;查看原图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;figure style=&#34;margin: 0px&#34;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th  style=&#34;width: 250px&#34;&gt;命令&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!redeem [Bots] [key1, key2,...]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;指定 &lt;strong&gt;Bot&lt;/strong&gt; 激活给予的全部密钥，同 &lt;code&gt;!r&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!redeem^ [Bots] [key1, key2,...]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;指定 &lt;strong&gt;Bot&lt;/strong&gt; 激活给予的全部密钥，不转发，同 &lt;code&gt;!r^&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!redeem^ [Bots] [Modes] [Keys]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;使指定 &lt;strong&gt;Bot&lt;/strong&gt; 以指定模式激活 key&lt;br /&gt;Modes：&lt;code&gt;FD&lt;/code&gt; = 分发，&lt;code&gt;FF&lt;/code&gt; = 转发，&lt;code&gt;FKMG&lt;/code&gt; = 补缺，&lt;code&gt;SD&lt;/code&gt; = 不分发，&lt;code&gt;SF&lt;/code&gt; = 不转发，&lt;code&gt;SI&lt;/code&gt; = 舍己，&lt;code&gt;SKMG&lt;/code&gt; = 不补缺，&lt;code&gt;V&lt;/code&gt; = 验正跳废&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!addlicense [Bots] [appID1, appID2 ...]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;使指定 &lt;strong&gt;Bot&lt;/strong&gt; 激活指定 ID 的游戏（&lt;strong&gt;仅限于免费游戏&lt;/strong&gt;）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!owns [Bots] [appID,gameName...]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;检查当前 &lt;strong&gt;Bot&lt;/strong&gt; 是否已经拥有游戏，同 &lt;code&gt;!oa&lt;/code&gt; (指定 ID, 游戏名, 部分游戏名)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!ownsall [appID,gameName...]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;检查所有 &lt;strong&gt;Bot&lt;/strong&gt; 是否已经拥有指定 ID 的游戏&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!exit&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;退出 &lt;strong&gt;ASF&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!restart&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;重启 &lt;strong&gt;ASF&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!start [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;启动指定的 &lt;strong&gt;Bot&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!startall&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;启动所有 &lt;strong&gt;Bot&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!resume [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;恢复指定 &lt;strong&gt;Bot&lt;/strong&gt; 的 &lt;code&gt;!pause&lt;/code&gt; 暂停和 &lt;code&gt;!play&lt;/code&gt; 手动挂卡&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!pause [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;永久暂停指定 &lt;strong&gt;Bot&lt;/strong&gt;，直至重启或手动恢复，使用 &lt;code&gt;!resume&lt;/code&gt; 恢复&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!pause~ [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;暂时暂停指定 &lt;strong&gt;Bot&lt;/strong&gt;，自动恢复&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!farm&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;重启当前 &lt;strong&gt;Bot&lt;/strong&gt; 的挂卡模块&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!farm [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;重启指定 &lt;strong&gt;Bot&lt;/strong&gt; 的挂卡模块&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!play [Bots] [appID1, appID2,...]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;切换至手动挂卡，让指定 &lt;strong&gt;Bot&lt;/strong&gt; 启动指定 ID 的游戏。使用 &lt;code&gt;!resume&lt;/code&gt; 恢复自动挂卡模式&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!stop [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;停止指定 &lt;strong&gt;Bot&lt;/strong&gt;，注销登录&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!leave&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;让 &lt;strong&gt;Bot&lt;/strong&gt; 离开当前的群组聊天。该指令只在群组聊天中生效。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!rejoinchat [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;强制指定 &lt;strong&gt;Bot&lt;/strong&gt; 重新加入群聊&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!status [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;输出指定 &lt;strong&gt;Bot&lt;/strong&gt; 的状态，同 &lt;code&gt;!sa&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!statusall&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;输出所有 &lt;strong&gt;Bot&lt;/strong&gt; 以及 &lt;strong&gt;ASF&lt;/strong&gt; 本身的状态&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!loot [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;将指定 &lt;strong&gt;Bot&lt;/strong&gt; 所有 &lt;strong&gt;Steam&lt;/strong&gt; 物品交易给 &lt;strong&gt;SteamMasterID&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!lootall&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;将已启动 &lt;strong&gt;Bot&lt;/strong&gt; 所有 &lt;strong&gt;Steam&lt;/strong&gt; 物品交易给 &lt;strong&gt;SteamMasterID&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!transfer [Bots] [Modes] [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;使指定 &lt;strong&gt;Bot&lt;/strong&gt; 发送某类交易至指定 &lt;strong&gt;Bot&lt;/strong&gt; &lt;br /&gt;Modes：&lt;code&gt;A&lt;/code&gt; = 全部，&lt;code&gt;BG&lt;/code&gt; = 背景，&lt;code&gt;BO&lt;/code&gt; = 卡包，&lt;code&gt;C&lt;/code&gt; = 卡，&lt;code&gt;E&lt;/code&gt; = 表情，&lt;code&gt;F&lt;/code&gt; = 闪卡，&lt;code&gt;G&lt;/code&gt; = 宝珠，&lt;code&gt;U&lt;/code&gt; = 其他&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!unpack [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;将所有补充包存储在指定Bot的库存&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!bl [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;列出指定 &lt;strong&gt;Bot&lt;/strong&gt; 交易模块中的黑名单用户&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!bladd [Bots] [SteamIDs64]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 的黑名单增加用户&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!blrm [Bots] [SteamIDs64]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 的黑名单删除用户&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!ib [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;列出指定 &lt;strong&gt;Bot&lt;/strong&gt; 黑名单中的 apps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!ibadd [Bots] [AppIDs]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 的黑名单中增加 apps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!ibrm [Bots] [AppIDs]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 的黑名单删除 apps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!2fa [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 生成 &lt;strong&gt;2FA 验证&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!2fano [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;否决指定 &lt;strong&gt;Bot&lt;/strong&gt; 所有的验证请求&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!2faoff [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;关闭指定 &lt;strong&gt;Bot&lt;/strong&gt; 的 &lt;strong&gt;2FA 验证&lt;/strong&gt;功能&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!2faok [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;接受指定 &lt;strong&gt;Bot&lt;/strong&gt; 所有的验证请求&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!password [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;显示指定 &lt;strong&gt;Bot&lt;/strong&gt; 加密后的密码 (在使用 PasswordFormat 时)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!iq [Bots]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;列出指定 &lt;strong&gt;Bot&lt;/strong&gt; 的优先队列&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!iqadd [Bots] [AppIDs]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 的优先队列增加 apps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!iqrm [Bots] [AppIDs]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;为指定 &lt;strong&gt;Bot&lt;/strong&gt; 的优先队列删除 apps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!nickname  [Bots] [Nickname]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;改变指定 &lt;strong&gt;Bot&lt;/strong&gt; 的昵称&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!input [Bots] [Type] [Value]&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;给予指定 &lt;strong&gt;Bot&lt;/strong&gt; 输入类型，Headless 模式下工作&lt;br /&gt;Type：DeviceID, Login, Password, SteamGuard, SteamParentalPIN, TwoFactorAuthentication&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!help&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;弹出帮助信息 (链接到 Wiki 指令页面)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!update&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;检查在 GitHub 的更新 (默认每 24 小时进行一次)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;text-align: left;&#34;&gt;!version&lt;/td&gt;&lt;td style=&#34;text-align: left;&#34;&gt;显示当前版本信息&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;附录&#34;&gt;附录&lt;/h1&gt;

&lt;h2 id=&#34;如何获取-steam-群组-id&#34;&gt;如何获取 Steam 群组 ID&lt;/h2&gt;

&lt;p&gt;在你所创建的 &lt;strong&gt;Steam&lt;/strong&gt; 群组的页面的地址末尾添加 &lt;code&gt;/memberslistxml/?xml=1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;例如：&lt;a href=&#34;https://steamcommunity.com/groups/mogeasf/memberslistxml/?xml=1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://steamcommunity.com/groups/mogeasf/memberslistxml/?xml=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后在 &lt;code&gt;&amp;lt;groupID64&amp;gt;&lt;/code&gt; 标签中就可以找到类似于 &lt;strong&gt;103582791462949118&lt;/strong&gt; 的数字，这就是 &lt;strong&gt;Steam&lt;/strong&gt; 群组 &lt;strong&gt;ID&lt;/strong&gt; 了。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Steam 群组 ID&#34; src=&#34;https://mogeko.github.io/images/036/SteamGroupID.png&#34; &gt;&lt;/p&gt;

&lt;h2 id=&#34;如何获取-steamid&#34;&gt;如何获取 SteamID&lt;/h2&gt;

&lt;p&gt;首先打开你的 Steam 个人主页 ([用户名] -&amp;gt; 个人资料)，复制网页地址&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Steam 群组 ID&#34; src=&#34;https://mogeko.github.io/images/036/SteamID_1.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;打开网页：&lt;a href=&#34;http://steamrep.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://steamrep.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在搜索框中粘贴上刚刚复制的网页地址，搜索&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Steam 群组 ID&#34; src=&#34;https://mogeko.github.io/images/036/SteamID_2.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;然后搜索框中的一串数字就是 &lt;code&gt;SteamID&lt;/code&gt; 了&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Steam 群组 ID&#34; src=&#34;https://mogeko.github.io/images/036/SteamID_3.png&#34; &gt;&lt;/p&gt;

&lt;h2 id=&#34;如何注册-steam-网页-api-密匙&#34;&gt;如何注册 Steam 网页 API 密匙&lt;/h2&gt;

&lt;p&gt;点击这个链接 (需要科学上网)：&lt;a href=&#34;https://steamcommunity.com/dev/apikey&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://steamcommunity.com/dev/apikey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;登录，就可以获取生成的网页 API 了&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/036/get_steam_api_1.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/036/get_steam_api_2.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;域名名称&lt;/strong&gt;随便什么是都可以，不影响使用的。&lt;/p&gt;

&lt;h2 id=&#34;asf-详细配置说明&#34;&gt;ASF 详细配置说明&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ASF&lt;/strong&gt; 使用 &lt;code&gt;C#&lt;/code&gt; 开发，所以配置文件中的配置语句也是带有类型的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ASF&lt;/strong&gt; 支持如下类型：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;bool&lt;/strong&gt;：布尔型；只接收 &lt;code&gt;true&lt;/code&gt; 与 &lt;code&gt;false&lt;/code&gt; 数值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;byte&lt;/strong&gt;：字节型；接受 0 至 255 的数字。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ushort&lt;/strong&gt;：无符号短整形；接受 0 至 65535 的数字。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uint&lt;/strong&gt;：无符号整型；接受 0 至 4294967295 的数字。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ulong&lt;/strong&gt;：无符号长整型；接受 0 至 18446744073709551615 的数字。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;string&lt;/strong&gt;：字符串；接受英文字母，需要用双引号 (&amp;ldquo;&amp;rdquo;) 包裹起来。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HashSet&lt;/strong&gt;：无符号数组；接受一个数组。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;asf-json-详细配置说明&#34;&gt;ASF.json 详细配置说明&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;Debug&amp;rdquo;&lt;/strong&gt; (默认：false)：该程序是否以调试模式运作。调试模式中，ASF 将在可执行文件所在位置创建一个特殊的 debug 文件夹，当中能够包含 &lt;strong&gt;ASF&lt;/strong&gt; 与 &lt;strong&gt;Steam&lt;/strong&gt; 服务器之间的完整通讯内容。调试信息能帮助查找关于网络的问题。除非是开发者需要，用户不要用调试模式运行 ASF。ASF 在调试模式下性能会降低，如非开发者要求记录调试日志，不要将其开启。注意：调试日志包含诸如 &lt;strong&gt;Steam&lt;/strong&gt; 登陆密码等敏感信息。所以不要将你的调试日志在任何场所公开。ASF 开发者只会要求将其发送至他的电子邮箱。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;Headless&amp;rdquo;&lt;/strong&gt; (默认：false)：该配置定义程序是否以无标头模式运行。当处在无标头模式中，ASF会假定其在服务器上运行，因此不会尝试读取诸如2FA码、Steam令牌码、密码以及任何需要ASF操作的宝贵数据。该模式对用服务器运行ASF的用户有用，比如在要求2FA码时，ASF将静默终止操作并停用账号。除非用户在服务器上使用ASF，并确认其能够在非无标头模式下运作，否则请将该配置禁用。无标头模式下将拒绝任何用户的干预，你的账户在需要你的协助的情况下不会启动。这在服务器状态下有用，能够中止任何要求凭证的操作，而非一直等待玩家提供相应信息。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;AutoUpdates&amp;rdquo;&lt;/strong&gt; (默认：true)：是否开启自动更新。如果使用 Docker 部署可以考虑关闭，因为 Docker 不允许容器自动重启。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;AutoRestart&amp;rdquo;&lt;/strong&gt; (默认：true)：是否在更新后自动重启。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;UpdateChannel&amp;rdquo;&lt;/strong&gt; (默认：1)：该配置定义自动更新的通道，目前 &lt;strong&gt;ASF&lt;/strong&gt; 支持两种通道 &lt;code&gt;1&lt;/code&gt; 为稳定版，&lt;code&gt;2&lt;/code&gt; 为实验版。稳定版通道是默认的发布通道，适合大多数用户。实验版通道不单提供稳定版，还包含为高阶用户及其他开发者用来测试新特性、验证bug修复或是给予未来计划特性反馈的预发布版。实验版通常包含未被修复的 bug，尚处在开发中的特性或是重写的实现。如果你不认为自己是高阶用户，请保持默认的 &lt;code&gt;1&lt;/code&gt;（稳定版）更新通道。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;SteamProtocol&amp;rdquo;&lt;/strong&gt; (默认：6)：该配置定义 &lt;strong&gt;ASF&lt;/strong&gt; 内置 &lt;strong&gt;Steam&lt;/strong&gt; 客户端所用的网络协议。目前仅支持2种数值 - 6代表特定的TCP协议，17代表特定的UDP协议。使用其他数值结果都是采用默认数值6。在你尝试应对特定防火墙，或是尝试设置代理时，从TCP切换到UDP可能会有效。UDP Steam协议目前尚为试验性功能，使用请自担风险。除非你有充足的理由修改该配置，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;SteamOwnerID&amp;rdquo;&lt;/strong&gt; (默认：0)：&lt;strong&gt;ASF&lt;/strong&gt; 所有者的 &lt;code&gt;SteamID&lt;/code&gt;；&lt;strong&gt;ASF&lt;/strong&gt; 所有者可以使用全局指令 (例如：&lt;code&gt;!exit&lt;/code&gt;、&lt;code&gt;!restart&lt;/code&gt;、&lt;code&gt;!update&lt;/code&gt; 等 )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;MaxFarmingTime&amp;rdquo;&lt;/strong&gt; (默认：10)：最大挂卡时间。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;IdleFarmingPeriod&amp;rdquo;&lt;/strong&gt; (默认：3)：当ASF没有任何游戏可挂卡时，它会以 &lt;strong&gt;&amp;ldquo;IdleFarmingPeriod&amp;rdquo;&lt;/strong&gt; 配置中设定小时周期，周期性检查是否有新游戏需要挂卡。数值设定为 &lt;code&gt;0&lt;/code&gt; 可禁用该特性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;FarmingDelay&amp;rdquo;&lt;/strong&gt; (默认：3)：挂卡延迟。ASF为了正常运作，会以 &lt;strong&gt;&amp;ldquo;FarmingDelay&amp;rdquo;&lt;/strong&gt; 设定的分钟内定期检查目前挂卡的游戏，判断该游戏是否挂卡完毕。将该数值设置过低会导致发送过多的 &lt;strong&gt;Steam&lt;/strong&gt; 请求，设置过高会让 &lt;strong&gt;ASF&lt;/strong&gt; 在游戏挂卡完毕后依然继续为其挂卡。默认值应该适用于多数用户，不过若是你有许多 &lt;strong&gt;Bot&lt;/strong&gt; 运行，可能需要将其延长至 30 分钟以限制过多的 &lt;strong&gt;Steam&lt;/strong&gt; 请求。由于 &lt;strong&gt;ASF&lt;/strong&gt; 采用基于事件的机制，其会在账户有新物品时检查徽章页面，所以通常我们就不需要按照固定周期进行检查，但对于 &lt;strong&gt;Steam&lt;/strong&gt; 网络传达的信息也不能完全信赖 - 这也就意味着还是需要周期性检查（在 &lt;strong&gt;Steam&lt;/strong&gt; 网络不知会物品掉落信息等情况下）。除非你有足够的理由编辑该选项，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;LoginLimiterDelay&amp;rdquo;&lt;/strong&gt; (默认：7)：登陆间隔延迟。如上述提到的那样，Steam 拥有登录请求的数目限制。同时也包含短时间内的过多登录。ASF 通过 &lt;strong&gt;&amp;ldquo;LoginLimiterDelay&amp;rdquo;&lt;/strong&gt; 设定的秒数来限定两次连续登录的时间间隔。默认值 &lt;code&gt;7&lt;/code&gt; 的设定基于同时连接 100 个 &lt;strong&gt;Bot&lt;/strong&gt; 的情况考量，也应该满足大多数用户的需求。用户可能会因为拥有少量 &lt;strong&gt;Bot&lt;/strong&gt; 的情况下降低数值，甚至将其更改为 &lt;code&gt;0&lt;/code&gt;，这时候 &lt;strong&gt;ASF&lt;/strong&gt; 将无视延迟并很快连接 Steam。这里需要警示一下，设定太低可能会导致 &lt;strong&gt;Steam&lt;/strong&gt; 暂时封禁你的 IP，让所有的登陆都会出现 「InvalidPassword（无效密码）」报错。除非你有充足的理由修改该配置，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;InventoryLimiterDelay&amp;rdquo;&lt;/strong&gt; (默认：3)：物品请求延长。与上述配置类似，获取 &lt;strong&gt;Steam&lt;/strong&gt; 物品栏信息同样拥有频数限制，需要在物品请求中加入一定间隙。ASF 将确保每次物品请求至少留有 &lt;strong&gt;&amp;ldquo;InvetoryLimiterDelay&amp;rdquo;&lt;/strong&gt; 设置的秒数间隙。默认值 &lt;code&gt;3&lt;/code&gt; 是基于同时连接 100 个 &lt;strong&gt;Bot&lt;/strong&gt; 的情况考量，也应该满足大多数用户的需求。用户可能会因为拥有少量Bot的情况下降低数值，甚至将其更改为 &lt;code&gt;0&lt;/code&gt;。这是 &lt;strong&gt;ASF&lt;/strong&gt; 将无视延迟并更快地获取steam物品信息。需要警示的是，将该数值设置过低会导致Steam暂时封禁你的IP，结果就是所有物品请求失败。除非你有充足的理由修改该配置，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;ForceHttp&amp;rdquo;&lt;/strong&gt; (默认：false)：默认情况下 &lt;strong&gt;ASF&lt;/strong&gt; 会优先使用 https 协议。然而，极少数情况下，你可能想要从 https 切换回 http 这种兼容性更好的方式。这时候可以将 &lt;strong&gt;&amp;ldquo;ForceHttp&amp;rdquo;&lt;/strong&gt; 数值设为 &lt;code&gt;true&lt;/code&gt;。使用该设置并不确保 &lt;strong&gt;ASF&lt;/strong&gt; 所有请求都以 htt p发送，一些服务（比如 GitHub api）仅支持 https。这种情况下，没有办法通过 http 使用这些服务，ASF 会直接拒绝发送 https 请求，其结果就是部分请求失败。如果你并不在调试网络，强烈推荐继续使用安全且加密的 https。除非你有充足的理由修改该配置，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;HttpTimeout&amp;rdquo;&lt;/strong&gt; (默认：60)：该配置定义 &lt;strong&gt;ASF&lt;/strong&gt; 发送 HTTP(S) 请求的间隙，单位为秒。默认数值 &lt;code&gt;60&lt;/code&gt; 应该适合大多数用户，然而，如果你的网络传输过慢，可能会想提升该数值（比如 &lt;code&gt;90&lt;/code&gt;）。要记住更大的数值并非修复与 &lt;strong&gt;Steam&lt;/strong&gt; 服务器连接缓慢或是中止的神药，有时候也不得不接受 &lt;strong&gt;Steam&lt;/strong&gt; 服务器无响应并之后尝试连接的事实。将该数值设置过高会无故等待，并降低全局性能。除非你有充足的理由修改该配置，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string] &amp;ldquo;WCFHostname&amp;rdquo;&lt;/strong&gt; (默认：&lt;code&gt;localhost&lt;/code&gt;)：主机名，也是“全局地址”，由 WCF 使用。该配置仅在 WCF 启动时生效。ASF 默认仅仅监听来自&lt;code&gt;localhost&lt;/code&gt; 地址以确保没有其他机器能够访问。这是一道安全措施，进入 WCF 界面可能会让攻击者掌管你的 &lt;strong&gt;ASF&lt;/strong&gt; 进程，并带来极大影响。然而，当你清楚自己要做什么，比如限制 WCF 的链接，使用类似 iptables 的功能，可能会将该配置（自担风险）限制设为较为宽松，比如设置 &amp;ldquo;0.0.0.0&amp;rdquo; 让任意网络地址启动 WCF。需记住该配置需要在服务器与客户端上（如果两者不在一台机器上）正确设置。除此以外，用户还可使用数值 &lt;code&gt;null&lt;/code&gt;。这将导致 &lt;strong&gt;ASF&lt;/strong&gt; 每次启动都会询问该配置（如果你不想暴露服务器的 IP，这可能是有效的安全手段）。除非你有充足的理由修改该配置，请将其保持默认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[ushort] &amp;ldquo;WCFPort&amp;rdquo;&lt;/strong&gt; (默认：1242)：WCF 运行的端口。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;LogToFile&amp;rdquo;&lt;/strong&gt; (默认：true)：该配置定义 &lt;strong&gt;ASF&lt;/strong&gt; 是否应该保留最近运行的 log.txt 文件。之前已经说明，日志文件用于分析 &lt;strong&gt;ASF&lt;/strong&gt; 行为时十分有用，也是汇报 bug 时的关键。不过另一方面，如果用户有许多 &lt;strong&gt;Bot&lt;/strong&gt;，日志文件体积可能会快速增长，为了不让 &lt;strong&gt;ASF&lt;/strong&gt; 将所有内容记录在日志中，你可能想要重定向标准输出（stdout）至别处。比如说，使用 &lt;code&gt;grep&lt;/code&gt; 进行过滤。这种情况下，你并不对日志文件感兴趣，而且有自己的方式记录日志，便可以将日志记录禁用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;Statistics&amp;rdquo;&lt;/strong&gt; (默认：true)：该配置定义 &lt;strong&gt;ASF&lt;/strong&gt; 是否启用统计。统计帮助 &lt;strong&gt;ASF&lt;/strong&gt; 开发者提供开发周期的重要信息。如果你想要看到新版本出炉，bug 被修复，以及实现的新特性，请将其保持在默认数值 &lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[HashSet] Blacklist&lt;/strong&gt;：不挂卡的游戏&lt;/p&gt;

&lt;h3 id=&#34;bot-json-详细配置说明&#34;&gt;Bot.json 详细配置说明&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;Enabled&amp;rdquo;&lt;/strong&gt; (默认：false)：该 &lt;strong&gt;Bot&lt;/strong&gt; 是否启&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;StartOnLaunch&amp;rdquo;&lt;/strong&gt; (默认：true)：该 &lt;strong&gt;Bot&lt;/strong&gt; 是否在 &lt;strong&gt;ASF&lt;/strong&gt; 启动后自动启用。如果为 &lt;code&gt;false&lt;/code&gt; 则需要使用 &lt;code&gt;!start&lt;/code&gt; 命令手动启动&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string] &amp;ldquo;SteamLogin&amp;rdquo;&lt;/strong&gt; (默认：null)：用来登陆 &lt;strong&gt;Steam&lt;/strong&gt; 的用户名；为空着表示在启动时输入&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string] &amp;ldquo;SteamPassword&amp;rdquo;&lt;/strong&gt; (默认：null)：用来登陆 &lt;strong&gt;Steam&lt;/strong&gt; 的登录密码；为空着表示在启动时输入&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string] &amp;ldquo;SteamParentalPIN&amp;rdquo;&lt;/strong&gt; (默认：&amp;rdquo;0&amp;rdquo;)：家长控制 PIN&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string]  &amp;ldquo;SteamApiKey&amp;rdquo;&lt;/strong&gt; (默认：null)：你的 &lt;strong&gt;Steam 网页 API 密钥&lt;/strong&gt;；&lt;a href=&#34;https://steamcommunity.com/dev/apikey&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;点击这里&lt;/a&gt;生成。可用于与 &lt;strong&gt;&amp;ldquo;SteamTradeMatcher&amp;rdquo;&lt;/strong&gt; 配合自动接收交易请求。API 密钥仅对生成该密钥的账户有用，不能将同一密钥用于多个 &lt;strong&gt;Bot&lt;/strong&gt;，每个 &lt;strong&gt;Bot&lt;/strong&gt; 都拥有自己独有的 API 密钥。另外该配置并不强制要求填写，ASF 会在默认值 null 的情况下正常运作，但这样会削减部分需要密钥的功能，比如自动接收交易请求。&lt;a href=&#34;#如何注册-steam-网页-api-密匙&#34;&gt;如何注册 Steam 网页 API 密匙&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[ulong]  &amp;ldquo;SteamMasterID&amp;rdquo;&lt;/strong&gt; (默认：0)：管理员的 &lt;code&gt;SteamID&lt;/code&gt;；管理员可以使用与 &lt;strong&gt;Bot&lt;/strong&gt; 相关的控制命令。如果不添加&lt;strong&gt;「小号」&lt;/strong&gt;的话保持默认即可。&lt;a href=&#34;#如何获取-steamid&#34;&gt;如何获取 SteamID&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[ulong]  &amp;ldquo;SteamMasterClanID&amp;rdquo;&lt;/strong&gt; (默认：0)：&lt;strong&gt;Steam&lt;/strong&gt; 群组的 &lt;strong&gt;ID&lt;/strong&gt;；如果有很多 &lt;strong&gt;Bot&lt;/strong&gt; 需要控制，可以创建一个 &lt;strong&gt;Steam&lt;/strong&gt; 群组，然后&lt;strong&gt;群主&lt;/strong&gt;和&lt;strong&gt;管理员&lt;/strong&gt;可在群组聊天中使用与 &lt;strong&gt;Bot&lt;/strong&gt; 相关的控制命令进行控制。如果不添加&lt;strong&gt;「小号」&lt;/strong&gt;的话保持默认即可。&lt;a href=&#34;#如何获取-steam-群组-id&#34;&gt;如何获取 Steam 群组 ID&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;CardDropsRestricted&amp;rdquo;&lt;/strong&gt; (默认：false)：该帐号是否有&lt;strong&gt;卡牌掉落&lt;/strong&gt; (游玩 2 小时以上才会掉卡)。新规则中，好像所有的帐号都有这个限制了，最好开启&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;DismissInventoryNotification&amp;rdquo;&lt;/strong&gt; (默认：true)：关闭每张掉落的卡牌都会触发物品通知。设置为 &lt;code&gt;false&lt;/code&gt; 的情况下，每张掉落的卡牌都会触发物品通知，Steam 通知系统会告诉你收到了新物品。这可能会相当扰人，而且也没太大意义，因此 &lt;strong&gt;ASF&lt;/strong&gt; 默认将其关闭。如果你仍然想接收这些信息，可将该选项切换为 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;FarmOffline&amp;rdquo;&lt;/strong&gt; (默认：false)：是否开启「离线挂卡」。挂卡会让你的 &lt;strong&gt;Steam&lt;/strong&gt; 状态显示“当前正在游戏”，这可能会误导你的朋友，让他们以为你真的在玩这款游戏。离线挂卡就能解决这个问题，在你用 &lt;strong&gt;ASF&lt;/strong&gt; 挂卡时，账号不会显示正在玩某款游戏。离线挂卡依然会增加被挂游戏的游戏时长，并会在个人资料的“最新动态”中显示出来。&lt;/p&gt;

&lt;p&gt;**[bool]  &amp;ldquo;HandleOfflineMessages&amp;rdquo; **(默认：false)：是否接收离线消息；配合 &lt;strong&gt;&amp;ldquo;FarmOffline&amp;rdquo;&lt;/strong&gt; 使用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;AcceptGifts&amp;rdquo;&lt;/strong&gt; (默认：false)：自动接收所有礼物&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;SteamTradeMatcher&amp;rdquo;&lt;/strong&gt; (默认：false)：自动接收交易请求；需要配合 &lt;strong&gt;&amp;ldquo;SteamApiKey&amp;rdquo;&lt;/strong&gt; 使用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;IsBotAccount&amp;rdquo;&lt;/strong&gt; (默认：false)：是否为「小号」&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;ForwardKeysToOtherBots&amp;rdquo;&lt;/strong&gt; (默认：false)：是否转发密匙 (激活码)。转发密匙在拥有 2 个以上帐号的情况下有用。如果为 &lt;code&gt;true&lt;/code&gt;，Bot 将会在激活失败 (已拥有) 的情况下将密匙发送给其他 &lt;strong&gt;Bot&lt;/strong&gt; 激活。这样很容易触发：「 (短期内) 激活失败次数过多」，慎用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool]  &amp;ldquo;DistributeKeys&amp;rdquo;&lt;/strong&gt; (默认：false)：分发密匙 (激活码)。如果为 &lt;code&gt;true&lt;/code&gt;，Bot 接收密匙并尝试激活接收到的第一个密匙，无论成功失败，将剩下的密匙转发给其他 &lt;strong&gt;Bot&lt;/strong&gt; 激活，以此类推。可以在一定程度上减少触发：「 (短期内) 激活失败次数过多」的可能。但是 &lt;strong&gt;&amp;ldquo;ForwardKeysToOtherBots&amp;rdquo;&lt;/strong&gt; 会影响这个操作，多数情况你可能只想启用两种配置之一，如果这两个配置被同时启用，那么已经激活该游戏的 &lt;strong&gt;Bot&lt;/strong&gt; 在收到密钥后还会将其转发给另一个 &lt;strong&gt;Bot&lt;/strong&gt;，那么就要注意发送的密钥必须小于 &lt;strong&gt;Bot&lt;/strong&gt; 数量才行。如果你不确定是否该启用这项特性，请将其保持默认值 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;UseAsfAsMobileAuthenticator&amp;rdquo;&lt;/strong&gt; (默认：false)：是否将ASF用作手机认证器，既是否为账号启用「ASF 2FA」机制。该特性相当复杂，你可以&lt;a href=&#34;https://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;点击这里&lt;/a&gt;获知更多信息。该特性可能会锁死你的账号，因此不要在未充分理解「ASF 2FA」的情况下使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;ShutdownOnFarmingFinished&amp;rdquo;&lt;/strong&gt; (默认：false)：是否挂卡结束后关闭。ASF 在启动后会一直“占据”账号。当指定账号挂卡结束后，ASF 还会进行周期性检查（&lt;strong&gt;&amp;ldquo;IdleFarmingPeriod&amp;rdquo;&lt;/strong&gt; 设定的小时数），如果该账号添加了新游戏，那么将会继续进行挂卡，这过程不用重启进程。这对多数用户来说很有用，毕竟ASF能够自动继续挂卡。然而，你可能会想在账号挂卡结束后停止该进程，那可以将该配置设置为 &lt;code&gt;true&lt;/code&gt; 来实现。启用之后，ASF 在挂卡完毕后会注销账号，不会再周期性检查或是启用账号。当全部 &lt;strong&gt;Bot&lt;/strong&gt; 挂卡完毕后，ASF 进程也将完全退出。如果你不确定是否该启用这项特性，请将其保持默认值 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[bool] &amp;ldquo;SendOnFarmingFinished&amp;rdquo;&lt;/strong&gt; (默认：false)：挂卡结束后发送交易。当某个账号挂卡完毕后，其会自动向 &lt;strong&gt;&amp;ldquo;SteamMasterID&amp;rdquo;&lt;/strong&gt; 发起全部挂卡所得的交易请求，这项功能十分便利。该选项的作用与 &lt;code&gt;!loot&lt;/code&gt; 指令一样，因此需要设置 &lt;strong&gt;&amp;ldquo;SteamMasterID&amp;rdquo;&lt;/strong&gt;，同时还需要设置下方介绍的 &lt;strong&gt;&amp;ldquo;SteamTradeToken&amp;rdquo;&lt;/strong&gt;。此外账号需要满足交易条件，除非你使用「ASF 2FA」进行自动化操作，不然需要手动通过电子邮件来确认交易。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string] &amp;ldquo;SteamTradeToken&amp;rdquo;&lt;/strong&gt; (默认：null)：如果 &lt;strong&gt;&amp;ldquo;SteamMasterID&amp;rdquo;&lt;/strong&gt; 在其他 &lt;strong&gt;Bot&lt;/strong&gt; 的好友列表里，Bot 可立即发起交易请求，不用操心交易凭证。因此可将该配置维持默认值 &lt;code&gt;null&lt;/code&gt;。然而如果你的好友列表不打算列入其他Bot账号，就需要生成并输入 &lt;strong&gt;&amp;ldquo;SteamMasterID&amp;rdquo;&lt;/strong&gt; 的交易凭证。于官网登陆 &lt;strong&gt;Steam&lt;/strong&gt; 账号，&lt;a href=&#34;http://steamcommunity.com/id/me/tradeoffers/privacy&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;点击这里&lt;/a&gt;便能查看交易URL。凭证就是URL当中&lt;code&gt;&amp;amp;token=&lt;/code&gt;之后的8位字母。你需要将其复制粘贴到 &lt;strong&gt;&amp;ldquo;SteamTradeToken&amp;rdquo;&lt;/strong&gt; 之中。请记住不要复制整个URL，只需要凭证代码。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;SendTradePeriod&amp;rdquo;&lt;/strong&gt; (默认：0)：该配置与上述的 &lt;strong&gt;&amp;ldquo;SendOnFarmingFinished&amp;rdquo;&lt;/strong&gt;作用类似，但有一点不同，该配置并非在挂卡结束后才发起交易，而是以 &lt;strong&gt;&amp;ldquo;SendTradePeriod&amp;rdquo;&lt;/strong&gt; 当中设置的小时数为周期发起。这对想要时常 &lt;code&gt;!loot&lt;/code&gt; 其他 &lt;strong&gt;Bot&lt;/strong&gt; 的用户来说很有帮助。默认值 &lt;code&gt;0&lt;/code&gt; 禁用了该项特性，如果你想要每隔一天进行收获，就设置该配置数值为 &lt;code&gt;24&lt;/code&gt;。如果你不确定是否该启用这项特性，请将其保持默认值 &lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[byte] &amp;ldquo;AcceptConfirmationPeriod&amp;rdquo;&lt;/strong&gt; (默认：0)：该配置只有为账号启用「ASF 2FA」情况下生效。最近 Valve 加入了额外的限制，所有发到市场的请求都需要额外的「ASF 2FA」验证。该选项与 &lt;code&gt;!2faok&lt;/code&gt; 指令功能相同，ASF 会以 &lt;strong&gt;&amp;ldquo;AcceptConfirmationPeriod&amp;rdquo;&lt;/strong&gt; 设置的分钟数为间隔，自动接收所有发起的验证。默认值 &lt;code&gt;0&lt;/code&gt; 禁用了该特性，通常来说并不推荐启用该选项。如若启用，请将间隔设置较长时间，比如 &lt;code&gt;30&lt;/code&gt; 分钟。如果你不确定是否该启用这项特性，请将其保持默认值 &lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[string] &amp;ldquo;CustomGamePlayedWhileIdl&amp;rdquo;&lt;/strong&gt; (默认：null)：&lt;strong&gt;ASF&lt;/strong&gt; 空置时意味着无事可做（比如账号挂卡结束），其依然能显示“非Steam游戏中：CustomGamePlayerdWhileIdle”。默认值null禁用该特性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[HashSet] &amp;ldquo;GamesPlayedWhileIdle&amp;rdquo;&lt;/strong&gt; (默认：0)：与上面较为类似，如果ASF不在挂卡状态时其能继续挂载你所指定的游戏。被指定的游戏时长会增长。默认值0禁用该特性。&lt;/p&gt;

&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JustArchi/ArchiSteamFarm&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;JustArchi/ArchiSteamFarm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Commands&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://steamcn.com/t187703-1-1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ASF 官方 Wiki 中文版&amp;emsp;全方位熟练使用 &lt;strong&gt;ASF&lt;/strong&gt; 挂卡工具（8.6施工中，全面更新)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://steamcn.com/t343050-1-1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ASF 简易命令列表&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用反向代理给 PPA 加速</title>
      <link>https://mogeko.github.io/2018/035/</link>
      <pubDate>Mon, 26 Nov 2018 13:35:11 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/035/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/035/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;&lt;strong&gt;PPA&lt;/strong&gt; 的英文全称叫 &lt;strong&gt;Personal Package Archives&lt;/strong&gt;，既&lt;strong&gt;「个人软件包仓库」&lt;/strong&gt;。是 Ubuntu 为了方便用户发表、下载那些 Ubuntu 官方软件仓库中没有收录的或者版本较新的软件而建立的 (有点类似于 &lt;strong&gt;ArchLinux&lt;/strong&gt; 的 &lt;strong&gt;AUR&lt;/strong&gt;)。&lt;/p&gt;

&lt;p&gt;大多数的 &lt;strong&gt;PPA&lt;/strong&gt; 仓库都放在 &lt;a href=&#34;https://launchpad.net&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;launchpad&lt;/a&gt; 上。由于种种原因，国内从 &lt;strong&gt;PPA&lt;/strong&gt; 中下软件都特别慢，而且 &lt;strong&gt;PPA&lt;/strong&gt; 中的软件比较庞杂且分散，不适合建立镜像仓库。好在我们可以通过中科大提供的反向代理来加速我们的下载。&lt;/p&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;p&gt;中科大提供的反向代理地址是：&lt;a href=&#34;http://launchpad.proxy.ustclug.org&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://launchpad.proxy.ustclug.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们只需要修改 &lt;code&gt;/etc/apt/sources.list.d&lt;/code&gt; 下面需要代理的仓库地址，将 &lt;code&gt;ppa.launchpad.net&lt;/code&gt; 换成 &lt;code&gt;launchpad.proxy.ustclug.org&lt;/code&gt; ，然后在执行 &lt;code&gt;sudo apt update&lt;/code&gt; 更新一下软件源列表就可以了。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/apt/sources.list.d&lt;/code&gt; 中的地址太多，一个一个换也太麻烦了吧？！可以使用下面这个命令替换全部：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo find /etc/apt/sources.list.d/ -type f -name &amp;quot;*.list&amp;quot; -exec  sed  -i.bak -r  &#39;s#deb(-src)?\s*http(s)?://ppa.launchpad.net#deb\1 http\2://launchpad.proxy.ustclug.org#ig&#39; {} \;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;尽快大多数软件都可以使用中科大提供的这个反向代理地址进行加速，不过仍然有些 &lt;strong&gt;PPA&lt;/strong&gt; 仓库没有放在 &lt;a href=&#34;https://launchpad.net&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;launchpad&lt;/a&gt; 上 (例如 Google Chrome 浏览器)，就不能使用这种方法进行加速了。&lt;/p&gt;

&lt;!-- 
# 搭建反向代理服务

你也可以使用自己的 **VPS**，或者任何**可以翻墙的服务器**来搭建自己的反向代理服务。

**NGINX 配置：**

```conf
#/etc/nginx/sites-available/ppa.launchpad.net 
server {
	listen 80;
	server_name [服务器地址];

	location / {
		proxy_pass http://ppa.launchpad.net; 
		proxy_redirect     off;
		proxy_set_header   Host             $host;
		proxy_set_header   X-Real-IP        $remote_addr;
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	}
}
```
 --&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>学会将代码写简单</title>
      <link>https://mogeko.github.io/2018/034/</link>
      <pubDate>Thu, 22 Nov 2018 19:46:55 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/034/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/034/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;&lt;em&gt;为开源项目作出贡献的最佳方式是使它的代码得以精简。我们应当努力编写即使没有注释也能使新手程序员轻松理解的代码，让维护者无需花费太多精力也能轻松维护。&lt;/em&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;在学生时代，我们乐于使用更加复杂的技巧去解决新的难题。首先，我们学会了循环，再是函数，接着是类… 当我们得到提高，能够用更高级的技术写更长的代码时，我们得到的是称赞。我们发现有经验的程序员使用 &lt;code&gt;monad&lt;/code&gt;，而新手使用 &lt;code&gt;for&lt;/code&gt; 循环。&lt;/p&gt;

&lt;p&gt;当我们出生社会，在工作中或者在开源项目中与他人合作时。我们使用在学校学到的各种玄酷技能自豪地给出解决方案的代码实现。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“啊哈！我可以扩展这个项目，并实现 X 功能！我这里用到了继承！我真TM牛逼！！”&lt;/em&gt; ε٩(๑&amp;gt; ₃ &amp;lt;)۶ з&lt;/p&gt;

&lt;p&gt;我们实现了某个小功能，很有成就感，并有充分的理由相信自己很牛逼。但在实际工程中的编程却不仅仅是实现某某功能这么简单。以我个人的经验而言，写代码使我感到开心与自豪，并且我十分乐意向世界展示我所知道的一切。有例为证，这里是用另一种元编程语言构建的&lt;a href=&#34;https://github.com/mrocklin/matrix-algebra&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;线性代数语言&lt;/a&gt;。(注意，这玩意已经很多年没人碰过了)&lt;/p&gt;

&lt;p&gt;在自己维护过代码后，我的观点发生了变化。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;我们不应该去刻意的追求如何构建软件。软件是我们用来解决问题的手段，而解决问题才是我们的真正目标。我们应当围绕着需要解决的问题构建出尽可能小的软件。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;我们应当尽可能使用更简单的技术，以便于人们以更少的学习成本去使用或者扩展它。当然，在我们不知道如何使用更简单的技术去实现它时，也可以使用更高级的技术。&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这不是什么新鲜的观点。我身边的每个人都或多或少的赞同这些观点，但不知道为什么，当我们为一个新的项目贡献代码时又会忘记这些原则。总是本能的想用复杂的技术去实现功能。&lt;/p&gt;

&lt;h1 id=&#34;软件是一种付出&#34;&gt;软件是一种付出&lt;/h1&gt;

&lt;p&gt;你写的每一行代码都需要耗费时间。当然，也许你很乐意花费你的时间。但是，你的代码在被审阅时也是需要花时间的，审阅者需要花费时间来阅读并理解它们。未来的维护者也需要花费时间维护和修改你的代码。他们本可以利用这些时间来晒晒太阳陪陪家人的。&lt;/p&gt;

&lt;p&gt;所以，当你向某个项目提交代码时，请务必心怀谦恭。多为他人着想同时也会得到他人的理解和尊重。将代码写少是很难的，但你的付出会减轻别人的负担。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;这段有一个吃饭的例子，我不知道怎么翻译，就稍微改写了一下。原文如下：&lt;/p&gt;

&lt;p&gt;It should feel as though you are eating with your family and there isn&amp;rsquo;t enough food on the table. You should take only what you need and no more. The people with you will respect you for your efforts to restrict yourself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;越复杂的技术越难以维护&#34;&gt;越复杂的技术越难以维护&lt;/h1&gt;

&lt;p&gt;作为学生，我们通过使用复杂的技术来证明自己的能力。这体现在我们有能力在开源项目中使用函数、类、高阶函数、&lt;code&gt;monads&lt;/code&gt; 等。我们在向同行展示自己的解决方案时，并常常因为自己所用的技术高低而感到自豪或卑微。&lt;/p&gt;

&lt;p&gt;然而，在现实的团队合作项目中，情况却正好相反。现在，我们尽可能使用简单的方法去解决问题。简单的方法能够使得即使是新手程序员也能轻松地扩展我们的代码以解决其他问题。简单的代码能够让人快速上手并让我们脱颖而出。我们通过使用简单的技术解决问题来体现我们的价值。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“看！我用 &lt;code&gt;for&lt;/code&gt; 循环代替了原来的递归函数并且达到了我们的需求。我知道这样不够优雅，但我注意到我们新来的实习生在这里似乎会遇到麻烦，我觉得这样改应该会有所帮助吧！ ”&lt;/em&gt;(๑•̀ㅂ•́)و✧&lt;/p&gt;

&lt;p&gt;真正牛逼的人是不需要证明自己有多牛逼的。你可以通过以简单的方式来解决问题来体现你的价值，这样你的团队中的每个人都会在未来受益于此。&lt;/p&gt;

&lt;h1 id=&#34;当然-有所节制&#34;&gt;当然，有所节制&lt;/h1&gt;

&lt;p&gt;话虽这么说，但是过度坚持“使用简单的代码解决问题”的教条可能会适得其反。通常，使用递归的解决方法要比使用 &lt;code&gt;for&lt;/code&gt; 循环的解决方法更简洁，用类或 &lt;code&gt;monad&lt;/code&gt; 也是正确的方法。还有两种情况另当别论，为满足自己需求而写的系统 (软件)，或是软件使用者没有任何编程经验的情况 (不存在 2 次开发的可能)&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;学生党一枚，翻译上有任何问题还请多多指教 _(:з)∠)_&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;译者：&lt;a href=&#34;https://mogeko.github.io/about/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Mogeko&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原文作者：&lt;a href=&#34;http://matthewrocklin.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Matthew Rocklin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原文地址：&lt;a href=&#34;http://matthewrocklin.com/blog/work/2018/01/27/write-dumb-code&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://matthewrocklin.com/blog/work/2018/01/27/write-dumb-code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>为 Hugo 博客添加字数统计</title>
      <link>https://mogeko.github.io/2018/033/</link>
      <pubDate>Thu, 22 Nov 2018 16:51:03 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/033/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/033/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;作为一个孤芳自赏的 Bloger，每一篇文章都像是自己的孩子一样，孩子的“体重”如何是每一个父母都关注的问题。&lt;/p&gt;

&lt;p&gt;今天就简单的教教大家如何给自己的孩子称“体重”。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;相关模板变量&#34;&gt;相关模板变量&lt;/h1&gt;

&lt;p&gt;作为一个静态网页生成器，Hugo 为使用者提供了很多与网页相关的&lt;strong&gt;模板变量&lt;/strong&gt;，而与文章字数相关的&lt;strong&gt;模板变量&lt;/strong&gt;有两个：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;.FuzzyWordCount&lt;/code&gt;&lt;/strong&gt;: 文章内容的大致单词数 (字数)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;.WordCount&lt;/code&gt;&lt;/strong&gt;: 文章内容的单词数 (字数)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以看到 &lt;strong&gt;&lt;code&gt;.FuzzyWordCount&lt;/code&gt;&lt;/strong&gt; 提供的是一个大概的值 (整 100)，比如 1 个字算 100 字，2 个字还算 100 字，201 个字算 200 字。这样统计出来的字数可能会比实际情况更多一点，虽然更有牌面但全都是整数未免也太假了。所以我还是决定使用 &lt;strong&gt;&lt;code&gt;.WordCount&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;更多与&lt;strong&gt;模板变量&lt;/strong&gt;相关信息请参考：&lt;a href=&#34;https://gohugo.io/variables/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Variables and Params&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;为主题添加-字数统计-模板&#34;&gt;为主题添加「字数统计」模板&lt;/h1&gt;

&lt;p&gt;首先启动一个本地的 Hugo 服务器。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后打开 &lt;strong&gt;Chrome&lt;/strong&gt;，利用 &lt;strong&gt;DevTools&lt;/strong&gt; 定位放&lt;strong&gt;字数统计&lt;/strong&gt;的位置&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Chrome DevTools&#34; src=&#34;https://mogeko.github.io/images/033/devtools.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;然后记录下与预订位置邻近的 &lt;strong&gt;DOM&lt;/strong&gt; 的 &lt;code&gt;class&lt;/code&gt; 的值。&lt;/p&gt;

&lt;p&gt;打开 &lt;strong&gt;VSCode&lt;/strong&gt;，利用「搜索」定位刚刚查找到到 &lt;code&gt;class&lt;/code&gt; 值的位置。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;VSCode&#34; src=&#34;https://mogeko.github.io/images/033/vscode.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;再在合适的位置中插入以下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;span class=&amp;quot;post-word-count&amp;quot;&amp;gt;, {{ .WordCount }} words&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后再在 &lt;strong&gt;Chrome&lt;/strong&gt; 中查看效果。&lt;/p&gt;

&lt;h1 id=&#34;统计字数不正确&#34;&gt;统计字数不正确&lt;/h1&gt;

&lt;p&gt;一打开 &lt;strong&gt;Chrome&lt;/strong&gt; 懵逼了。我辛辛苦苦码了这么久才 69 个字？？？&lt;span class=&#34;spoiler&#34; &gt;你豁鬼哦！！（╯‵□′）╯︵┴─┴&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;bug&#34; src=&#34;https://mogeko.github.io/images/033/bug.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;Google 了一下才知道，原来 Hugo 默认不会统计中文 (&lt;a href=&#34;https://github.com/nodejh/hugo-theme-cactus-plus/issues/18&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;详情&lt;/a&gt;)，需要在&lt;code&gt;config.toml&lt;/code&gt; 中添加这么一句配置才可以开启对中文的统计&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;hasCJKLanguage = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正常了&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;fix_bug&#34; src=&#34;https://mogeko.github.io/images/033/fix_bug.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GNU/Linux 技巧：如何快速的找到一个文件</title>
      <link>https://mogeko.github.io/2018/032/</link>
      <pubDate>Wed, 21 Nov 2018 19:30:25 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/032/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;https://mogeko.github.io/images/032/&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&amp;emsp;&amp;emsp;
 --&gt;

&lt;p&gt;在使用计算机的过程中，我们都有着这么一个需求：&lt;strong&gt;找文件！！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“卧槽，我的 XXX 文件放哪儿去了？”Σ(っ °Д °;)っ&lt;/p&gt;

&lt;p&gt;“XXX 文件不应该就在 XXX 文件夹里吗？！咋个找球不到啊？”‧º·(˚ ˃̣̣̥᷄⌓˂̣̣̥᷅ )‧º·˚&lt;/p&gt;

&lt;p&gt;“MMP！1000 多个文件！我找你麻痹！！”（╯‵□′）╯︵┴─┴&lt;/p&gt;

&lt;p&gt;在一些没有 GUI 的 GNU/Linux 中，遇到这种情况更是雪上加霜。好在 GNU/Linux 的终端中有着不少优秀的命令行工具，可以帮助我们解决上述问题。&lt;/p&gt;

&lt;p&gt;下面就介绍三个最常用的在 GNU/Linux 中快速找文件的命令行工具：&lt;strong&gt;ls&lt;/strong&gt;、&lt;strong&gt;tree&lt;/strong&gt; 和 &lt;strong&gt;find&lt;/strong&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;ls&#34;&gt;ls&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; 可能是所有 Linuxer 学习到的第一个命令了 &lt;span class=&#34;spoiler&#34; &gt;cd: 喵喵喵？&lt;/span&gt; 它既简单又实用，如果给 GNU/Linux 中所有的命令使用频率排个名的话，&lt;code&gt;ls&lt;/code&gt; 绝对在前 5。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; 的作用就是列出指定目录下 (默认当前目录) 的所有可见的文件与文件夹，就像这样：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ls
Desktop  Documents  Downloads  Dropbox  Music  Pictures  Public  Steam  Templates  Videos
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加 &lt;code&gt;-l&lt;/code&gt; 选项则可以查看文件的更多信息。同时再加上 &lt;code&gt;-h&lt;/code&gt; 则可查看到文件文件的大小：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ls -lh
drwxr-xr-x 2 mogeko mogeko 4.0K 11月 21 21:24 Desktop
drwxr-xr-x 3 mogeko mogeko 4.0K 11月 21 12:39 Documents
drwxr-xr-x 4 mogeko mogeko 4.0K 11月 21 20:37 Downloads
drwxrwx--- 5 mogeko mogeko 4.0K 11月 21 15:46 Dropbox
drwxr-xr-x 2 mogeko mogeko  20K 10月 27 19:06 Music
drwxr-xr-x 3 mogeko mogeko 4.0K 11月  9 11:58 Pictures
drwxr-xr-x 2 mogeko mogeko 4.0K 10月 27 10:30 Public
drwxrwxr-x 3 mogeko mogeko 4.0K 10月 26 19:45 Steam
drwxr-xr-x 2 mogeko mogeko 4.0K 10月 27 10:30 Templates
drwxr-xr-x 2 mogeko mogeko 4.0K 11月 20 21:29 Videos
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; 也可以查看指定目录下的文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ls /etc/apt
apt.conf.d     sources.list      sources.list.d     trusted.gpg
preferences.d  trusted.gpg.d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用&lt;strong&gt;通配符&lt;/strong&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ls *.yaml
cangjie5.schema.yaml            luna_pinyin.extended.dict.yaml
default.custom.yaml             luna_pinyin.extra_hanzi.dict.yaml
default.yaml                    luna_pinyin_fluency.schema.yaml
installation.yaml               luna_pinyin.kaomoji.dict.yaml
luna_pinyin.cn_en.dict.yaml     luna_pinyin.schema.yaml
luna_pinyin.computer.dict.yaml  luna_pinyin_simp.schema.yaml
luna_pinyin.custom.yaml         luna_pinyin_tw.schema.yaml
luna_pinyin.email.dict.yaml     symbols.yaml
luna_pinyin.emoji.dict.yaml     user.yaml
luna_pinyin.english.dict.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;想要查看隐藏文件？加个 &lt;code&gt;-a&lt;/code&gt; 就可以了：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ls -a
.   archetypes   content  .gitignore  public     resources  themes
..  config.toml  .git     LICENSE.md  README.md  static     .travis.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; 还可以用来在无聊时打发时间😂😂&lt;/p&gt;

&lt;p&gt;在终端中执行以下命令，然后看着屏幕滚就可以了；在一下比较大型的系统中，可以滚一两个小时呢！！&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ls -R /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看腻了可以用 &lt;code&gt;Ctrl + C&lt;/code&gt; 强制中断执行 | ・ω・’）&lt;/p&gt;

&lt;p&gt;更多与 &lt;code&gt;ls&lt;/code&gt; 相关的选项，可以查看 &lt;code&gt;ls&lt;/code&gt; 的文档，通过以下命令查看&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ man ls
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;tree&#34;&gt;tree&lt;/h1&gt;

&lt;p&gt;如果你想以更加直观的方式查看目录结构，&lt;code&gt;tree&lt;/code&gt; 是个不错的选择。&lt;/p&gt;

&lt;p&gt;一般的 GNU/Linux 发行版上默认是没有安装 &lt;code&gt;tree&lt;/code&gt; 的，我们先使用&lt;strong&gt;包管理器&lt;/strong&gt;安装 &lt;code&gt;tree&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;archlinux&#34;&gt;Archlinux&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pacman -S tree
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ubuntu-debian&#34;&gt;Ubuntu / Debian&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo apt-get install tree
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fedora-centos&#34;&gt;Fedora / CentOS&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo yum install tree
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果不带任何参数的运行 &lt;code&gt;tree&lt;/code&gt;，将会从当前目录开始，遍历当前目录下的所有子目录，形成一个树状图。想这样：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tree
.
├── input.conf
├── mpv.conf
├── mpv_sub-delay.json
├── scripts
│   ├── autoload.lua
│   ├── find_subtitles.lua
│   └── save-sub-delay.lua
└── watch_later
    ├── 0E8222A71582842B0AE77E97F92C8ADF
    ├── 3711F58064794A225929BB4E40406BB0
    ├── 64DE4D53E1D5133254D3566CB3DFE548
    ├── BB76733FFBAC24FA381FA1C04452948E
    ├── D1EB1EE7CC315044D40B56E68B717219
    └── E45A1D2ED916D7DFD4109ADFD1E4A829

2 directories, 12 file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令非常有用，特别是对于我们这些 Bloger 来说；比如以下场景：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;简单讲解一下各个文件的作用&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.
├── Atom # 供单独使用的脚本
│   ├── Office_2016
│   │   ├── Office_Project_Pro.cmd # 将零售版的 Office Project Plus 转换为批量授权版, 然后激活
│   │   ├── Office_Project_Std.cmd # 将零售版的 Office Project 转换为批量授权版, 然后激活
│   │   ├── Office_Retail2VOL+Activate.cmd # 将零售版的 Office 转换为批量授权版, 然后激活
│   │   ├── Office_Retail2VOL_Only.cmd # 仅仅将零售版的 Office 转换为批量授权版, 不激活
│   │   ├── Office_Visio_Pro.cmd # 将零售版的 Office Visio Plus 转换为批量授权版, 然后激活
│   │   ├── Office_Visio_Std.cmd # 将零售版的 Office Visio 转换为批量授权版, 然后激活
│   │   ├── Office_VOL_Activate.cmd # 激活批量授权版的 Office
│   │   └── 查看 Office 状态.cmd
│   ├── Office_2013
│   │   ├── 与 Office_2016 同理, 就不单独介绍了
│   ├── Office_2010
│   │   ├── 与 Office_2016 同理
│   └── Windows_Activate.cmd # 激活批量授权版的 Windows
├── KMS 服务可用性测试.url # 检测 KMS 服务器是否挂了
├── README.md
└── Run.cmd# 激活脚本
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;p&gt;对于那些需要介绍每个文件的功能的场景，&lt;code&gt;tree&lt;/code&gt; 简直是神器好不好！！&lt;/p&gt;

&lt;p&gt;扯远了 | ・ω・’）&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;如果不想列地太多，可以使用 &lt;code&gt;-L [数字]&lt;/code&gt; 选项来指定查找的层数，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tree -L 1
.
├── input.conf
├── mpv.conf
├── mpv_sub-delay.json
├── scripts
└── watch_later

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以显示指定目录的树状图：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tree ~/.config/mpv
.
├── input.conf
├── mpv.conf
├── mpv_sub-delay.json
├── scripts
│   ├── autoload.lua
│   ├── find_subtitles.lua
│   └── save-sub-delay.lua
└── watch_later
    ├── 0E8222A71582842B0AE77E97F92C8ADF
    ├── 3711F58064794A225929BB4E40406BB0
    ├── 64DE4D53E1D5133254D3566CB3DFE548
    ├── BB76733FFBAC24FA381FA1C04452948E
    ├── D1EB1EE7CC315044D40B56E68B717219
    └── E45A1D2ED916D7DFD4109ADFD1E4A829

2 directories, 12 file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果需要列出的是一个很大的树状图，可以配合 &lt;code&gt;less&lt;/code&gt; 使用：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tree | less
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样的，要查看更多关于 &lt;code&gt;tree&lt;/code&gt; 的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;man tree
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;find&#34;&gt;find&lt;/h1&gt;

&lt;p&gt;如果不知道文件在哪里怎么办呢？总不能从 &lt;code&gt;/&lt;/code&gt; 目录开始遍历吧！这时你需要 &lt;code&gt;find&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果不加任何参数的运行 &lt;code&gt;find&lt;/code&gt;，它将会递归列出改目录下的所有文件和目录：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ find
.
./mpv_sub-delay.json
./scripts
./scripts/find_subtitles.lua
./scripts/autoload.lua
./scripts/save-sub-delay.lua
./mpv.conf
./watch_later
./watch_later/E45A1D2ED916D7DFD4109ADFD1E4A829
./watch_later/3711F58064794A225929BB4E40406BB0
./watch_later/0E8222A71582842B0AE77E97F92C8ADF
./watch_later/64DE4D53E1D5133254D3566CB3DFE548
./watch_later/BB76733FFBAC24FA381FA1C04452948E
./watch_later/D1EB1EE7CC315044D40B56E68B717219
./input.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是 &lt;code&gt;find&lt;/code&gt; 真正强大的地方在于你可以使用文件名进行搜索：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ find -name autoload.lua
./scripts/autoload.lua
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或是使用&lt;strong&gt;通配符&lt;/strong&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ find -name *.lua
./scripts/find_subtitles.lua
./scripts/autoload.lua
./scripts/save-sub-delay.lua
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以根据文件大小进行搜索 (对于硬盘空间不足的时候特别有用)&lt;/p&gt;

&lt;p&gt;列出所有大于 1 G 的文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ find -size +1G
./Downloads/Asura.2012.BluRay.1080p.x264-MySiLU [PublicHD]/Asura.2012.BluRay.1080p.x264.AC3-MySilu.mkv
./Downloads/Starship.Troopers.Traitor.of.Mars.2017.720p.WEB-DL.DD5.1.H264-FGT/Starship.Troopers.Traitor.of.Mars.2017.720p.WEB-DL.DD5.1.H264-FGT.mkv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以搜索具体的文件目录，例如我们想在 &lt;code&gt;.config/mpv&lt;/code&gt; 目录中查找所有后缀为 &lt;code&gt;.lua&lt;/code&gt; 的文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ find .config/mpv -name *.lua
.config/mpv/scripts/find_subtitles.lua
.config/mpv/scripts/autoload.lua
.config/mpv/scripts/save-sub-delay.lua
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多的信息可以查看 &lt;strong&gt;man 手册&lt;/strong&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;man find
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GNU/Linux 输入法折腾笔记 (RIME)</title>
      <link>https://mogeko.github.io/2018/031/</link>
      <pubDate>Wed, 21 Nov 2018 12:38:05 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/031/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&lt;br&gt;
 --&gt;

&lt;p&gt;终于，我在也忍受不了 &lt;strong&gt;Ubuntu 18.04&lt;/strong&gt; 自带的 &lt;strong&gt;ibus-libpinyin&lt;/strong&gt; 了。决定好好配置以下输入法，本来以为最多半个小时就能搞定的事情，结果整整花了半天 _(:з」∠)_&lt;/p&gt;

&lt;p&gt;网上一搜发现 &lt;strong&gt;搜狗拼音&lt;/strong&gt; 有 GNU/Linux 版的，于是去官网下载了 &lt;strong&gt;搜狗拼音&lt;/strong&gt; 的 deb 包，安装，全局终…&lt;/p&gt;

&lt;p&gt;才怪  | ・ω・’）&lt;/p&gt;

&lt;p&gt;当我看到 &lt;strong&gt;搜狗拼音&lt;/strong&gt; 只能支持 &lt;strong&gt;fcitx 框架&lt;/strong&gt; 时瞬间就放弃了。不是说 &lt;strong&gt;fcitx 框架&lt;/strong&gt; 不好，只是觉得要换输入法框架太折腾了 (&lt;strong&gt;Ubuntu 18.4&lt;/strong&gt; 预装了 &lt;strong&gt;ibus 框架&lt;/strong&gt;)；后来事实证明，&lt;strong&gt;ibus 框架&lt;/strong&gt; 不仅折腾，bug 还多…&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;spoiler&#34; &gt;早晓得就换 &lt;strong&gt;fcitx 框架&lt;/strong&gt; 了 _(:з」∠)_&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;放弃 &lt;strong&gt;搜狗拼音&lt;/strong&gt; 后，我又将目光投向了一款开源的跨平台输入法：&lt;a href=&#34;https://rime.im&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;RIME&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;中州韵输入法引擎&lt;/strong&gt;（英语：&lt;strong&gt;Rime Input Method Engine&lt;/strong&gt;，又称&lt;strong&gt;Rime 输入法&lt;/strong&gt;）是由佛振编写的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;开源&lt;/a&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E8%BC%B8%E5%85%A5%E6%B3%95&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;中文输入法&lt;/a&gt;，目前项目网站、源代码均托管在&lt;a href=&#34;https://zh.wikipedia.org/wiki/GitHub&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;[&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%B7%9E%E9%9F%BB%E8%BC%B8%E5%85%A5%E6%B3%95%E5%BC%95%E6%93%8E#cite_note-1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;注 1]&lt;/a&gt;。基于同一个核心架构，该输入法分为三个官方发行版：&lt;a href=&#34;https://zh.wikipedia.org/wiki/Linux&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Linux&lt;/a&gt; 发行版&lt;strong&gt;中州韵&lt;/strong&gt;（&lt;a href=&#34;https://zh.wikipedia.org/wiki/Ibus&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ibus&lt;/a&gt;-rime）、&lt;a href=&#34;https://zh.wikipedia.org/wiki/Microsoft_Windows&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Windows&lt;/a&gt;发行版&lt;strong&gt;小狼毫&lt;/strong&gt;（Weasel）、&lt;a href=&#34;https://zh.wikipedia.org/wiki/MacOS&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;macOS&lt;/a&gt; 发行版&lt;strong&gt;鼠须管&lt;/strong&gt;（Squirrel）。另有数个第三方发行版：&lt;a href=&#34;https://zh.wikipedia.org/wiki/Linux&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Linux&lt;/a&gt; 发行版&lt;strong&gt;fcitx-rime&lt;/strong&gt;、&lt;a href=&#34;https://zh.wikipedia.org/wiki/Microsoft_Windows&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Windows&lt;/a&gt;发行版&lt;strong&gt;PRIME&lt;/strong&gt;、&lt;a href=&#34;https://zh.wikipedia.org/wiki/MacOS&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;macOS&lt;/a&gt; 发行版&lt;strong&gt;XIME&lt;/strong&gt;、&lt;a href=&#34;https://zh.wikipedia.org/wiki/Android&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Android&lt;/a&gt;发行版&lt;strong&gt;同文输入法&lt;/strong&gt;（Trime）、&lt;a href=&#34;https://zh.wikipedia.org/wiki/IOS&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;iOS&lt;/a&gt;发行版&lt;strong&gt;iRime&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;哇！开源输入法呢！！✪ω✪&lt;/p&gt;

&lt;p&gt;去 TM 的资本主义 &lt;strong&gt;搜狗拼音&lt;/strong&gt;，&lt;del&gt;开源输入法才配在睾贵的 GNU/Linux 上打字&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;于是便上了 &lt;strong&gt;RIME&lt;/strong&gt; 的贼船 _(:з」∠)_&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;关于输入法与输入法框架&#34;&gt;关于输入法与输入法框架&lt;/h1&gt;

&lt;p&gt;与 Windows 不同的是，GNU/Linux 下的中文输入法都是需要依赖于输入法框架的，这里的框架有 &lt;strong&gt;ibus&lt;/strong&gt;、&lt;strong&gt;fcitx&lt;/strong&gt; 等。&lt;strong&gt;输入法框架&lt;/strong&gt; 可以通过 &lt;strong&gt;im-config&lt;/strong&gt; 来进行配置。然后在 &lt;strong&gt;输入法框架&lt;/strong&gt; 的配置中选择 &lt;strong&gt;输入法&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RIME&lt;/strong&gt; 同时支持 &lt;strong&gt;ibus 框架&lt;/strong&gt; 和 &lt;strong&gt;fcitx 框架&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;搜狗拼音&lt;/strong&gt; 只支持 &lt;strong&gt;fcitx 框架&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;提到 ibus 框架我就多说两句，我在使用基于 ibus 框架的输入法时 (ibus-libpinyin 和 ibus-rime)，偶尔会遇到打不出字的情况；调查后发现是因为 ibus 框架对于使用 Qt 编写的应用程序兼容性不好。没用过 fcitx，不知道兼容性这一方面会不会好一点&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;安装-rime&#34;&gt;安装 RIME&lt;/h1&gt;

&lt;p&gt;安装 &lt;strong&gt;RIME&lt;/strong&gt; 很简单，大多数软件仓库都是收录了 &lt;strong&gt;RIME&lt;/strong&gt; 的，所以只需要使用各自系统的包管理器安装即可&lt;/p&gt;

&lt;h2 id=&#34;archlinux&#34;&gt;Archlinux&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pacman -S ibus-rime
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ubuntu-debian&#34;&gt;Ubuntu / Debian&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install ibus-rime
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu PPA:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo add-apt-repository ppa:lotem/rime
sudo apt-get update
sudo apt-get install ibus-rime
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fedora-centos&#34;&gt;Fedora / CentOS&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo yum install ibus-rime
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多发行版请参考：&lt;a href=&#34;https://github.com/rime/home/wiki/RimeWithIBus&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;ibus-rime&lt;/strong&gt; 各发行版安装说明&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fcitx 框架&lt;/strong&gt; 版本请参考：&lt;a href=&#34;https://github.com/fcitx/fcitx-rime&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;fcitx-rime&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;配置-rime&#34;&gt;配置 RIME&lt;/h1&gt;

&lt;p&gt;最让人头疼的配置环节来了，我在这里就因为没好好看&lt;a href=&#34;https://github.com/rime/home/wiki/CustomizationGuide&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;说明书 (Rime 定制指南)&lt;/a&gt; &lt;span class=&#34;spoiler&#34; &gt;繁体中文看得我眼睛痛 °(°ˊДˋ°) °&lt;/span&gt; 走了很多弯路。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RIME&lt;/strong&gt; 的配置文件在 &lt;code&gt;~/.config/ibus/rime&lt;/code&gt; 中。&lt;/p&gt;

&lt;p&gt;文件夹中的 &lt;code&gt;*.yaml&lt;/code&gt; 就是配置文件了。简单介绍一下各个配置文件的作用：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;default.yaml&lt;/code&gt;: 全局配置文件&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;weasel.yaml&lt;/code&gt;: 发行版的配置文件 (&lt;a href=&#34;https://github.com/rime/weasel&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;weasel&lt;/strong&gt;&lt;/a&gt; 是 Windows 下的 RIME 发行版)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;installation.yaml&lt;/code&gt;: 安装信息 (可以用来配置同步目录)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;*.schema.yaml&lt;/code&gt;: 各输入方案的配置文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;*.dict.yaml&lt;/code&gt;: 输入方案配套的词典源文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;*.custom.yaml&lt;/code&gt;: 用户对 &lt;code&gt;default.yaml&lt;/code&gt;、&lt;code&gt;*.schema.yaml&lt;/code&gt; 等配置文件进行修改的配置文件&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;直接修改配置文件 -&amp;gt; 保存 -&amp;gt; 部署就可以使用了，不过这样做会有一个问题——&lt;strong&gt;升级时，RIME 会覆盖配置文件&lt;/strong&gt;。也就是说一旦升级就要重新配置！这显然是不合理的，因此 &lt;strong&gt;RIME&lt;/strong&gt; 采用了一种用 &lt;code&gt;*.custom.yaml&lt;/code&gt; 去部署 &lt;code&gt;*.yaml&lt;/code&gt; 的方式进行配置。&lt;/p&gt;

&lt;p&gt;需要改哪个文件就按照 &lt;code&gt;[文件名].custom.yaml&lt;/code&gt; 的格式新建一个文件 (例如修改 &lt;code&gt;default.yaml&lt;/code&gt; 就新建一个 &lt;code&gt;default.custom.yaml&lt;/code&gt;)，将需要修改的内容&lt;strong&gt;按特定格式&lt;/strong&gt;写在 &lt;code&gt;*.custom.yaml&lt;/code&gt; 文件中 -&amp;gt; 保存 -&amp;gt; 部署就 OK 了。升级时不会覆盖 &lt;code&gt;*.custom.yaml&lt;/code&gt; 文件，所以也不用担心配置文件被覆盖的问题。&lt;/p&gt;

&lt;p&gt;需要注意的是 &lt;strong&gt;&lt;code&gt;*.custom.yaml&lt;/code&gt; 使用的语法与 &lt;code&gt;*.yaml&lt;/code&gt; 不同，一定要按照规定的语法来写，不然会出错&lt;/strong&gt; &lt;span class=&#34;spoiler&#34; &gt;我就被坑了  _(:з」∠)_&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;custom-yaml-的写法&#34;&gt;*.custom.yaml 的写法&lt;/h3&gt;

&lt;p&gt;例如想修改无论中文模式或者英文模式，按键 &lt;code&gt;/&lt;/code&gt; 输入 &lt;code&gt;/&lt;/code&gt; (中文模式中默认是让你自己选择)&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;default.yaml&lt;/code&gt; 中有如下配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;punctuator:
  full_shape:
    &amp;quot;/&amp;quot;: [&amp;quot;／&amp;quot;, &amp;quot;÷&amp;quot;]
  half_shape:
    &amp;quot;/&amp;quot; : [&amp;quot;、&amp;quot;, &amp;quot;/&amp;quot;, &amp;quot;／&amp;quot;, &amp;quot;÷&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们需要在 &lt;code&gt;default.custom.yaml&lt;/code&gt; 中配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;patch:
  punctuator/full_shape:
    &amp;quot;/&amp;quot; : &amp;quot;/&amp;quot;
  punctuator/half_shape:
    &amp;quot;/&amp;quot; : &amp;quot;/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看出其中的区别了吗？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在 &lt;code&gt;default.custom.yaml&lt;/code&gt; 使用&lt;code&gt;[语句]/[语句]&lt;/code&gt; 匹配 &lt;code&gt;default.yaml&lt;/code&gt; 中的缩进&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;如果没看清楚的话来看看下面这个例子：&lt;/p&gt;

&lt;p&gt;很多时候我们想输入英文，但现在的输入模式是中文，并且用户并不知道现在的输入模式是中文。我们可能会在「中文模式」下打出一段“英文”，然后按 &lt;code&gt;Shift&lt;/code&gt; 切换到「英文模式」那么已经输入的那段“英文”应当如何处理呢？&lt;strong&gt;RIME&lt;/strong&gt; 提供了五种策略：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;inline_ascii&lt;/strong&gt;: 在输入法的临时英文编辑区内输入字母、数字、符号、空格等，回车上屏后自动复位到中文&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commit_text&lt;/strong&gt;: 已输入的候选文字上屏并切换至西文输入模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commit_code&lt;/strong&gt;: 已输入的编码字符上屏并切换至西文输入模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;clear&lt;/strong&gt;: 丢弃已输入的内容并切换至西文输入模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;noop&lt;/strong&gt;: 屏蔽该切换键&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;想要修改 &lt;code&gt;Shift&lt;/code&gt; 的上词方式为 &lt;strong&gt;commit_code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;default.yaml&lt;/code&gt; 中有如下配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;ascii_composer:
  good_old_caps_lock: true
  switch_key:
    Shift_L: commit_text
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按照&lt;code&gt;[语句]/[语句]&lt;/code&gt; 匹配缩进的原则，我们在 &lt;code&gt;default.custom.yaml&lt;/code&gt; 中配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;patch:
	&amp;quot;ascii_composer/switch_key/Shift_L&amp;quot;: commit_code
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;我的配置文件&#34;&gt;我的配置文件&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;default.custom.yaml:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;patch:
    # 横向显示候选词（并没有什么卵用，ibus-rime 的候选词是由 ibus 控制的）
    &amp;quot;style/horizontal&amp;quot;: true
    # 左/右 Shift 的上词方式
    &amp;quot;ascii_composer/switch_key/Shift_L&amp;quot;: commit_code
    &amp;quot;ascii_composer/switch_key/Shift_R&amp;quot;: inline_ascii
    # 绑定 &amp;quot;/&amp;quot; 为 &amp;quot;/&amp;quot;
    &amp;quot;punctuator/full_shape&amp;quot;:
        &amp;quot;/&amp;quot;: &amp;quot;/&amp;quot;
    &amp;quot;punctuator/half_shape&amp;quot;:
        &amp;quot;/&amp;quot;: &amp;quot;/&amp;quot;

    # 针对以下应用使用英文模式 (好像只在 Mac OS 和 Windows 下有用)
    # &amp;quot;app_options/code-url-handler&amp;quot;:
    #     ascii_mode: true
    # &amp;quot;app_options/org.gnome.Terminal&amp;quot;:
    #     ascii_mode: true
    # &amp;quot;app_options/org.gnome.Shell&amp;quot;:
    #     ascii_mode: true
    # &amp;quot;app_options/google-chrome&amp;quot;:
    #     ascii_mode: true
    # &amp;quot;app_options/vim&amp;quot;:
    #     ascii_mode: true

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;installation.yaml:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;distribution_code_name: &amp;quot;ibus-rime&amp;quot;                                             
distribution_name: Rime
distribution_version: 1.2 
install_time: &amp;quot;Sat Nov 17 08:39:26 2018&amp;quot;
installation_id: &amp;quot;Ubuntu&amp;quot;
rime_version: 1.2.9

sync_dir: &amp;quot;/home/mogeko/Dropbox/sync/Rime&amp;quot; # 存放同步文件的地址
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为配置了 &lt;strong&gt;模糊音&lt;/strong&gt; 和 &lt;strong&gt;扩充词库&lt;/strong&gt;，&lt;code&gt;luna_pinyin.custom.yaml&lt;/code&gt; 里面的配置过于复杂，我就不贴出来了，后面会给大家讲解 &lt;a href=&#34;#模糊拼音&#34;&gt;&lt;strong&gt;如何配置模糊音&lt;/strong&gt;&lt;/a&gt; 以及&lt;a href=&#34;#扩展词库&#34;&gt; &lt;strong&gt;如何配置扩充词库&lt;/strong&gt;&lt;/a&gt; 的。&lt;/p&gt;

&lt;h2 id=&#34;模糊拼音&#34;&gt;模糊拼音&lt;/h2&gt;

&lt;p&gt;配置模糊拼音需要配置各 (某) 输入方案的配置文件&lt;/p&gt;

&lt;p&gt;这里是官方给的一个模板 (朙月拼音) -&amp;gt; &lt;a href=&#34;https://gist.github.com/lotem/2320943&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;【朙月拼音】模糊音定製模板&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# luna_pinyin.custom.yaml
#
# 【朙月拼音】模糊音定製模板
#   佛振配製 :-)
#
# 位置：
# ~/.config/ibus/rime  (Linux)
# ~/Library/Rime  (Mac OS)
# %APPDATA%\Rime  (Windows)
#
# 於重新部署後生效
#

patch:
  &#39;speller/algebra&#39;:
    - erase/^xx$/                      # 第一行保留

    # 模糊音定義
    # 需要哪組就刪去行首的 # 號，單雙向任選
    #- derive/^([zcs])h/$1/             # zh, ch, sh =&amp;gt; z, c, s
    #- derive/^([zcs])([^h])/$1h$2/     # z, c, s =&amp;gt; zh, ch, sh

    #- derive/^n/l/                     # n =&amp;gt; l
    #- derive/^l/n/                     # l =&amp;gt; n

    # 這兩組一般是單向的
    #- derive/^r/l/                     # r =&amp;gt; l

    #- derive/^ren/yin/                 # ren =&amp;gt; yin, reng =&amp;gt; ying
    #- derive/^r/y/                     # r =&amp;gt; y

    # 下面 hu &amp;lt;=&amp;gt; f 這組寫法複雜一些，分情況討論
    #- derive/^hu$/fu/                  # hu =&amp;gt; fu
    #- derive/^hong$/feng/              # hong =&amp;gt; feng
    #- derive/^hu([in])$/fe$1/          # hui =&amp;gt; fei, hun =&amp;gt; fen
    #- derive/^hu([ao])/f$1/            # hua =&amp;gt; fa, ...

    #- derive/^fu$/hu/                  # fu =&amp;gt; hu
    #- derive/^feng$/hong/              # feng =&amp;gt; hong
    #- derive/^fe([in])$/hu$1/          # fei =&amp;gt; hui, fen =&amp;gt; hun
    #- derive/^f([ao])/hu$1/            # fa =&amp;gt; hua, ...

    # 韻母部份
    #- derive/^([bpmf])eng$/$1ong/      # meng = mong, ...
    #- derive/([ei])n$/$1ng/            # en =&amp;gt; eng, in =&amp;gt; ing
    #- derive/([ei])ng$/$1n/            # eng =&amp;gt; en, ing =&amp;gt; in

    # 樣例足夠了，其他請自己總結……

    # 反模糊音？
    # 誰說方言沒有普通話精確、有模糊音，就能有反模糊音。
    # 示例爲分尖團的中原官話：
    #- derive/^ji$/zii/   # 在設計者安排下鳩佔鵲巢，尖音i只好雙寫了
    #- derive/^qi$/cii/
    #- derive/^xi$/sii/
    #- derive/^ji/zi/
    #- derive/^qi/ci/
    #- derive/^xi/si/
    #- derive/^ju/zv/
    #- derive/^qu/cv/
    #- derive/^xu/sv/
    # 韻母部份，只能從大面上覆蓋
    #- derive/^([bpm])o$/$1eh/          # bo =&amp;gt; beh, ...
    #- derive/(^|[dtnlgkhzcs]h?)e$/$1eh/  # ge =&amp;gt; geh, se =&amp;gt; sheh, ...
    #- derive/^([gkh])uo$/$1ue/         # guo =&amp;gt; gue, ...
    #- derive/^([gkh])e$/$1uo/          # he =&amp;gt; huo, ...
    #- derive/([uv])e$/$1o/             # jue =&amp;gt; juo, lve =&amp;gt; lvo, ...
    #- derive/^fei$/fi/                 # fei =&amp;gt; fi
    #- derive/^wei$/vi/                 # wei =&amp;gt; vi
    #- derive/^([nl])ei$/$1ui/          # nei =&amp;gt; nui, lei =&amp;gt; lui
    #- derive/^([nlzcs])un$/$1vn/       # lun =&amp;gt; lvn, zun =&amp;gt; zvn, ... 
    #- derive/^([nlzcs])ong$/$1iong/    # long =&amp;gt; liong, song =&amp;gt; siong, ...
    # 這個辦法雖從拼寫上做出了區分，然而受詞典制約，候選字仍是混的。
    # 只有真正的方音輸入方案纔能做到！但「反模糊音」這個玩法快速而有效！

    # 模糊音定義先於簡拼定義，方可令簡拼支持以上模糊音
    - abbrev/^([a-z]).+$/$1/           # 簡拼（首字母）
    - abbrev/^([zcs]h).+$/$1/          # 簡拼（zh, ch, sh）

    # 以下是一組容錯拼寫，《漢語拼音》方案以前者爲正
    - derive/^([nl])ve$/$1ue/          # nve = nue, lve = lue
    - derive/^([jqxy])u/$1v/           # ju = jv,
    - derive/un$/uen/                  # gun = guen,
    - derive/ui$/uei/                  # gui = guei,
    - derive/iu$/iou/                  # jiu = jiou,

    # 自動糾正一些常見的按鍵錯誤
    - derive/([aeiou])ng$/$1gn/        # dagn =&amp;gt; dang 
    - derive/([dtngkhrzcs])o(u|ng)$/$1o/  # zho =&amp;gt; zhong|zhou
    - derive/ong$/on/                  # zhonguo =&amp;gt; zhong guo
    - derive/ao$/oa/                   # hoa =&amp;gt; hao
    - derive/([iu])a(o|ng?)$/a$1$2/    # tain =&amp;gt; tian

  # 分尖團後 v =&amp;gt; ü 的改寫條件也要相應地擴充：
  #&#39;translator/preedit_format&#39;:
  #  - &amp;quot;xform/([nljqxyzcs])v/$1ü/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将模板剪贴进 &lt;code&gt;~/.config/ibus/rime/luna_pinyin.custom.yaml&lt;/code&gt; 文件中，然后需要哪组就去掉那一行前面的 &lt;code&gt;#&lt;/code&gt; 即可&lt;/p&gt;

&lt;h2 id=&#34;扩展词库&#34;&gt;扩展词库&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;RIME&lt;/strong&gt; 的默认词库并没有多大，因为作者希望用户在与 &lt;strong&gt;RIME&lt;/strong&gt; 磨合的过程中自己积累用户词库，确实自己养起来的词库更顺手，但养词库的过程多少还是有点痛苦的，好在 &lt;strong&gt;RIME&lt;/strong&gt; 支持 &lt;strong&gt;扩展词库&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这里使用的是 &lt;a href=&#34;https://github.com/xiaoTaoist&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;xiaoTaoist&lt;/a&gt; 制作的词库扩展包&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xiaoTaoist/rime-dict&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub 地址&lt;/a&gt;&amp;emsp;&amp;emsp;&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/031/rime-dict.zip&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;使用方法&#34;&gt;使用方法&lt;/h3&gt;

&lt;p&gt;将解压出来的所以文件复制到 &lt;code&gt;~/.config/ibus/rime&lt;/code&gt; 文件夹下即可&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;luna_pinyin.custom.yaml&lt;/code&gt; 要被覆盖？！那&lt;strong&gt;模糊拼音&lt;/strong&gt;的配置岂不是…&lt;/p&gt;

&lt;p&gt;不用担心。这个扩展词库的 &lt;code&gt;luna_pinyin.custom.yaml&lt;/code&gt; 中也包含了&lt;strong&gt;模糊拼音&lt;/strong&gt;的功能，按相同方法开启即可&lt;/p&gt;

&lt;h1 id=&#34;同步&#34;&gt;同步&lt;/h1&gt;

&lt;p&gt;众所周知，&lt;strong&gt;RIME&lt;/strong&gt; 是一个跨平台的输入法，那么每个平台都这么配置一遍岂不是很麻烦？&lt;/p&gt;

&lt;p&gt;不用担心。这个问题可以通过&lt;strong&gt;同步&lt;/strong&gt;来解决 (顺便还解决了不同平台共享词库的需求)&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;只需要在 &lt;code&gt;~/.config/ibus/installation.yaml&lt;/code&gt; 文件中添加：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sync_dir: &amp;quot;[用来存放同步文件的地址]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，&lt;strong&gt;部署&lt;/strong&gt; -&amp;gt; &lt;strong&gt;同步&lt;/strong&gt;，你的&lt;strong&gt;用户配置&lt;/strong&gt;、&lt;strong&gt;用户词库&lt;/strong&gt; 等都会被放在你配置的同步文件地址里。&lt;/p&gt;

&lt;p&gt;如果你换了新的电脑，只需要将同步文件拷贝过去，然后配置一下 &lt;code&gt;installation.yaml&lt;/code&gt; 文件，执行 &lt;strong&gt;部署&lt;/strong&gt; -&amp;gt; &lt;strong&gt;同步&lt;/strong&gt; -&amp;gt; &lt;strong&gt;部署&lt;/strong&gt; ，你的 &lt;strong&gt;用户配置&lt;/strong&gt;、&lt;strong&gt;用户词库&lt;/strong&gt; 都回来了。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>subliminal | 电影字幕下载神器</title>
      <link>https://mogeko.github.io/2018/030/</link>
      <pubDate>Wed, 21 Nov 2018 09:39:26 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/030/</guid>
      <description>

&lt;!-- 
&lt;img alt=&#34;&#34; src=&#34;&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
&lt;br&gt;
 --&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Diaoul/subliminal&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;subliminal&lt;/strong&gt;&lt;/a&gt; 是一个基于 Python 的强大的命令行字幕搜索和下载工具。&lt;/p&gt;

&lt;p&gt;最先知道 &lt;strong&gt;subliminal&lt;/strong&gt; 是因为 &lt;strong&gt;MPV&lt;/strong&gt; 播放器。配合插件 &lt;a href=&#34;https://github.com/directorscut82/find_subtitles/blob/master/find_subtitles.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;find_subtitles.lua&lt;/strong&gt;&lt;/a&gt; 使用，在载入视频的同时搜索并下载中文字幕，简直天衣无缝。不过有的视频的文件名不是那么标准的话，就不一定能匹配得到合适的字幕。解决方法除了改文件名以外，还可以用  &lt;strong&gt;subliminal&lt;/strong&gt; 手动搜索。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subliminal&lt;/strong&gt; 使用多个字幕网站做为数据源，包括世界上最大的开放式字幕库 &lt;a href=&#34;http://opus.nlpl.eu/OpenSubtitles.php&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;opensubtitles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;spoiler&#34; &gt;不幸的是，有几个字幕站被墙了，比如 &lt;strong&gt;podnapisi&lt;/strong&gt;, &lt;strong&gt;legendastv&lt;/strong&gt;, &lt;strong&gt;shooter&lt;/strong&gt;…&lt;/span&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;GitHub 地址：&lt;a href=&#34;https://github.com/Diaoul/subliminal&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/Diaoul/subliminal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;subliminal&#34; src=&#34;https://mogeko.github.io/images/030/subliminal.png&#34; &gt;&lt;/p&gt;

&lt;h1 id=&#34;依赖&#34;&gt;依赖&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;python2&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;p&gt;首先安装 &lt;code&gt;python2&lt;/code&gt; 和 &lt;code&gt;pip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后在终端中输入：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install subliminal
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;p&gt;在终端中输入：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;subliminal download -l zh [电影名称]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如，如果要下载「低俗小说」的字幕：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;subliminal download -l zh Pulp.Fiction.1994.720p.BluRay.DTS.x264-ESiR
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img alt=&#34;return&#34; src=&#34;https://mogeko.github.io/images/030/return.png&#34; &gt;&lt;/p&gt;

&lt;p&gt;部分字幕文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;2
00:00:14,480 --&amp;gt; 00:00:18,850
柔軟潮濕的物體

3
00:00:18,980 --&amp;gt; 00:00:24,610
低級趣味、印刷簡陋的書刊

4
00:00:27,620 --&amp;gt; 00:00:31,590
算了  太冒險了  我不幹

5
00:00:31,590 --&amp;gt; 00:00:34,080
你每次都這樣說

6
00:00:34,460 --&amp;gt; 00:00:36,890
太危險了…我不幹了…

7
00:00:37,060 --&amp;gt; 00:00:39,530
我哪一次說錯?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;居然是繁体，不过我一般遇到的都是简体中文的，而且繁体也不是不能看🤔&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;命令中的 &lt;code&gt;-l&lt;/code&gt; 指定下载的字幕语言，例如要下载英语字幕：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;subliminal download -l cn Pulp.Fiction.1994.720p.BluRay.DTS.x264-ESiR
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;脚本&#34;&gt;脚本&lt;/h1&gt;

&lt;p&gt;除了手动输入命令行外，还可以使用脚本 Python 脚本。例如下面这个脚本就可以自动下载目录中视频文件对应的字幕：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from datetime import timedelta
 
from babelfish import Language
from subliminal import download_best_subtitles, region, save_subtitles, scan_videos
 
# configure the cache
region.configure(&#39;dogpile.cache.dbm&#39;, arguments={&#39;filename&#39;: &#39;cachefile.dbm&#39;})
 
# scan for videos newer than 2 weeks and their existing subtitles in a folder
videos = scan_videos(&#39;/video/folder&#39;, age=timedelta(weeks=2))
 
# download best subtitles
subtitles = download_best_subtitles(videos, {Language(&#39;eng&#39;), Language(&#39;fra&#39;)})
 
# save them to disk, next to the video
for v in videos:
    save_subtitles(v, subtitles[v])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有配合 &lt;strong&gt;MPV&lt;/strong&gt; / &lt;strong&gt;GNOME MPV&lt;/strong&gt; 播放器使用的脚本：&lt;a href=&#34;https://github.com/directorscut82/find_subtitles/blob/master/find_subtitles.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;find_subtitles.lua&lt;/strong&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;&lt;a href=&#34;https://mogeko.github.io/images/029&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;关于 GNOME MPV 播放器&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是 &lt;strong&gt;find_subtitles.lua 默认下载的是英文字幕，下载中午字幕需要在脚本中将 38 行的 &lt;code&gt;en&lt;/code&gt; 替换换成 &lt;code&gt;zh&lt;/code&gt;&lt;/strong&gt;。如果你觉得麻烦的话，可以使用我&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/029/find_subtitles.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;修改过的版本&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GNOME MPV | GNU/Linux 下一个不错的流媒体播放器</title>
      <link>https://mogeko.github.io/2018/029/</link>
      <pubDate>Tue, 20 Nov 2018 16:52:42 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/029/</guid>
      <description>

&lt;!-- 
&lt;img src=&#34;&#34; alt=&#34;&#34; &gt;
&lt;span class=&#34;spoiler&#34; &gt;&lt;/span&gt;
 --&gt;

&lt;p&gt;在 GNU/Linux 下看视频向来是一件麻烦事。&lt;a href=&#34;https://www.videolan.org/index.zh.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;VLC&lt;/strong&gt;&lt;/a&gt; 太过臃肿，&lt;a href=&#34;https://mpv.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;MPV&lt;/strong&gt;&lt;/a&gt; 又太过简 (chǒu) 陋了。&lt;/p&gt;

&lt;p&gt;那么，有没有一款播放器能兼顾美观与内在，随便还拥有较好的易用性和较强的定制能力呢？&lt;/p&gt;

&lt;p&gt;当然是有了！&lt;strong&gt;GNOME MPV&lt;/strong&gt; 就是这么一款播放器，它基于 &lt;strong&gt;MPV&lt;/strong&gt;，继承了 &lt;strong&gt;MPV&lt;/strong&gt; 强大的编解码器，以及其恐怖的定制能力 &lt;span class=&#34;spoiler&#34; &gt;脚本才是 &lt;strong&gt;MPV&lt;/strong&gt; 的灵魂 | ・ω・’）&lt;/span&gt;。同时又拥有较为美观方便的 GUI，简直是居家旅行必备的万能播放器啊！！😂😂😂&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;官网：&lt;a href=&#34;https://gnome-mpv.github.io&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gnome-mpv.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub 地址：&lt;a href=&#34;https://github.com/gnome-mpv/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/gnome-mpv/gnome-mpv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/029/gnome_mpv.png&#34; alt=&#34;GNOME MPV&#34; &gt;&lt;/p&gt;

&lt;h1 id=&#34;依赖&#34;&gt;依赖&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;autotools (只在构建时依赖)&lt;/li&gt;
&lt;li&gt;autoconf-archive (只在构建时依赖)&lt;/li&gt;
&lt;li&gt;pkg-config (只在构建时依赖)&lt;/li&gt;
&lt;li&gt;gcc (只在构建时依赖)&lt;/li&gt;
&lt;li&gt;intltool (只在构建时依赖)&lt;/li&gt;
&lt;li&gt;python2 (只在构建时依赖)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;glib2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gtk3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;libmpv&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;youtube-dl (可选)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;h2 id=&#34;gnu-linux-packages&#34;&gt;GNU/Linux packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Arch Linux &lt;a href=&#34;https://www.archlinux.org/packages/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.archlinux.org/packages/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arch Linux (Git): &lt;a href=&#34;https://aur.archlinux.org/packages/gnome-mpv-git&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://aur.archlinux.org/packages/gnome-mpv-git&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Debian testing: &lt;a href=&#34;https://packages.debian.org/testing/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://packages.debian.org/testing/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Debian unstable: &lt;a href=&#34;https://packages.debian.org/sid/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://packages.debian.org/sid/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fedora (rpmfusion): &lt;a href=&#34;https://admin.rpmfusion.org/pkgdb/package/free/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://admin.rpmfusion.org/pkgdb/package/free/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Frugalware: &lt;a href=&#34;http://www4.frugalware.org/pub/linux/distributions/frugalware/frugalware-current/source/xapps-extra/gnome-mpv/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://www4.frugalware.org/pub/linux/distributions/frugalware/frugalware-current/source/xapps-extra/gnome-mpv/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;OpenSUSE: &lt;a href=&#34;https://software.opensuse.org/package/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://software.opensuse.org/package/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Gentoo: &lt;a href=&#34;https://packages.gentoo.org/packages/media-video/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://packages.gentoo.org/packages/media-video/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Guix: &lt;a href=&#34;https://www.gnu.org/software/guix/packages/g.html#gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.gnu.org/software/guix/packages/g.html#gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Solus: &lt;a href=&#34;https://packages.solus-project.com/shannon/g/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://packages.solus-project.com/shannon/g/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ubuntu: &lt;a href=&#34;https://launchpad.net/~xuzhen666/+archive/ubuntu/gnome-mpv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://launchpad.net/~xuzhen666/+archive/ubuntu/gnome-mpv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;source-code&#34;&gt;Source code&lt;/h2&gt;

&lt;p&gt;在终端中运行以下命令以构建并安装&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./autogen.sh &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;

&lt;p&gt;推荐使用 &lt;strong&gt;MPV&lt;/strong&gt; 的配置文件来对 &lt;strong&gt;GNOME MPV&lt;/strong&gt; (及 &lt;code&gt;mpv.conf&lt;/code&gt; 和 &lt;code&gt;input.conf&lt;/code&gt; ) 进行配置，这样一方面可以使配置兼容 &lt;strong&gt;MPV&lt;/strong&gt;，另一方面可定制性更高。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;首选项&lt;/strong&gt;  -&amp;gt; 勾选 &lt;strong&gt;加载 MPV 配置文件&lt;/strong&gt; 和 &lt;strong&gt;加载 MPV 输入配置文件&lt;/strong&gt; -&amp;gt; 定位到  &lt;code&gt;mpv.conf&lt;/code&gt; 和 &lt;code&gt;input.conf&lt;/code&gt; 的位置 (Linux 下一般是 &lt;code&gt;~/.config/mpv/&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;以下是我目前使用的配置文件；因为只是轻度使用，所以比较简单&lt;/p&gt;

&lt;p&gt;更多配置请参考：&lt;a href=&#34;https://github.com/mpv-player/mpv/blob/master/etc/mpv.conf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;MPV 配置文件示例&lt;/a&gt;&amp;emsp;&amp;emsp;&lt;a href=&#34;https://github.com/mpv-player/mpv/blob/master/etc/input.conf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;MPV 输入配置文件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mpv.conf:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;# 没有边框
#no-border

# 记住断点
seve-position-on-quit

# 音/字幕轨选择
## 指定优先使用音轨（DVD使用ISO 639-1两位语言代码，MKV、MPEG-TS使用ISO 639-2 三位语言代码）
alang=zh,chi
## 指定优先使用字幕轨（DVD使用ISO 639-1两位语言代码，MKV、MPEG-TS使用ISO 639-2 三位语言代码）
slang=zh,chi

# 音/字幕轨加载方式
## 加载视频文件的外部音频文件方式。（fuzzy 加载含有视频文件名的全部音频文件）
audio-file-auto=fuzzy
## 加载视频文件的外部字幕文件方式。（fuzzy 加载含有视频文件名的全部字幕文件）
sub-auto=fuzzy
## 字幕编码
sub-codepage=utf-8:gb18030
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;input.conf:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;# 退出方式
q quit-watch-later
Q quit-watch-later
ESC quit-watch-later
CLOSE_WIN quit-watch-later

# 音量调整
WHEEL_UP volume 5
WHEEL_DOWN volume -5
UP volume 5
DOWN volume -5

# 播放/暂停
MBTN_LEFT cycle pause
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;插件&#34;&gt;插件&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;MPV&lt;/strong&gt; 之所以广受好评，一个很重要的原因就是它强大的插件系统。&lt;strong&gt;GNOME MPV&lt;/strong&gt; 基于 &lt;strong&gt;MPV&lt;/strong&gt;，自然是继承了大把的插件，这也让 &lt;strong&gt;GNOME MPV&lt;/strong&gt; 的可玩性提升了一个档次。&lt;/p&gt;

&lt;h3 id=&#34;插件安装方法&#34;&gt;插件安装方法&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MPV&lt;/strong&gt;: 将插件脚本粘贴到 &lt;code&gt;~/.config/mpv/scripts&lt;/code&gt; 文件夹中&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GNOME MPV&lt;/strong&gt;: &lt;strong&gt;首选项&lt;/strong&gt; -&amp;gt; &lt;strong&gt;插件&lt;/strong&gt; -&amp;gt; 选择插件脚本的路径&lt;/p&gt;

&lt;h3 id=&#34;推荐几个插件&#34;&gt;推荐几个插件&lt;/h3&gt;

&lt;p&gt;这里推荐几个我比较常用的插件。&lt;/p&gt;

&lt;p&gt;更多插件请参考：&lt;a href=&#34;https://github.com/mpv-player/mpv/wiki/User-Scripts&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;MPV&lt;/strong&gt; 插件脚本列表&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;autoload.lua&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;自动加载当前播放文件目录里的视频文件到播放列表，也就是自动连播。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mpv-player/mpv/blob/master/TOOLS/lua/autoload.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub 地址&lt;/a&gt;&amp;emsp;&amp;emsp;&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/029/autoload.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;下载地址 (不保证最新)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;save-sub-delay.lua&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;有时候外挂字幕时间轴不正确，调好之后，这个脚本会保存delay信息。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zc62/mpv-scripts/blob/master/save-sub-delay.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub 地址&lt;/a&gt;&amp;emsp;&amp;emsp;&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/029/save-sub-delay.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;下载地址 (不保证最新)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;find_subtitles.lua&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;自动使用 &lt;a href=&#34;https://github.com/Diaoul/subliminal&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;subliminal&lt;/strong&gt;&lt;/a&gt; 从字幕站匹配并下载字幕。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;find_subtitles.lua 默认下载的是英文字幕，下载中午字幕需要在脚本中将 38 行的 &lt;code&gt;en&lt;/code&gt; 替换换成 &lt;code&gt;zh&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;依赖：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;python2 &lt;span class=&#34;spoiler&#34; &gt;实际上是 &lt;strong&gt;subliminal&lt;/strong&gt; 依赖 python2&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;subliminal -&amp;gt; &lt;a href=&#34;https://mogeko.github.io/2018/030&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;关于 subliminal (安装方法)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/directorscut82/find_subtitles/blob/master/find_subtitles.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub 地址&lt;/a&gt;&amp;emsp;&amp;emsp;&lt;a href=&#34;https://github.com/Mogeko/Blog/releases/download/029/find_subtitles.lua&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;下载地址 (我调整过的版本)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 Travis CI 自动部署 Hugo 博客</title>
      <link>https://mogeko.github.io/2018/028/</link>
      <pubDate>Mon, 19 Nov 2018 11:28:18 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/028/</guid>
      <description>

&lt;p&gt;通过 Travis CI 来部署 Hugo 或者 Hexo 博客可能在配置的时候会麻烦一点，但配置好后确实是方便了不少。特别是对于 Hugo 这种没有部署插件的静态网站生成器，只能手动部署到 GitHub。&lt;/p&gt;

&lt;p&gt;网上有很多关于用 Travis 自动部署 Hexo 的文章，却没看到几篇关于 Hugo，虽然原理都差不多，但细节上还是有很多容易让小白头疼的地方，所以今天我就来教教如何用 Travis 来自动部署 Hugo。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;正文&#34;&gt;正文&lt;/h1&gt;

&lt;p&gt;废话不多说，我们开始吧！&lt;/p&gt;

&lt;h2 id=&#34;设置代码仓库&#34;&gt;设置代码仓库&lt;/h2&gt;

&lt;p&gt;首先确保你的 GitHub 上有这两个仓库：&lt;strong&gt;用来部署博客的 &lt;code&gt;[用户名].github.io&lt;/code&gt;&lt;/strong&gt; 和 &lt;strong&gt;用来存放“源码”的 &lt;code&gt;Blog&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这里与别的&lt;strong&gt;「使用 Travis 自动部署博客」&lt;/strong&gt;教程稍微有点不同，别人家大多上将博客的&lt;strong&gt;「源码」&lt;/strong&gt;放在 &lt;strong&gt;&lt;code&gt;[用户名].github.io&lt;/code&gt;&lt;/strong&gt; 的分支上，而不是向我一样开两个仓库&lt;/p&gt;

&lt;p&gt;开两个仓库的好处有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;结构更清晰。与博客相关的内容都在 &lt;strong&gt;&lt;code&gt;Blog&lt;/code&gt;&lt;/strong&gt;仓库里， &lt;strong&gt;&lt;code&gt;[用户名].github.io&lt;/code&gt;&lt;/strong&gt; 只用来提供一个 GitHub Pages 的服务&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;「源码」&lt;/strong&gt; 存放在 &lt;strong&gt;&lt;code&gt;master&lt;/code&gt;&lt;/strong&gt; 分支下，&lt;code&gt;clone&lt;/code&gt; 更快 &lt;span class=&#34;spoiler&#34; &gt;我不知道上我的原因还是 GitHub 或是 Git 的原因，我从 GitHub &lt;strong&gt;clone&lt;/strong&gt; 除 &lt;strong&gt;master&lt;/strong&gt; 分支以外的分支时，下载速度贼慢，只有几百 kb 每秒，&lt;strong&gt;clone&lt;/strong&gt; 一个 &lt;strong&gt;「源码」&lt;/strong&gt; 都至少要半个多小时&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;申请-token&#34;&gt;申请 Token&lt;/h2&gt;

&lt;p&gt;然后要去 GitHub 上申请一个新的 &lt;a href=&#34;https://github.com/settings/tokens/new&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;personal access token&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Token description&lt;/strong&gt; 也就是 Token 的名字，可以随便填。然后&lt;strong&gt;一定要勾选上 &lt;code&gt;repo&lt;/code&gt; 上的所以项目，然后别的项目一个都不要选&lt;/strong&gt;。点 &lt;code&gt;Generate token&lt;/code&gt; 生成 Token。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/028/get_token.png&#34; alt=&#34;Get Token&#34;&gt;&lt;/p&gt;

&lt;p&gt;然后记下 Token 的值，也就是我打码的那一部分 (一定要记下来，因为离开这个页面之后就没有机会再次查看了)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/028/get_token_api.png&#34; alt=&#34;Get Token&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;设置-travis-ci&#34;&gt;设置 Travis CI&lt;/h2&gt;

&lt;p&gt;接着来到 &lt;a href=&#34;https://travis-ci.org/account/repositories&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Travis CI&lt;/a&gt;，使用 GitHub 帐号登录；然后为 &lt;strong&gt;&lt;code&gt;Blog&lt;/code&gt;&lt;/strong&gt; 仓库打上 ☑，然后点 &lt;code&gt;setting&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/028/set_travis_1.png&#34; alt=&#34;设置 Travis CI&#34;&gt;&lt;/p&gt;

&lt;p&gt;然后填写 &lt;strong&gt;Environment Variables&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/strong&gt; 填写： &lt;code&gt;GITHUB_TOKEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/strong&gt; 填写：刚刚在 GitHub 申请到的 Token 的值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/028/set_travis_2.png&#34; alt=&#34;设置 Travis CI&#34;&gt;&lt;/p&gt;

&lt;p&gt;点击 &lt;code&gt;Add&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;编写-travis-yml&#34;&gt;编写 .travis.yml&lt;/h2&gt;

&lt;p&gt;在 &lt;strong&gt;Blog&lt;/strong&gt; 的目录下创建并编辑一个 &lt;code&gt;.travis.yml&lt;/code&gt; 文件。这个文件的作用是告诉 &lt;strong&gt;Travis CI&lt;/strong&gt; 如何部署你的博客的&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;language: go

go:
  - &amp;quot;1.8&amp;quot;  # 指定Golang 1.8

# Specify which branches to build using a safelist
# 分支白名单限制：只有 master 分支的提交才会触发构建
# branches:
#   only:
#     - master

install:
  # 安装最新的hugo
  - wget https://github.com/gohugoio/hugo/releases/download/v0.51/hugo_0.51_Linux-64bit.deb
  - sudo dpkg -i hugo*.deb
  # 安装主题
  - git clone [你使用的主题的 Git 地址]

script:
  # 运行hugo命令
  - hugo

after_script:
  # 部署
  - cd ./public
  - git init
  - git config user.name &amp;quot;[你的名字]&amp;quot;
  - git config user.email &amp;quot;[你的邮箱]&amp;quot;
  - git add .
  - git commit -m &amp;quot;Update Blog By TravisCI With Build $TRAVIS_BUILD_NUMBER&amp;quot;
  # Github Pages
  - git push --force --quiet &amp;quot;https://$GITHUB_TOKEN@${GH_REF}&amp;quot; master:master
  # Github Pages
  - git push --quiet &amp;quot;https://$GITHUB_TOKEN@${GH_REF}&amp;quot; master:master --tags

env:
 global:
   # Github Pages
   - GH_REF: [用来部署博客的 Git 地址]

deploy:
  provider: pages # 重要，指定这是一份github pages的部署配置
  skip-cleanup: true # 重要，不能省略
  local-dir: public # 静态站点文件所在目录
  # target-branch: master # 要将静态站点文件发布到哪个分支
  github-token: $GITHUB_TOKEN # 重要，$GITHUB_TOKEN是变量，需要在GitHub上申请、再到配置到Travis
  # fqdn:  # 如果是自定义域名，此处要填
  keep-history: true # 是否保持target-branch分支的提交记录
  on:
    branch: master # 博客源码的分支
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将上面的配置文件按照你的实际情况更改。&lt;/p&gt;

&lt;p&gt;然后将代码提交到 &lt;strong&gt;Blog 仓库&lt;/strong&gt; 里。等个一两分钟，就可以在 &lt;a href=&#34;https://travis-ci.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Travis CI&lt;/a&gt; 上查看部署情况了&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color:#00FF00&#34;&gt;绿色&lt;/span&gt; 代表部署成功&amp;emsp;&amp;emsp;&lt;span style=&#34;color:#FFFF00&#34;&gt;黄色&lt;/span&gt; 代表正在部署&amp;emsp;&amp;emsp;&lt;span style=&#34;color:#FF0000&#34;&gt;红色&lt;/span&gt; 代表部署失败&amp;emsp;&amp;emsp;&lt;span style=&#34;color:#C0C0C0&#34;&gt;灰色&lt;/span&gt; 代表部署被取消&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mogeko.github.io/images/028/run_travis.png&#34; alt=&#34;Travis CI 部署&#34;&gt;&lt;/p&gt;

&lt;p&gt;然后再去你的博客，如果没有出什么偏差的话就说明部署成功了 | ・ω・’）&lt;/p&gt;

&lt;p&gt;以后的话就只需要把写好的文章推送到 &lt;strong&gt;Blog 仓库&lt;/strong&gt; 下就可以了，就不需要再自己编译然后手动推送了 &lt;span class=&#34;spoiler&#34; &gt;甚至连 Hugo 都可以不要装  | ・ω・’）&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;附录-以及一些坑-з&#34;&gt;附录 以及一些坑 _(:з)∠)_&lt;/h1&gt;

&lt;h2 id=&#34;添加-gitignore-文件&#34;&gt;添加 .gitignore 文件&lt;/h2&gt;

&lt;p&gt;在 Hugo 本地编译时会产生 &lt;code&gt;public&lt;/code&gt; 文件夹，但是这个文件夹中的内容对于 &lt;strong&gt;Blog 仓库&lt;/strong&gt; 来说是不需要的 (包括用来存放主题的 &lt;code&gt;themes&lt;/code&gt; 文件夹和主题产生的 &lt;code&gt;resources&lt;/code&gt; 文件夹也是不需要的)&lt;/p&gt;

&lt;p&gt;我们可以用一个&lt;code&gt;.gitignore&lt;/code&gt; 文件来排除这些内容&lt;/p&gt;

&lt;p&gt;在 Blog 目录下创建并修改 &lt;code&gt;.gitignore&lt;/code&gt;，然后提交到 GitHub&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;public/*
themes/*
resources/*
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;travis-ci-的分支白名单&#34;&gt;Travis CI 的分支白名单&lt;/h2&gt;

&lt;p&gt;我给你的 &lt;code&gt;.travis.yml&lt;/code&gt; 文件中有怎么一段&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Specify which branches to build using a safelist
# 分支白名单限制：只有 master 分支的提交才会触发构建
branches:
  only:
    - master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这一段的作用是限制触发构建的分支。这在正常开发中是很重要的配置，特别是在团队 (多人) 开发的场景中。&lt;/p&gt;

&lt;p&gt;不过这里不存在这个场景，并且如果配置错了会出很大的问题，很容易坑到小白， &lt;span class=&#34;spoiler&#34; &gt;比如说我 _(:з)∠)_ &lt;/span&gt;所以默认就给注释掉了。&lt;/p&gt;

&lt;p&gt;如果你晓得这是干啥的，并且觉得有必要的话，可以考虑开启&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bottom-up  to development a Loan Calculator</title>
      <link>https://mogeko.github.io/2018/027/</link>
      <pubDate>Sun, 18 Nov 2018 18:30:52 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/027/</guid>
      <description>

&lt;h1 id=&#34;about-the-bottom-up-development&#34;&gt;About the bottom-up development&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Bottom-up development&lt;/strong&gt; is a style of developing programs. With  the  bottom-up  development, we  develop  in  the  reverse  inside-out  fashion; that is, we develop the service classes first. To test the service classes, we write a temporary dummy main class. After the service classes are done, we complete the top-level class that  uses  these  service  classes.  The  bottom-up  development  for  this  program  implements the &lt;code&gt;Loanclass&lt;/code&gt; first fully and then the &lt;code&gt;LoanCalculatorclass&lt;/code&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;development-steps&#34;&gt;Development steps&lt;/h1&gt;

&lt;p&gt;In this example, we write the &lt;strong&gt;service class&lt;/strong&gt; (&lt;code&gt;Loanclass&lt;/code&gt;) and write the &lt;strong&gt;main&lt;/strong&gt; function in the &lt;code&gt;Loanclass&lt;/code&gt;  to test the &lt;code&gt;Loanclass&lt;/code&gt;. Next, we create a &lt;code&gt;LoanCalculatorclass&lt;/code&gt; to &lt;strong&gt;handle the user&amp;rsquo;s input and output&lt;/strong&gt;, and compute the monthly and total payments by calling the member method (&lt;code&gt;getLoan()&lt;/code&gt;) of &lt;code&gt;Loanclass&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;loan-class&#34;&gt;Loan class&lt;/h1&gt;

&lt;h2 id=&#34;step-1&#34;&gt;Step 1&lt;/h2&gt;

&lt;p&gt;First, we write a &lt;strong&gt;constructor&lt;/strong&gt; (&lt;code&gt;Loan()&lt;/code&gt;) to receive three &lt;strong&gt;form parameters&lt;/strong&gt; (&lt;code&gt;double amount&lt;/code&gt;, &lt;code&gt;double rate&lt;/code&gt; and &lt;code&gt;int period&lt;/code&gt;), and assign them to &lt;strong&gt;member variables&lt;/strong&gt; (&lt;code&gt;double amount&lt;/code&gt;, &lt;code&gt;double rate&lt;/code&gt; and &lt;code&gt;int period&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Second, we write two &lt;strong&gt;dummy function&lt;/strong&gt; (&lt;code&gt;double getMonPay()&lt;/code&gt; and &lt;code&gt;double getTotalPay()&lt;/code&gt;) .&lt;/p&gt;

&lt;p&gt;Third, we write a &lt;code&gt;main&lt;/code&gt; function to test the &lt;code&gt;Loanclass&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Loan {
    private final int MONTHS_IN_YEAR = 12;
    private double amount; // Loan amount
    private double rate; // Lnterest rate
    private int period; // Loan period

    // Constructor
    public Loan(double amount, double rate, int period){
        this.amount = amount;
        this.rate = rate;
        this.period = period;
    }

    // Calculating monthly payments
    public double getMonPay(){
        return 100.1;
    }

    // Calculating the total payments
    public double getTotalPay(){
        return 112312.1212;
    }


    // TEST
    public static void main(String[] args) {
        double amount = 100.3;
        double rate = 22;
        int period = 12;

        Loan loan = new Loan(amount, rate, period);

        System.out.println(&amp;quot;Expected value: &amp;quot; + amount + &amp;quot; Actual value： &amp;quot; + loan.amount);
        System.out.println(&amp;quot;Expected value: &amp;quot; + rate + &amp;quot; Actual value： &amp;quot; + loan.rate);
        System.out.println(&amp;quot;Expected value: &amp;quot; + period + &amp;quot; Actual value： &amp;quot; + loan.period);

        System.out.println(&amp;quot;Expected value: &amp;quot; + 100.1 + &amp;quot; Actual value： &amp;quot; + loan.getMonPay());

        System.out.println(&amp;quot;Expected value: &amp;quot; + 112312.1212 + &amp;quot; Actual value： &amp;quot; + loan.getTotalPay());
    }   
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;operation result:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Expected value: 100.3 Actual value： 100.3
Expected value: 22.0 Actual value： 22.0
Expected value: 12 Actual value： 12
Expected value: 100.1 Actual value： 100.1
Expected value: 112312.1212 Actual value： 112312.1212
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-2&#34;&gt;Step 2&lt;/h2&gt;

&lt;p&gt;Complete the logic in the &lt;strong&gt;dummy function&lt;/strong&gt; to make it a true &lt;strong&gt;member method&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the &lt;strong&gt;real value&lt;/strong&gt; in the &lt;strong&gt;main function&lt;/strong&gt; to test whether the logic of the &lt;strong&gt;member method&lt;/strong&gt; (&lt;code&gt;double getMonPay()&lt;/code&gt; and &lt;code&gt;double getTotalPay()&lt;/code&gt;) is correct.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// Calculating monthly payments
public double getMonPay(){
    return (amount * (rate / 100.0)) / MONTHS_IN_YEAR;
}

// Calculating the total payments
public double getTotalPay(){
    return amount + ((amount * (rate / 100.0)) * period);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;operation result:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Expected value: 100.3 Actual value： 100.3
Expected value: 22.0 Actual value： 22.0
Expected value: 12 Actual value： 12
Expected value: 1.838833 Actual value： 1.8388333333333333
Expected value: 365.092 Actual value： 365.092
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So far, the &lt;code&gt;Loanclass&lt;/code&gt; has been completed.&lt;/p&gt;

&lt;h1 id=&#34;loan-calculator-class&#34;&gt;Loan Calculator class&lt;/h1&gt;

&lt;h2 id=&#34;step-1-1&#34;&gt;Step 1&lt;/h2&gt;

&lt;p&gt;First, we write a &lt;strong&gt;member method&lt;/strong&gt; (&lt;code&gt;void getInput()&lt;/code&gt;) to handle &lt;strong&gt;input&lt;/strong&gt; and another &lt;strong&gt;member method&lt;/strong&gt; (&lt;code&gt;void getOutput()&lt;/code&gt;) to handle &lt;strong&gt;output&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sexond, we write a &lt;strong&gt;fake main function&lt;/strong&gt; to test the input and output.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

class LoanCalculator {
    private double amount; // Loan amount
    private double rate; // Lnterest rate
    private int period; // Loan period
    private double monPayment; // Monthly payment
    private double totalPayment; // Total payment

    public static void main(String[] args) {
        LoanCalculator loanCalculator = new LoanCalculator();

        loanCalculator.getInput();
        System.out.println(&amp;quot;Input: &amp;quot; + loanCalculator.amount + &amp;quot; &amp;quot; + loanCalculator.rate + &amp;quot; &amp;quot; + loanCalculator.period);

        System.out.println();

        loanCalculator.monPayment = 100.1;
        loanCalculator.totalPayment = 200.2;
        loanCalculator.getOutput();
    }

    // Processing input
    private void getInput(){
        Scanner sc = new Scanner(System.in);

        System.out.print(&amp;quot;Your loan amount: $&amp;quot;);
        amount = sc.nextDouble();
        System.out.print(&amp;quot;Your loan interest rate (%): &amp;quot;);
        rate = sc.nextDouble();
        System.out.print(&amp;quot;Your loan period (year): &amp;quot;);
        period = sc.nextInt();

        sc.close();
    }

    // Processing output
    private void getOutput(){
        System.out.println(&amp;quot;Your monthly payment is $&amp;quot; + monPayment);
        System.out.println(&amp;quot;Your total payment is $&amp;quot; + totalPayment);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;operation result:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Your loan amount: $100.1
Your loan interest rate (%): 33.2
Your loan period (year): 12
Input: 100.1 33.2 12

Your monthly payment is $100.1
Your total payment is $200.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-2-1&#34;&gt;Step 2&lt;/h2&gt;

&lt;p&gt;Rewrite the &lt;strong&gt;main function&lt;/strong&gt;, call the &lt;code&gt;getMonPay()&lt;/code&gt; method of the &lt;code&gt;Loan&lt;/code&gt; class to calculating the monthly payments, and call the &lt;code&gt;getTotalPay()&lt;/code&gt; method of the &lt;code&gt;Loan&lt;/code&gt; class to calculating the total payments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static void main(String[] args) {
    LoanCalculator loanCalculator = new LoanCalculator();

    loanCalculator.getInput();

    Loan loan = new Loan(loanCalculator.amount, loanCalculator.rate, loanCalculator.period);
    System.out.println();

    loanCalculator.monPayment = loan.getMonPay();
    loanCalculator.totalPayment = loan.getTotalPay();
    loanCalculator.getOutput();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;operation result:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Your loan amount: $100
Your loan interest rate (%): 22
Your loan period (year): 10

Your monthly payment is $1.8333333333333333
Your total payment is $320.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Completed!!! ヾ(&lt;em&gt;´▽&amp;rsquo;&lt;/em&gt;)ﾉ.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>