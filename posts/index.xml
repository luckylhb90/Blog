<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mogeko`s Blog</title>
    <link>https://mogeko.github.io/posts/</link>
    <description>Recent content in Posts on Mogeko`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 21 Nov 2018 19:30:25 +0800</lastBuildDate>
    
	<atom:link href="https://mogeko.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GNU/Linux 技巧：如何快速的找到一个文件</title>
      <link>https://mogeko.github.io/2018/032/</link>
      <pubDate>Wed, 21 Nov 2018 19:30:25 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/032/</guid>
      <description>&amp;emsp;&amp;emsp; -- 在使用计算机的过程中，我们都有着这么一个需求：找文件！！
“卧槽，我的 XXX 文件放哪儿去了？”Σ(っ °Д °;)っ
“XXX 文件不应该就在 XXX 文件夹里吗？！咋个找球不到啊？”‧º·(˚ ˃̣̣̥᷄⌓˂̣̣̥᷅ )‧º·˚
“MMP！1000 多个文件！我找你麻痹！！”（╯‵□′）╯︵┴─┴
在一些没有 GUI 的 GNU/Linux 中，遇到这种情况更是雪上加霜。好在 GNU/Linux 的终端中有着不少优秀的命令行工具，可以帮助我们解决上述问题。
下面就介绍三个最常用的在 GNU/Linux 中快速找文件的命令行工具：ls、tree 和 find
ls ls 可能是所有 Linuxer 学习到的第一个命令了 cd: 喵喵喵？ 它既简单又实用，如果给 GNU/Linux 中所有的命令使用频率排个名的话，ls 绝对在前 5。
ls 的作用就是列出指定目录下 (默认当前目录) 的所有可见的文件与文件夹，就像这样：
$ ls Desktop Documents Downloads Dropbox Music Pictures Public Steam Templates Videos  添加 -l 选项则可以查看文件的更多信息。同时再加上 -h 则可查看到文件文件的大小：
$ ls -lh drwxr-xr-x 2 mogeko mogeko 4.</description>
    </item>
    
    <item>
      <title>GNU/Linux 输入法折腾笔记 (RIME)</title>
      <link>https://mogeko.github.io/2018/031/</link>
      <pubDate>Wed, 21 Nov 2018 12:38:05 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/031/</guid>
      <description>-- 终于，我在也忍受不了 Ubuntu 18.04 自带的 ibus-libpinyin 了。决定好好配置以下输入法，本来以为最多半个小时就能搞定的事情，结果整整花了半天 _(:з」∠)_
网上一搜发现 搜狗拼音 有 GNU/Linux 版的，于是去官网下载了 搜狗拼音 的 deb 包，安装，全局终…
才怪 | ・ω・’）
当我看到 搜狗拼音 只能支持 fcitx 框架 时瞬间就放弃了。不是说 fcitx 框架 不好，只是觉得要换输入法框架太折腾了 (Ubuntu 18.4 预装了 ibus 框架)；后来事实证明，ibus 框架 不仅折腾，bug 还多…
早晓得就换 fcitx 框架 了 _(:з」∠)_

放弃 搜狗拼音 后，我又将目光投向了一款开源的跨平台输入法：RIME 
 中州韵输入法引擎（英语：Rime Input Method Engine，又称Rime 输入法）是由佛振编写的开源中文输入法，目前项目网站、源代码均托管在GitHub[注 1]。基于同一个核心架构，该输入法分为三个官方发行版：Linux 发行版中州韵（ibus-rime）、Windows发行版小狼毫（Weasel）、macOS 发行版鼠须管（Squirrel）。另有数个第三方发行版：Linux 发行版fcitx-rime、Windows发行版PRIME、macOS 发行版XIME、Android发行版同文输入法（Trime）、iOS发行版iRime。
 哇！开源输入法呢！！✪ω✪
去 TM 的资本主义 搜狗拼音，开源输入法才配在睾贵的 GNU/Linux 上打字
于是便上了 RIME 的贼船 _(:з」∠)_</description>
    </item>
    
    <item>
      <title>subliminal | 电影字幕下载神器</title>
      <link>https://mogeko.github.io/2018/030/</link>
      <pubDate>Wed, 21 Nov 2018 09:39:26 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/030/</guid>
      <description>-- subliminal 是一个基于 Python 的强大的命令行字幕搜索和下载工具。
最先知道 subliminal 是因为 MPV 播放器。配合插件 find_subtitles.lua 使用，在载入视频的同时搜索并下载中文字幕，简直天衣无缝。不过有的视频的文件名不是那么标准的话，就不一定能匹配得到合适的字幕。解决方法除了改文件名以外，还可以用 subliminal 手动搜索。
subliminal 使用多个字幕网站做为数据源，包括世界上最大的开放式字幕库 opensubtitles
不幸的是，有几个字幕站被墙了，比如 podnapisi, legendastv, shooter…

GitHub 地址：https://github.com/Diaoul/subliminal

依赖  python2  安装 首先安装 python2 和 pip
然后在终端中输入：
pip install subliminal  使用 在终端中输入：
subliminal download -l zh [电影名称]  例如，如果要下载「低俗小说」的字幕：
subliminal download -l zh Pulp.Fiction.1994.720p.BluRay.DTS.x264-ESiR  部分字幕文件：
2 00:00:14,480 --&amp;gt; 00:00:18,850 柔軟潮濕的物體 3 00:00:18,980 --&amp;gt; 00:00:24,610 低級趣味、印刷簡陋的書刊 4 00:00:27,620 --&amp;gt; 00:00:31,590 算了 太冒險了 我不幹 5 00:00:31,590 --&amp;gt; 00:00:34,080 你每次都這樣說 6 00:00:34,460 --&amp;gt; 00:00:36,890 太危險了…我不幹了… 7 00:00:37,060 --&amp;gt; 00:00:39,530 我哪一次說錯?</description>
    </item>
    
    <item>
      <title>GNOME MPV | GNU/Linux 下一个不错的流媒体播放器</title>
      <link>https://mogeko.github.io/2018/029/</link>
      <pubDate>Tue, 20 Nov 2018 16:52:42 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/029/</guid>
      <description>-- 在 GNU/Linux 下看视频向来是一件麻烦事。VLC 太过臃肿，MPV 又太过简 (chǒu) 陋了。
那么，有没有一款播放器能兼顾美观与内在，随便还拥有较好的易用性和较强的定制能力呢？
当然是有了！GNOME MPV 就是这么一款播放器，它基于 MPV，继承了 MPV 强大的编解码器，以及其恐怖的定制能力 脚本才是 MPV 的灵魂 | ・ω・’）。同时又拥有较为美观方便的 GUI，简直是居家旅行必备的万能播放器啊！！😂😂😂

官网：https://gnome-mpv.github.io
GitHub 地址：https://github.com/gnome-mpv/gnome-mpv

依赖  autotools (只在构建时依赖) autoconf-archive (只在构建时依赖) pkg-config (只在构建时依赖) gcc (只在构建时依赖) intltool (只在构建时依赖) python2 (只在构建时依赖) glib2 gtk3 libmpv youtube-dl (可选)  安装 GNU/Linux packages  Arch Linux https://www.archlinux.org/packages/gnome-mpv
 Arch Linux (Git): https://aur.archlinux.org/packages/gnome-mpv-git
 Debian testing: https://packages.debian.org/testing/gnome-mpv
 Debian unstable: https://packages.debian.org/sid/gnome-mpv
 Fedora (rpmfusion): https://admin.</description>
    </item>
    
    <item>
      <title>使用 Travis CI 自动部署 Hugo 博客</title>
      <link>https://mogeko.github.io/2018/028/</link>
      <pubDate>Mon, 19 Nov 2018 11:28:18 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/028/</guid>
      <description>通过 Travis CI 来部署 Hugo 或者 Hexo 博客可能在配置的时候会麻烦一点，但配置好后确实是方便了不少。特别是对于 Hugo 这种没有部署插件的静态网站生成器，只能手动部署到 GitHub。
网上有很多关于用 Travis 自动部署 Hexo 的文章，却没看到几篇关于 Hugo，虽然原理都差不多，但细节上还是有很多容易让小白头疼的地方，所以今天我就来教教如何用 Travis 来自动部署 Hugo。
正文 废话不多说，我们开始吧！
设置代码仓库 首先确保你的 GitHub 上有这两个仓库：用来部署博客的 [用户名].github.io 和 用来存放“源码”的 Blog
这里与别的「使用 Travis 自动部署博客」教程稍微有点不同，别人家大多上将博客的「源码」放在 [用户名].github.io 的分支上，而不是向我一样开两个仓库
开两个仓库的好处有：
 结构更清晰。与博客相关的内容都在 Blog仓库里， [用户名].github.io 只用来提供一个 GitHub Pages 的服务 「源码」 存放在 master 分支下，clone 更快 我不知道上我的原因还是 GitHub 或是 Git 的原因，我从 GitHub clone 除 master 分支以外的分支时，下载速度贼慢，只有几百 kb 每秒，clone 一个 「源码」 都至少要半个多小时  申请 Token 然后要去 GitHub 上申请一个新的 personal access token。</description>
    </item>
    
    <item>
      <title>Bottom-up  to development a Loan Calculator</title>
      <link>https://mogeko.github.io/2018/027/</link>
      <pubDate>Sun, 18 Nov 2018 18:30:52 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/027/</guid>
      <description>About the bottom-up development Bottom-up development is a style of developing programs. With the bottom-up development, we develop in the reverse inside-out fashion; that is, we develop the service classes first. To test the service classes, we write a temporary dummy main class. After the service classes are done, we complete the top-level class that uses these service classes. The bottom-up development for this program implements the Loanclass first fully and then the LoanCalculatorclass.</description>
    </item>
    
    <item>
      <title>Windows / Office 激活脚本 (使用 KMS)</title>
      <link>https://mogeko.github.io/2018/026/</link>
      <pubDate>Sun, 18 Nov 2018 00:54:27 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/026/</guid>
      <description>很早以前的一个仓库了，博主已经入了 Office 365，早就用不到了。
不过最近帮小学妹装机，所以突然诈尸更新了一波。给需要的人 (○&amp;rsquo;◡&amp;rsquo;○)ﾉ♥ 这个脚本可以用来激活：
 Office (零售版和 VOL 版) Windows (仅限 VOL 版)  链接：Mogeko/KMS | GitHub
直接下载：Run.cmd
使用的 KMS 服务器来自：零散坑
用法 双击运行 Run.cmd，然后根据提示激活即可
VOL 版的 Office 和 Windows 直接通过 KMS 激活，零售版的 Office 需要先用脚本转换成 VOL 版，然后通过 KMS 激活。零售版 Windows：我觉得我还可以抢救一下 QAQ
脚本默认激活的是 2016 版的 Office，其他版本可以到文件夹里找单独激活的脚本 (没测试过，理论上是可以用的)，或者自己手动改一下脚本 (将 %ospp% 这个变量替换成正确的 opss.vbs 路径)

怎么说呢，要尊重别人的劳动成果，所以我觉得大家应该尽量避免使用盗版软件。
毕竟软软也是要掐饭的嘛，有能力的话最好还是入个正比较好 |・ω・｀)

 ·End·</description>
    </item>
    
    <item>
      <title>Leavelt 主题优化</title>
      <link>https://mogeko.github.io/2018/025/</link>
      <pubDate>Fri, 16 Nov 2018 19:57:09 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/025/</guid>
      <description>目前本博客使用的 Hugo 主题是：Leavelt
正如你说看到的那样，是一款简约大气的的主题。但再使用的过程中我也发现了一些可以改进的地方
添加谈笑风生区 Leavelt 默认没有评论系统，我们可以做一点简单的修改添加 Gitalk 评论系统
关于 Gitalk  官方网址： https://github.com/gitalk/gitalk/ 在线示例： https://gitalk.github.io/  Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。它支持多种语言 (包括 en、zh-CN、zh-TW、es-ES、fr)，并自动判断当前语言。最重要的是 Gitalk 使用的是 GitHub Issue 的 api，不依赖任何第三方平台。也就是说，只要 Github 不倒闭，你的评论系统就不会被关闭。
创建 Github Application 首先要去 GitHub 上创建一个 Github Application
点击创建
记下 Client ID 和 Client Secret，以后要用
添加 gitalk.html 模板 接下来为主题添加 gitalk.html 模板。
在主题的 layouts/partials 文件夹中创建 gitalk.html 文件，写下如下代码
{{ if .Site.Params.enableGitalk }} &amp;lt;div id=&amp;quot;gitalk-container/&amp;quot; style=&amp;quot;border:0&amp;quot; &amp;gt;&amp;lt;/div&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://unpkg.</description>
    </item>
    
    <item>
      <title>为 Hugo 添加谈笑风生区 (Gitalk)</title>
      <link>https://mogeko.github.io/2018/024/</link>
      <pubDate>Fri, 16 Nov 2018 12:57:09 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/024/</guid>
      <description>Hugo 是一个强大的静态网页生成器，使用 go 开发。速度贼快，还有 “时时预览” 等特性。不过 Hugo 还比较年轻，没有像 NexT 那样功能强大，成熟稳定的主题。所以很多东西需要自己动手撸。
就例如评论系统。
关于 Gitalk  官方网址： https://github.com/gitalk/gitalk/ 在线示例： https://gitalk.github.io/  Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。它支持多种语言 (包括 en、zh-CN、zh-TW、es-ES、fr)，并自动判断当前语言。最重要的是 Gitalk 使用的是 GitHub Issue 的 api，不依赖任何第三方平台。也就是说，只要 Github 不倒闭，你的评论系统就不会被关闭。
添加谈笑风生区 本博客使用的主题是：Leavelt
不同主题可能有所区别，但原理都是类似的
原理 众所周知，Hugo 会将 Markdown 文档 按照 主题 (包括 HTML 模板、CSS、JavaScript 等) 编译成静态网页
那么我们只需要将 Gitalk 作为一个 &amp;lt;div&amp;gt; 插入到 HTML 模板中，然后在 config.toml 中添加相关配置，就可以实现“谈笑风生区”了
创建 Github Application 首先要去 GitHub 上创建一个 Github Application
点击创建</description>
    </item>
    
    <item>
      <title>Rusty Lake: Roots 通关攻略 施工中...</title>
      <link>https://mogeko.github.io/2018/023/</link>
      <pubDate>Wed, 10 Oct 2018 19:52:24 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/023/</guid>
      <description>本指南涉及严重剧透！！！
Rusty Lake: Roots 是一款画风超棒的解密游戏。因为是解密游戏，所以不建议一开始就看这篇指南。 我写这篇指南的目的主要是为了记录一下游戏的过程，以及对卡关卡得难受的人做一点微小的工作。
这篇指南会根据我的游戏进度慢慢更新，像「锈湖」这种小众游戏的指南应该没多少人看吧 |・ω・｀)
第 1 关 首先阅读 James 衣服兜里的信，记住右下角的数字：572 (行李箱密码)
然后点击脚边地上的行李箱，点击输入密码：572
打开箱子后取得骨头，然后点击箱中的盒子
向右滑动按钮打开盒子，取得种子
将骨头丢给 James 右边的小狗，继续点击小狗，直到它刨出一个坑来
将种子种在坑里
取得场景最右边的水桶 (花洒)，来到左边的水井边，用水桶打一桶水
用打来的水浇两次种子，直到它长成小树苗
这时点一下 James 的脸，通关
第 2 关 先将小板凳移到 James 的脚下，点一下站上去
然后到上一关种下的小树苗那里折下一个树枝
将树枝交给 James，然后让他把鸟窝捅下来
到两个花盆边，点击左边的一个花盆，得到一个宝石
然后拾起地上的小虫虫
回到被捅下的鸟窝边，点击鸟蛋孵出小鸟
将刚刚拾起的小虫虫喂给它，得到第二个宝石
来到场景的右边，点一下房子的窗户
然后持续点击有宝石的那一块玻璃
中途会出现一只鸟人；不管他，继续点，直到打碎玻璃获得第三块宝石
将获得的三块宝石放在门上，开门，通关
第 3 关 先点一下左上角的画，从画的右上角撕下画，取得钥匙
然后用钥匙打开最右边的柜子，取得斧头和火柴
用斧头把木头劈成柴，将材放入壁炉中生火
这时可以看到壁炉左上角的钥匙，获得钥匙
用钥匙打开窗子，记下血手印的位置
按照血手印的位置输入密码，打开左下角的柜子 (如图)
柜子里有一个怀表，点一下，怀表指针指向
8:25
点一下大钟，将大钟的指针拨成
8:25
，打开大钟，其中藏着一具尸体
持续点击尸体的乳头，直到获得其心脏
将心脏放入左边柜子上的容器内，通关
收集全部牺牲
这时来到「树」页面，可以看到「树」出现了分支，并且左上角出现了一个新的图标
第 4 关 首先向右移动一点场景，拿到玫瑰花和乌鸦羽毛
将玫瑰花送给妹子，点击妹子闻一下玫瑰，然后妹子怎么就流血了？！QAQ</description>
    </item>
    
    <item>
      <title>空洞骑士：格林剧团 DLC 全成就指南</title>
      <link>https://mogeko.github.io/2018/022/</link>
      <pubDate>Sun, 30 Sep 2018 21:06:00 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/022/</guid>
      <description>补一篇格林剧团 DLC 的全成就指南
「格林剧团」的难度相较于「寻神者」和 主线剧情 要简单得多，属于比较容易完成的 DLC。但「格林剧团」采用的是双结局，而且结局是与获得成就直接相关的，因此「格林剧团」的所有成就不可能在同一个存档中完成。
解决方法：
 开两个存档 备份存档然后回档 -&amp;gt; 「空洞骑士」存档备份方法  开启方法 在「呼啸悬崖」的隐藏洞穴里，你会发现一只大虫子的尸体，对着它来一发「梦之钉」便可开启「格林剧团」
全成就指南    图标 成就      盛大演出
先完成「格林」布置的两次任务，然后在剧团打败「格林」    仪式：结局一
打败「格林」后，完成「格林」布置的第三次任务，然后在剧团打败「梦魇之王」    驱逐：结局二
打败「格林」后，到「深邃巢穴」去找「布鲁姆」，
「布鲁姆」会劝你和他一同反抗团长「格林」；
然后到「呼啸悬崖」(开启「格林剧团」的地方) 与 「布鲁姆」一起毁掉 「梦魇之灯」    因为是双结局，所以「仪式」和「驱逐」不能在同一个存档中完成
新增护符 格林剧团 DLC 新增了 5 个新的护符 (其实是 4 个，有两个护符只能 2 选 1)
   护符37：梦之盾     在「安息之地」的隐藏房间里获得          护符38：编织者之歌     在「深邃巢穴」里获得          护符39：飞毛腿     找到「店主的钥匙」后，在「德特茅斯」的城镇商人处购买 (400 吉欧)       护符40：格林之子     开启格林剧团后，在「格林」处获取</description>
    </item>
    
    <item>
      <title>空洞骑士：存档备份方法</title>
      <link>https://mogeko.github.io/2018/021/</link>
      <pubDate>Sun, 30 Sep 2018 19:17:00 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/021/</guid>
      <description>-- 一个简单的方法备份「空洞骑士」的存档文件。
备份存档文件有个以下好处：
 因为众所周知的原因，Steam 云有时会不稳定，定期手动备份存档可以减少因云备份失败造成的进度丢失 可以较为快速的完成某些不可能在同一存档中完成的成就  正文 使用 Win键 + R 呼出「运行」，然后输入
%HOMEDRIVE%%HOMEPATH%\AppData\LocalLow\Team Cherry\Hollow Knight
在弹出的文件夹中可以看到以下文件
user[数字].dat
就是存档文件，数字 (1 - 4) 表示第几个存档。
原文地址：「空洞骑士」存档备份方法 | Steam 社区
作者：依然是 Mogeko ٩(●˙▿˙●)۶

 ·End·</description>
    </item>
    
    <item>
      <title>空洞骑士：寻神者 DLC 全成就指南</title>
      <link>https://mogeko.github.io/2018/020/</link>
      <pubDate>Sun, 30 Sep 2018 08:59:00 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/020/</guid>
      <description>爆肝 20 多个小时终于打完了 QAQ 写篇指南压压惊 _(:з」∠)_
寻神者 DLC 是真的难，推荐大家在完成主线剧情，做好心理准备，写好遗书后，再开启
我操你大爷的开发者 QAQ
开启方法 找一个简单钥匙 开启寻神者 DLC 需要一个「简单钥匙」，如果身上有的话可以跳过
首先来到「王国边缘」的愚人竞技场，从竞技场下方经过长椅，在长椅和尽头的温泉之间，上方有通道可以跳上去。
把墙壁撸穿，可以打开一个隐藏房间
进入隐藏房间，可以看到一个「苍白潜伏者」，他一看到你就会跑。追上并杀死他，他身上会掉一个「简单钥匙」
开启「神居」 来到皇家下水道，在** 「吸虫之母」**的家门口向上走，来到如图位置 (大概在长椅的下方)，跳起来对着墙壁来一发，进入隐藏通道。
一直往左走，直到来到一个名为「垃圾坑」的地方
「垃圾坑」中有一个上锁的棺材，用「简单钥匙」打开后，会掉一个「神明调谐器」
此时对着棺材中那个中暑的“尸体” 莫挨老子，老子没中暑 QAQ 来一发「光之钉」，开启「神居」
全成就指南    图标 成就      兄弟：完成「大师万神殿」挑战    灵感：完成「艺术家万神殿」挑战    专注：完成「贤者万神殿」挑战    完成三个挑战后会解锁「骑士万神殿」
   图标 成就      灵魂与阴影：完成「骑士万神殿」挑战    完成四个挑战后会解锁「圣巢万神殿」
   图标 成就      拥抱虚空：完成「圣巢万神殿」挑战    关于「束缚」 如果你觉得还是不过瘾，还可以通过束缚「骨钉」、「外壳」、「护符」、「灵魂」来提升难度。</description>
    </item>
    
    <item>
      <title>尘埃 4：新手入坑指北</title>
      <link>https://mogeko.github.io/2018/019/</link>
      <pubDate>Fri, 28 Sep 2018 10:09:14 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2018/019/</guid>
      <description>「尘埃 4」是经典越野赛车系列「尘埃」的正统续作，是一款非常优秀的赛车游戏，不过因为不支持中文、复杂的操作等原因劝退了不少萌新。 其实我也是萌新_(:з」∠)_ 这篇指南就简单介绍一下玩「尘埃 4」所需要的一些基本知识，希望对各位有所帮助(○&amp;rsquo;◡&amp;rsquo;○)ﾉ♥
键位操作 《尘埃 4》整体偏硬核，键位和参数较多，很多地方需要玩家自己调教才能找到自己的舒服点，这里只介绍默认的操作键位。
《尘埃 4》中的操作分为两种模式：玩家模式 (简单模式) 和 运动模式 (硬核模式)
简单模式中简化了很多细节的操作比如 换挡、离合、雨刮器
等。
手柄因为键位有限，即使是在硬核模式中，也简化了部分操作，需要玩家自己设置。
   动作 键盘键位 手柄键位     油门 A RT   刹车 (倒车) Z LT   左转/右转 ，/。 左摇杆   镜头 (视角) C Y   离合器 L 无   手刹 空格键 B   车头灯 H RB   雨刮器 W LB   重置车辆 F2 十字键↑   路边维修 F3 十字键↓   升档 S A   降档 X X   移动视角 (后/左/右/上/下) M / Delet / PageDown / Home / End 右摇杆   调整座位 1 / 2 / 4 / 5/ 6 / 7 无   左驾驶位 Comma 无   右驾驶位 FullStop 无   课程提示 Shift 无   通话 Alt 无   切换语音通话 方向键→ 无    游戏界面 这部分是为了英语不好的同学写的，不需要的同学请跳过</description>
    </item>
    
    <item>
      <title>使用 Hugo &#43; GitHub Pages 搭建个人博客</title>
      <link>https://mogeko.github.io/2018/018/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2018/018/</guid>
      <description>正如你所看到的，本博客换了一个主题。但你们看不到的是，本博客将静态页面生成引擎换成了 Hugo
Hugo 和 Hexo 一样，是一种通用的网站框架。严格来说，这类应用应该被称作静态网站生成器。这类应用将 Markdown 文件和主题一起编译成由 HTML、CSS、JavaScript 组成的静态网页。然后上传到 GitHub 上，通过 GitHub 提供的静态页面托管服务 (GitHub Pages) 进行访问。
这里就写一篇文章来记录一下踩过的坑。
本站目前使用的主题是 Hello Programmer，要配合 Hugo 使用。今后会写一篇文章来详细介绍。
准备工作  一个 Github 账号。 &amp;lt;- 我们要使用它提供的 Github Pages 服务来搭建博客 https://github.com/ Hugo &amp;lt;- 博客框架，将 Markdown 文档渲染成网页 https://github.com/gohugoio/hugo Git &amp;lt;- 用来发布博客 https://git-scm.com/
正文 安装 Git 如果已经装好了 Git 的同学可以跳过了 与 Hexo 一样，Hugo 也需要使用 Git 进行发布。
  首先去官网下载各自的安装包。官网 Git 的官网是英文的，点 [Downloads for Windows] 下载。
下载好后，双击安装包，就像安装普通软件一样安装。
安装好后打开按 Win 键 + R，输入 cmd，回车。</description>
    </item>
    
    <item>
      <title>本地搭建 KMS 激活服务</title>
      <link>https://mogeko.github.io/2018/017/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2018/017/</guid>
      <description>前面有一篇文章介绍了如何用 KMS 服务在线激活 Windows / Office。 这个方法很好，但是也存在问题。KMS 服务激活一次可以正常使用 180 天，过期后自动给你续 180 天，如此重复。如果 KMS 激活服务器一直运行着还好，但如果服务器挂掉了呢？ 要解决这个问题，最直接的方法就是让 KMS 激活服务器保持稳定不宕机，这显然是不现实的。毕竟是私人搭的服务器，别免费给你用，不稳定也是情有可原的。所以我们不妨换个思路：既然别人的服务器不稳定，我们为何不在本地自己搭一个呢？ 今天，我就教大家如何在本地搭建 KMS 激活服务器。
免费开源的 KMS 激活服务器有很多，我们今天使用的 vlmcsd 是比较流行的一种。
准备工作  vlmcsd -&amp;gt; GitHub 仓库 ‎VOL 版的 Windows 或 Office (零售版的 Office 可以通过简单的脚本转换为 VOL 版的 Office)  正文 vlmcsd 本身是跨平台的，vlmcsd 可以在 Linux，FreeBSD，Windows XP，Windows 7，Windows 8， Windows 8.1 ，Windosw 10 &amp;hellip; 上运行。不过不知道什么原因我的电脑上跑起来。按照网上的说法，该软件对 Windows 10 的兼容不怎么好，不过我们可以曲线救国：使用 Windows Subsystem for Linux (WSL) 来跑这个服务器，从而实现本地激活。(32 位 Windows 10 用户哭晕在厕所_(:з」∠)_)</description>
    </item>
    
    <item>
      <title>WSL 的安装与使用</title>
      <link>https://mogeko.github.io/2018/016/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2018/016/</guid>
      <description>16 年 12 月份的时候，微软发布了 Windows Subsystem for Linux (WSL)，通过子系统的方式运行了一个完整的 Linux 系统。使得在 Windows 中使用 Linux 中的工具链成为可能。(Windows 果然是最好的 Linux 发行版)
从微软宣布 WSL 的第一天起，我就一直在关注这项技术。因为我虽然通过双系统的方式安装了 Ubuntu，但切换系统需要从启的机制确实不方便，让我离开 Windows 又实在是不太现实。 (学习的原因，离不开 Visual Studio 和 Adobe 全家桶) WSL 似乎是平衡性能和易用性的最好解决方案了。怎奈何 WSL 只支持 64 位的系统，让我这台老电脑很是尴尬。
如今换电脑了！终于可以享受 WSL 的便利了！！ (*^▽^*)
第一次使用时，如果发现没有 WSL 中没有网络连接，可以试着重启一下 WSL，还是没网重启一下 Windows
安装 用管理员权限打开 PowerShell 并运行下面的命令
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux  或者：控制面板 -&amp;gt; 程序和功能-&amp;gt; 启用或关闭 Windows 功能 -&amp;gt; 勾选 适用于 Linux 的 Windows 子系统 重启电脑
打开应用商城，搜索：WSL，可根据需求选择安装一个或多个 Linux 系统 安装完成后再开始菜单中启动。 第一次启动会需要初始化，需要配置一段时间。 配置结束后会让你输入用户名和 root 密码 (输入 root 密码时没有显示是正常的；root 密码请务必牢记) 然后就可以使用了！</description>
    </item>
    
    <item>
      <title>使用 Android 手机搭建 KMS 激活服务器</title>
      <link>https://mogeko.github.io/2018/015/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2018/015/</guid>
      <description>经测试，以前的方法已经失效了。
今天就教大家一个新的方法在 Android 手机上安装 KMS 激活服务。而且新方法不需要 Magisk 框架，相比于原来的方法更简单安全。
需要 Magisk 框架 -&amp;gt; Magisk 介绍与简易安装教程
老师让做 PPT 但电脑里没装 Office，怎么办？ 答案当然是买一个！ 但对于没钱买正版的同学怎么办呢？ 其实，可以下载批量激活版（VOL 版）的 Office，然后用 KMS 激活。 今天就教大家如何用手机搭建 KMS 激活服务器来激活 VOL 版的 Windows 或 Office。（零售版（Retail 版）的 Office 可以用脚本转换为 VOL 版，然后作为 VOL 版 Office 激活） 如果不知道你安装的 Office 是哪个版本，可以用以下方法查看。-&amp;gt; 判断你安装的 Office 是哪个版本
准备工作  Magisk 框架 -&amp;gt; Magisk 介绍与简易安装教程 ‎kms-server（Magisk 模块） -&amp;gt; [适用 ARMv7 手机模块]() [适用 ARM64v8 手机的模块]() ‎VOL 版的 Windows 或 Office Termux -&amp;gt; 官网 下载地址 vlmcsd -&amp;gt; GitHub 仓库  正文 Termux + vlmcsd 搭建 KMS 激活服务器 (新方法) 安装 Termux 这个方法虽然不依赖 Magisk，但我们需要安装一个名为 Termux 的应用。</description>
    </item>
    
    <item>
      <title>使用 KMS 激活 Windows / Office</title>
      <link>https://mogeko.github.io/2018/014/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2018/014/</guid>
      <description>事实上，我一向不鼓励使用盗版系统 / 软件的。但对于穷人 (学生党) 来说，需要使用相关软件却买不起正版，使用盗版也是没办法的事情。 对于想使用 Windows / Office 却没有足够资金购买正版的用户来说，很多人会选择 KMSpico 等激活工具进行激活，但事实上，大多数这类工具都带有病毒，轻则劫持主页，重则加密硬盘 (勒索病毒)。 自从上次我妹因此中毒后，我就开始了如何安全的激活 Windows / Office 的研究。KMS 激活服务便是我的答案。
这里使用的 KMS 激活服务器地址为：kms.03k.org，属于网友自建的 KMS 激活服务器。如果服务器地址失效的话，你也可以使用百度 / Google 等搜索引擎搜索 KMS 激活服务器地址 来替换。
当然，你也可以自建 KMS 激活服务器：
 使用 Android 手机搭建 KMS 激活服务器
 本地搭建 KMS 激活服务
  正文 激活 Windows KMS 激活服务只能激活批量授权版 Windows (VOL 版)，无法激活零售版 Windows (Retail 版)。
以 Windows 10 Pro 为例 想要激活 VOL 版 Windows 10 pro，只需要用管理员权限打开一个 cmd，然后依次执行以下命令便可。
slmgr.vbs -upk slmgr.</description>
    </item>
    
    <item>
      <title>BaiduPCS-Go | 百度网盘命令行工具 (基于 Go)</title>
      <link>https://mogeko.github.io/2018/013/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2018/013/</guid>
      <description>提到百度网盘，想必大家都很熟悉吧。
百度网盘自 2012 年上线运行以来，迅速积累了大量用户。但是狗改不了吃屎，作为百度的产品，百度网盘现在是越来越恶心了，不给充钱就限速，官方居然还不承认（百度网盘 - 维基百科 ）其实给免费账号限速也是可以理解的（毕竟别人也是要吃饭的，没有利润的产品肯定是走不远的）但百度居然给我限速到 20 KB/s！这还能用？！！
但人们的力量是强大的，被百度恶心到的用户们很快就找到了破解百度网盘限速的方法——多线程下载。你不是只给我 20 KB/s 吗？我开TM 500 个线程，一样把 10 M/s 的带宽占满。于是乎一大批第三方网盘拔地而起，例如：PanDownload（已停止运营）、Village（Android）、油猴脚本 等。
今天介绍的 BaiduPCS-Go 也是其中一个，相比于其他第三方网盘，具有以下特点：
 不需要 Aria2、IDM 等第三方软件 自定义线程数（建议将最大线程数设置为 50 ~ 500，线程开太多会造成搞负载） 支持通配符匹配路径 通配符-维基百科 命(bi)令(ge)行(gao)  BaiduPCS-Go 的 Github
安装 得益于 Go 的跨平台编译的特性，BaiduPCS-Go 几乎可以支持所有操作系统，只需要在 Releases 中选取合适的版本下载、运行就可以了
 下载 BaiduPCS-Go  以 Windows 为例，根据我的电脑 CPU 下载并解压 BaiduPCS-Go-v3.2.1-windows-x86.zip
可以直接双击运行（进入 console 模式）
也可以在命令行中运行
在Android 与 iOS 上安装 在 Android 上安装与在桌面上安装的思路差不多，都是 下载 -&amp;gt; 解压 -&amp;gt; (在命令行中)运行</description>
    </item>
    
    <item>
      <title>如何给 Steam 换皮肤</title>
      <link>https://mogeko.github.io/2017/012/</link>
      <pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/012/</guid>
      <description>Steam 大法吼啊！！！
刚刚过去的黑五，大家有没有愉快的剁手啊？😏😏
虽然我们嘴上骂着 G胖，但身体还是很诚实的嘛，不然也不会这么心甘情愿的给 G胖 贡献销量嘛😏
尽管 V社出品的游戏个个精品，但 V社家的 Steam 是真的难用，又慢，又丑。慢是网络的问题，没办法；但丑，是真的没得洗。
 审美是很个人的事，反正我反正觉得 Steam 原版的皮肤丑到爆，如果你觉得原版皮肤好看也是没有问题的(・ω・)ノ❤
 V社 的游戏向来以它的开放性著称，想想当年鼓励mod催生了CS，决胜之日， 甚至CS又催生了各种跳跃、魔兽、僵尸、龙珠各种好玩的服务器，原版被改的面目全非，唯一不变的是好玩。（扯远了…） 其实， V社 的开放性不仅仅体现在它们家的游戏上，在 Steam 上也是有体现的！觉得 Steam 丑？没事，换掉就可以了！没错，Steam是可以换皮肤的，而且不仅仅是换个颜色怎么简单，整套 UI 都可以被替换，唯一能限制你的，只有你的想象力。
先秀一波皮肤再说（逃
给 Steam 换皮肤 找皮肤 先祭出几个下载 Steam 皮肤的网站
 SteamSkins GameBanana 如果你想自定义你的皮肤，你需要 Merto 如果你想要更复杂的自定义你的 Steam 界面，而不仅仅是定制一下皮肤颜色什么的，那你就需要 Steam Customizer 了。（不过，该网站下载的所有皮肤文件都是独特的 StSkin 格式。你需要专门下载该网站提供的皮肤管理工具才可以打开它。点击网站页面的右上角 Download Tool 就可以打开工具下载页面了。）  网上可以下载 Steam 皮肤的网站真的太多了，远不止我提到的这些，有的甚至可以根据你喜欢的颜色为你定制皮肤（比如 Merto 和 Steam Customizer），有兴趣的同学可以自行 Google。
怎么换？ 如果挑好喜欢的皮肤，就把它下载下来。下载好后，解压压缩文件。（你解压出来的文件就是你的皮肤了ʕ•̀ω•́ʔ✧）
把解压好的文件拷贝到 Steam 目录中的 Skins 文件夹 里（默认路径是是 C:\Program Files\Steam\Skins）</description>
    </item>
    
    <item>
      <title>Android 使用 Chrome 的五个理由</title>
      <link>https://mogeko.github.io/2017/011/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/011/</guid>
      <description>PC 上的 Chrome 毫无疑问是最好的浏览器之一。那市场份额，都快逼近 IE 了。不仅把曾经的老大哥 IE 远远的甩在后面，还把被微软委以大任的 Microsoft Edge 按在地上摩擦，弄得微软很是尴尬。然而在 Google 自家的 Android 上，发展得却不如 PC 上好，有的地方就连我这种骨粉也觉得用起来不舒服。不过，最近几次更新中，我觉得是越改越好了，特别是今天，无意中发现了几个新功能，突然打开了新世界的大门，也让我对 Chrome 的评价从 “不推荐”变成“特别推荐”！
理由一：信仰！！！ Google 大法好！
不需要解释，谁用谁知道！
垃圾百度，吃枣药丸！！！
理由二：人性化的操作逻辑 发现新大陆前你要是问我，最好的手机浏览器是什么？我会毫不犹豫的回答：IE（喵喵喵？？？）
没错，就是那个 PC 上难得跟屎一样的 IE，不过我说的是手机浏览器（Android 和 iOS 就别想了，Windows Phone 独占）
&amp;lt;img alt=&amp;ldquo;Internet Explorer&amp;rdquo; src=&amp;ldquo;https://mogeko.github.io/images/011/wp_IE11)
↑我的 Lumia 900 找不到了，图片是随便找的（好怀念当年那个在WP上用浏览器上贴吧的时代啊，结果直到我换手机，贴吧都没出 WP 版的客户端）
PC 上的 IE 和 WP 上的 IE 完全是两回事，PC 上不仅界面丑，还慢得跟坨屎一样。而 WP 上，速度快，动画华丽，最主要的，是它吧地址栏（搜索栏）放在了下面！不得不说，非常棒的设计，只可惜 WP 死得太早。好在我们有 Chrome。
你 TM 逗我呢，难道 Chrome 的地址栏不在上面？
事实上，Google 已经重新设计了地址栏（搜索栏）的位置，只不过现在还在实验性特征中，你需要自己开启。(V59+ 的版本才支持)
开启方法： 进入 chrome://flags 页面(在地址栏中输入 chrome://flags，回车）。找到并开启 #enable-chrome-home 和 #ntp-google-g-in-omnibox 两个选项。（另外，Chrome的页内搜索做的很不错。在右侧有匹配项在页内位置的显示，以及当前位置。）</description>
    </item>
    
    <item>
      <title>神奇的 Magisk</title>
      <link>https://mogeko.github.io/2017/010/</link>
      <pubDate>Sat, 02 Dec 2017 18:00:00 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2017/010/</guid>
      <description>今天为大家介绍一款神奇的 Android 第三方接口 —— Magisk
Root —— 玩家与厂商间的博弈 Android 从诞生之日起就高举着开源的大旗，这也是它成功的原因之一。而它的开放性也成功的吸引到了一大批爱折腾的人，从而诞生出了 root（此处特制 Android 中的 root）。
根据 Wikipedia 的释义，root 指的是使用户取得 Android 操作系统的超级用户（Super User）许可权的技术。用户通过 root，可以越过手机制造商的限制，卸载手机制造商预装在手机中某些应用，以及运行一些需要超级用户权限的应用程序。同时，root 也可能会让手机变得“不安全”（并不是说 root 使手机变得不安全，而是一些用户的使用习惯会使 root 后的手机变得危险）。
但是从棉花糖（Android 6.0）开始，Google 基本阻止了以前版本中最流行的 root 方法 —— 即，将 su守护程序 放置到 /system 分区，并在启动时取得所需的权限。道高一尺，魔高一丈，于是就出现了 systemless 的 root 方式，因为它不采取任何方式修改 /system 分区。
出于增加安全性的考虑，Google 推出了 SafetyNet 这样的检测，以确保 Android Pay 等一些 App 的安全运行，玩家不得不在 root 权限和一些有价值的 App 之间作出选择。
这个时候 Magisk 诞生了。
Magisk 什么是 Magisk Magisk 是出自一位台湾学生 @topjohnwu 开发的 Android 框架，是一个通用的第三方 systemless 接口，通过这样的方式实现一些较强大的功能。</description>
    </item>
    
    <item>
      <title>如何将 Ubuntu 升级到 17.10</title>
      <link>https://mogeko.github.io/2017/009/</link>
      <pubDate>Sat, 02 Dec 2017 11:57:09 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2017/009/</guid>
      <description>Ubuntu 17.10 已经发布了一段时间了，作为 18.04 的预览（热）版。带来了一大波新特性。
其中最重要也是最令我揪心的是 Ubuntu 将放弃 Unity 回归 Gnome。对于我们这些习惯了 Unity 的用户来说，这个决定简直蠢到家了。虽然 Unity 是丑了点，但比 Gnome 好用到不知道那里去了！这也是我迟迟没有升级的主要原因。
目前 Ubuntu 17.10 不是长期支持版本（LTS）！！！
正文 Ubuntu 官方推荐的升级策略是“依次升级”。较低的版本想要升级到最高的版本，需要想升级到较高的版本，再从较高的版本升级到最高的版本。也就是说 16.10 想要升级到 17.10 需要先升级到 17.04。
 16.04 -&amp;gt; 16.10 -&amp;gt; 17.04 -&amp;gt; 17.10  每个版本中的升级方法都是相似的。这里介绍两种比较安全的升级方法
强烈建议升级前先备份！！！ -&amp;gt; 如何备份 Ubuntu
小白最爱的升级方法（无脑下一步） 在 Dash 中搜索并启动 Update Manager
选择更新选项卡 (Updates)，然后在窗口底部，将通知设置从 “长期支持版本”(For long-term support version) 更改为任何新版本 (For any new version)。
等了一会儿，系统会通知你有新的发行版可用
 如果不想等，可以在命令行中输入命令：  sudo do-release-upgrade -d  这个命令可以强制搜索新的版本</description>
    </item>
    
    <item>
      <title>Reabble | Kindle 下的 RRS 神器</title>
      <link>https://mogeko.github.io/2017/008/</link>
      <pubDate>Sat, 30 Sep 2017 17:40:09 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2017/008/</guid>
      <description>Amazon 官方系统的 Kindle 中内置了一个 体验版浏览器，用起来真的很鸡肋。一开始根本不知道 Amazon 到底在想什么，做怎么个又慢，又不稳定的浏览器，浪费老子硬盘。直到那天，手机被收了(:°з」∠) 其实真正让我爱上那个辣鸡浏览器的是 RSS 神器——Reabble。
那是一个血雨腥风的晚自习，老师一边讲着刚考完的月考试卷一边骂人。 在教室的第一排，我蜷缩在书本堆中，偷偷用 Kindle 内置的辣鸡浏览器连着教务处的 WiFi 逛知乎。。。（那时真的好 6，老师与我的直线距离不到 3 米，现在想想都觉得后怕） 就在那天晚上，我发现了这个 Kindle 上的 RSS 神器。
Reabble Reabble 是专为 Kindle 设计的 RSS 阅读器，亮点是 没有任何滑动操作，全程点击操作， 响应速度也很快。
 Kindle 上的 RSS 聚合阅读应用，专为电子墨水屏特性设计，让你可以心无旁骛地沉浸于资讯阅读。也能用于其它带浏览器的设备如手机、Nook、Kobo、博阅等。
Reabble 入门教程reabble.com/help
 Reabble 官方网站 Reabble 入门教程
使用方法 用电脑打开 Inoreader，注册一个帐号，并在里面添加一些订阅。
打开 Reabble，点击 用 Inoreader 帐号登录，用刚才注册的 Inoreader 帐号登录 Reabble。
在这里，你刚刚订阅的文章都会显示出来
确认没有问题后访问 https://reabble.com/code，得到 12 个字母的登录码。
打开你的 Kindle 主屏右上角的菜单，选择 体验版网页浏览器 并打开网页 reabble.com/login，点 登录 按钮，用上刚刚得到的登录码登录。</description>
    </item>
    
    <item>
      <title>Kindle 使用技巧</title>
      <link>https://mogeko.github.io/2017/007/</link>
      <pubDate>Sat, 30 Sep 2017 12:57:09 +0800</pubDate>
      
      <guid>https://mogeko.github.io/2017/007/</guid>
      <description>入手 Kindle 快一年半了，当时家里人都觉得我只是一时兴起，买回来迟早要吃灰的。但没想到我断断续续的用 Kindle 看了 100 本书了！！！感觉好有成就感。
今天就结合我对 Kindle 一年多的使用，谈谈我知道的一些 Kindle 的使用技巧。
欢迎补充~~
导入电纸书 用 USB数据线 导入 将 Kindle 用 USB数据线 连上电脑，就可以将电纸书导入到 Kindle 中。优点：简单实用，方便快捷 缺点：此方法导入的电纸书只会保存到本地，不会上传到云端上，如果手贱误删了，就没了🙄；必须有电脑和 USB 数据线才能使用
将 Kindle 连上电脑 -&amp;gt; 打开 Kindle 对应的磁盘 -&amp;gt; 打开 documents 这个文件夹 -&amp;gt; 将你准备好的电纸书拖到这个文件夹中。
Kindle 支持以下文件格式：
 TXT 文件 (.txt) Mobi 格式电子书 AZW3 格式电子书 Adobe PDF (.pdf) 文档 EPUB 格式电子书（多说 OS） UMD 格式电子书（多说 OS） JPEG 格式的图片（多说 OS）  推荐几个找书的网站：
 ForFrigg -&amp;gt; 这个网站非常好用，但是需要翻墙 ManyBooks.</description>
    </item>
    
    <item>
      <title>Fira Code | 为写程序而生的字体</title>
      <link>https://mogeko.github.io/2017/006/</link>
      <pubDate>Sat, 16 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/006/</guid>
      <description>程序员福利！！！ 今天为大家带来一个专为程序员写程序设计的字体 —— Fira Code Fira 是 Mozilla 公司（火狐浏览器她爹）主推的字体系列。Fira Code 是其中的一员，专为写程序而生。出来具有等宽等基本属性外，还加入了编程连字特性（ligatures）。
Fira Code 就是利用这个特性对编程中的常用符号进行优化，比如把输入的「!=」直接显示成「≠」或者把「&amp;gt;=」变成「≥ 」等等，以此来提高代码的可读性。 代码示例 Ruby: JavaScript: Erlang: Elixir: Go: LiveScript: Clojure: Swift: 正文 安装 Fira Code 使用 .ttf 文件安装 访问此网站 https://github.com/tonsky/FiraCode 找到 Download 这个链接，单击它。
单击这个地址可以下载 v1.204 版的 Fira Code -&amp;gt; Download v1.204
下载好后，解压它。 打开解压后得到的文件夹。 打开 /ttf文件夹。 会看到以下文件
Ctrl+A 全选 -&amp;gt; 右键 -&amp;gt; 安装。
使用 Chocolate 安装 关于 Chocolate，请参考这篇文章。 使用以下命令安装
$ choco install firacode  如何使用 只有以下编辑器、浏览器可以完美支持 Fira Code：</description>
    </item>
    
    <item>
      <title>在你的文章中添加 B站的视频</title>
      <link>https://mogeko.github.io/2017/005/</link>
      <pubDate>Sat, 09 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/005/</guid>
      <description>参考 https://github.com/Z4Tech/hexo-tag-bilibili
准备工作  Node.js 这是一个 Hexo插件，所以通过 npm 安装。  正文 安装 hexo-tag-bilibili 这就是那个神奇的插件，名叫 hexo-tag-bilibili。 我们通过 npm 进行安装。 切换到 Hexo 的目录，执行一下命令
$ cd [你的 Hexo目录] $ npm install --save hexo-tag-bilibili  使用 在文章中用一下方式使用此插件 [av_id] 填写视频的 av号。
{% bilibili [av_id] %}  如果有多 p，使用一下格式。[page] 为 P号。
{% bilibili [av_id] [page] %}  例如：
{% bilibili av2271112 %}  高级 配置 你可以配置你的播放器 在 Hexo 的文件夹中，打开 _config.yml文件进行配置。 你可以配置 是否自动播放，播放器的大小 等。 例如
bilibili: width: 452 height: 544  Style 播放器由一个带有 bili_video 类的 &amp;lt;div&amp;gt;标签包装。你可以通过自定义的 css文件修改它的样式。</description>
    </item>
    
    <item>
      <title>使用 Hexo Hey 管理你的博客</title>
      <link>https://mogeko.github.io/2017/004/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/004/</guid>
      <description>在使用 Hexo Hey 之前，我一直在使用 VSCode（配合 vscode-hexo 插件）来管理博客。虽然可以很快捷 的新建,部署, 测试,发布 博客 ，但还是很麻烦，离我理想中的博客平台还有一定的距离。 我在知乎上发现了 Hexo Hey 这个插件，尝试了一下，虽然有各种问题，但确实很好用。 因此决定写一篇文章来介绍一下如何安装, 使用 Hexo Hey。
切换换到 Hexo Hey 后最不习惯的地方就是没有了 VSCode 中那些方便的快捷键了。(ノへ￣、) 擦眼泪……
与 Hexo Hey 比较相似的 Hexo 博客管理程序还有 Hexo Admin。
准备工作  Node.js &amp;lt;- 就是安 Hexo 时用到的拿货，应该已经有了，就不贴安装地址了。 Hexo Hey &amp;lt;- 通过 npm 安装。  正文 安装 Hexo Hey 首先进入已配置好的那个 Hexo 目录：
$ cd [你的 Hexo 目录]  输入一下命令安装 Hexo Hey：
$ npm install hexo-hey --save  然后打开 Hexo 目录 中的 _config.</description>
    </item>
    
    <item>
      <title>Hexo 美化</title>
      <link>https://mogeko.github.io/2017/003/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/003/</guid>
      <description>虽然 NexT 的主题很漂亮，但问题是太受欢迎了，都快烂大街了。 好在它是一个开源项目，我们可以通过修改它的代码来个性话你的博客。 这篇教程要涉及到一些前端知识，可能没有那么 Novice friendly。
因为涉及到对 NexT 代码的修改，搞不好，可能引起 Hexo 无法工作。所以强烈建议使用 Git 对 NexT 进行备份。 具体使用方法请自行 Google。
准备工作  一颗能折腾的心。 一定的前端知识。  正文 最简单的方法 美化你的 Hexo 的最简单方法 -&amp;gt; 安装我修改过的 NexT 在 Hexo 目录中使用命令
$ git clone https://github.com/Mogeko/hexo-theme-next.git themes/next  *记得删掉原来安装过的 NexT。
手动美化 Hexo 如果有能力，推荐跟我一起手动改代码。 最好能明白我给你的代码都是做什么的，将来万一出了问题，也有个找到问题的方向。
圆形头像（头像旋转） NexT 默认的头像是方的。也不是说不好看，就是觉得不习惯，这个要看个人喜好。 在 /source/css/_custom/custom.styl 中添加一下代码就可以吧头像弄成圆的
// 圆形头像 .site-author-image { border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%; transition: 1.4s all; }  然后，添加以下代码可以让头像在鼠标停留时旋转 180°</description>
    </item>
    
    <item>
      <title>使用 Hexo &#43; GitHub Pages 建立自己的博客</title>
      <link>https://mogeko.github.io/2017/002/</link>
      <pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/002/</guid>
      <description>自从我开了这个博客后，就有很多小伙伴问我怎么弄的？（好吧，其实就一个(*/ω＼*)） 为了教她，也为了给各位看官一点参考。我写了这篇文章。 因为她比较小白，所以这篇文章会写得比较详细。
准备工作  一个 Github 账号。 &amp;lt;-我们要使用它提供的 Github Pages 服务来搭建博客 https://github.com/ Node.js &amp;lt;- Hexo 依赖于此 https://nodejs.org/zh-cn/ Git &amp;lt;- 用来发布博客 https://git-scm.com/ Hexo &amp;lt;- 博客框架 https://hexo.io/zh-cn/index.html [非必需]Chocolatey &amp;lt;- 用来安装 Node.js 和 Git https://chocolatey.org/  正文 安装 Node.js &amp;amp; Git 使用 安装包 安装（小白看这里） 首先去官网下载各自的安装包。（地址在上面） 其中 Node.js 一般会有两个版本；都可以用。 Git 的官网是英文的，点 [Downloads for Windows] 下载。
下载好后，双击安装包，就像安装普通软件一样安装。
安装好后打开按 Win键 + R，输入 cmd，回车。 在弹出的黑框框中分别输入
$ node -v  $ npm -v  $ git version  如果显示的是各种的版本号，说明安装成功 使用 Chocolatey 安装 我比较喜欢用 Chocolatey 来安装；比较方便。 虽然赶 apt 还有一段距离，但确实是 Windows 下最好的包管理程序。 有空我会写一篇比较详尽的 Chocolatey 使用教程。</description>
    </item>
    
    <item>
      <title>UAC 白名单</title>
      <link>https://mogeko.github.io/2017/001/</link>
      <pubDate>Fri, 18 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/001/</guid>
      <description>好像废话有点多_(:з)∠)_ -&amp;gt;-&amp;gt; 直接开始的传送门
一直觉得微软为 Windows 引入 UAC 是个明智的选择，它能在一定程度上减少 Windows 平台过于开放，流氓软件肆意横行的局面。 国内的情况比较特殊，因为很多人根本不知道那是什么，无脑点 “允许” 。 都是被那群流氓给教坏的。。。 抛开这些不谈，即使 UAC 的使用很有必要，但每次都弹出的蓝色框框确实很烦人，特别是在那些需要曾经使用管理员权限的软件上。因此，有的人直接选择关闭 UAC ，不过这样却对系统安全性产生了风险。
所以，如何才能在不关闭 UAC 的情况下，让某些应用不经过 UAC 使用管理员权限？
我首先想到的是使用 Autohotkey 帮用户点“允许” 桌面分为三层，分别是 Winlogon Desktop、Screensaver Desktop、Application Desktop。 所有的应用都运行在 Application Desktop 上（ UAC 不算）。UAC 在 Winlogon Desktop 上弹出的窗口。 也就是说，以Autohotkey 所在的位置 UAC 它捞都捞不到。。。
那么，到底要如何干掉 UAC 呢？
经过研究发现，想要在不关闭 UAC 的情况下，让某些应用不经过 UAC 使用管理员权限有两种方法。 分别是使用 任务计划程序 或 Application Compatibility Toolkit (ACT)。 这里只解释使用 任务计划程序。
正文 下面正式开始。
我们以 CMD 为例。 在开始菜单找到 CMD，右键 -&amp;gt; 以管理员身份运行 果不其然弹出了 UAC。 *上面已经解释过了，UAC 截不出来 _(:з)∠)_</description>
    </item>
    
    <item>
      <title>安装 Ubuntu 双系统</title>
      <link>https://mogeko.github.io/2017/000/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mogeko.github.io/2017/000/</guid>
      <description>在很久以前就想试一试Linux了，一直没有实践。一是觉得太麻烦，二是怕把电脑弄坏。后来实践了一次后发现，其实并没有想象中那么难，这是一个完全独立的系统，与隔壁的Windows半毛钱关系都没有。把引导搞定就不怕了。
另外，如果想长期使用； 千万不要上最新的系统！！！ bug多得一逼
准备工作：  一个 &amp;gt;= 4g 的U盘 Ubuntu 的镜像（建议使用16.04）http://www.ubuntu.org.cn/download/desktop UltraISO &amp;lt;- 用来制作引导盘 http://cn.ezbsystems.com/ultraiso/ EasyBCD &amp;lt;- 用来制作、写入引导程序（如果想用 Ubuntu 来引导 Windows 的话也可以不用）http://neosmart.net/EasyBCD/  正文 制作引导盘 &amp;amp; 设置硬盘分区 首先要用 UltraISO 来制作一个引导盘
先打开 UltraISO -&amp;gt; 文件 -&amp;gt; 打开 -&amp;gt; 选择刚刚下好的那个镜像 然后 启动 -&amp;gt; 写入硬件映象 不出意外的话你应该可以看到这个 确保你的U盘能够被识别（红色框出来的地方）
先 格式化 在 写入 等它跑完，引导盘就制作完成了
然后设置分区，为 Ubuntu 空出块地方来 如果是 Windows 10 按 Win键 + X -&amp;gt; 磁盘管理（Windows 7 我记不到了，自己 Google 一下） 图我忘截了 ,,ԾㅂԾ,, 这里给一个官方的教程 如何在 Windows 中对硬盘进行分区 如果压缩出来是绿色的“可用空间”可能会出问题 -&amp;gt;-&amp;gt; 解决方法</description>
    </item>
    
  </channel>
</rss>